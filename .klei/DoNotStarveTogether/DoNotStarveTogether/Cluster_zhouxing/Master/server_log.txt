[00:00:00]: 
System Memory:
	Memory Load: 87%
	Available Physical Memory: 1946m/16125m
	Available Page File: 6269m/27901m
	Available Virtual Memory: 134213478m/134217727m
	Available Extended Virtual Memory: 0m
[00:00:00]: 
Process Memory:
	Peak Working Set Size: 32m
	Working Set Size: 32m
	Quota Peak Page Pool Usage: 222k
	Quota Page Pool Usage: 218k
	Quota Peak Non Paged Pool Usage:20k
	Quota Non Paged Pool Usage: 14k
	Page File Usage: 5m
	Peak Page File Usage: 5m
[00:00:00]: PersistRootStorage is now APP:Klei//DoNotStarveTogether/144818993/Cluster_1/Master/ 
[00:00:00]: Starting Up
[00:00:00]: Version: 561632
[00:00:00]: Current time: Fri Jun 16 09:33:08 2023

[00:00:00]: Don't Starve Together: 561632 WIN32
[00:00:00]: Build Date: 2011
[00:00:00]: Mode: 64-bit
[00:00:00]: Parsing command line
[00:00:00]: Command Line Arguments: -monitor_parent_process 27200 -persistent_storage_root APP:Klei/ -conf_dir DoNotStarveTogether -cluster Cluster_1 -ownernetid 76561198105084721 -ownerdir 144818993 -clouddir 144818993 -backup_log_count 25 -backup_log_period 0 -ugc_directory E:\\SteamLibrary\\steamapps\\workshop -shard Master -secondary_log_prefix master -sigprefix DST_Master -token *********************************************************************************** 
[00:00:00]: Initializing distribution platform
[00:00:00]: Initializing Minidump handler
[00:00:00]: ....Done
[00:00:00]: ....Done
[00:00:00]: Fixing DPI
[00:00:00]: ...Done
[00:00:00]: THREAD - started 'GAClient' (63172)
[00:00:00]: CurlRequestManager::ClientThread::Main()
[00:00:00]: ProfileIndex:0.51
[00:00:00]: Mounting file system databundles/klump.zip successful.
[00:00:00]: Mounting file system databundles/shaders.zip successful.
[00:00:00]: Mounting file system databundles/fonts.zip successful.
[00:00:00]: Mounting file system databundles/anim_dynamic.zip successful.
[00:00:00]: Mounting file system databundles/bigportraits.zip successful.
[00:00:00]: Mounting file system databundles/images.zip successful.
[00:00:00]: Mounting file system databundles/scripts.zip successful.
[00:00:00]: [Steam] SteamGameServer_Init(10999, 27016)
[00:00:01]: [Steam] SteamGameServer_Init success
[00:00:01]: [Connect] PendingConnection::Reset(true)
[00:00:01]: Platform: 1
[00:00:01]: Network tick rate: U=15(2), D=0
[00:00:01]: Network tick rate: U=15(2), D=0
[00:00:01]: Authorized application E:\SteamLibrary\steamapps\common\Don't Starve Together\bin64\dontstarve_dedicated_server_nullrenderer_x64.exe is enabled in the firewall.
[00:00:01]: WindowsFirewall - Application already authorized
[00:00:01]: OnLoadPermissionList: APP:Klei//DoNotStarveTogether/144818993/client_save/blocklist.txt (Failure)
[00:00:01]: THREAD - started 'StreamInput' (66340)
[00:00:01]: OnLoadPermissionList: APP:Klei//DoNotStarveTogether/144818993/client_save/adminlist.txt (Failure)
[00:00:01]: OnLoadUserIdList: APP:Klei//DoNotStarveTogether/144818993/client_save/whitelist.txt (Failure)
[00:00:01]: Offline user ID: OU_76561198105084721
[00:00:01]: HardwareStats:
  OS                        
    name                      Microsoft Windows 11 专业版
    version                   10.0.22000
    platformSpecific          SP 0.0
    architecture              64 位
  CPU                       
    clockSpeed                2500
    name                      12th Gen Intel(R) Core(TM) i5-12500H
    manufacturer              GenuineIntel
    numCores                  12
    features                  SSE,SSE2,SSE3,SSSE3,SSE41,SSE42,AVX
  RAM                       
    megsOfRam                 16384
  GPU                       
    megsOfRam                 4095
    videoModeDescription      
    name                      NVIDIA GeForce RTX 3060 Laptop GPU
    driverVersion             30.0.15.1264
    driverDate                20220425000000.000000-000
    refreshRate               0

[00:00:01]: cGame::InitializeOnMainThread
[00:00:01]: Renderer initialize: Okay
[00:00:01]: AnimManager initialize: Okay
[00:00:01]: Buffers initialize: Okay
[00:00:01]: cDontStarveGame::DoGameSpecificInitialize()
[00:00:01]: GameSpecific initialize: Okay
[00:00:01]: cGame::StartPlaying
[00:00:01]: AppVersion::GetArchitecture() x64
[00:00:01]: LOADING LUA
[00:00:01]: DoLuaFile scripts/main.lua
[00:00:01]: DoLuaFile loading buffer scripts/main.lua
[00:00:01]: Translator:LoadPOFile - loading file: scripts/languages/chinese_s.po	
[00:00:02]:   taskgrouplist:	default	联机版	
[00:00:02]:   taskgrouplist:	classic	经典	
[00:00:02]:   taskgrouplist:	cave_default	地下	
[00:00:02]:   taskgrouplist:	lavaarena_taskset	熔炉	
[00:00:02]:   taskgrouplist:	quagmire_taskset	暴食	
[00:00:02]: Running main.lua
	
[00:00:02]: Could not load modindex	
[00:00:02]: ModIndex: Beginning normal load sequence for dedicated server.
	
[00:00:02]: SUCCESS: Loaded modoverrides.lua	
[00:00:02]: modoverrides.lua enabling workshop-1378549454	
[00:00:02]: modoverrides.lua enabling workshop-856487758	
[00:00:02]: modoverrides.lua enabling workshop-347079953	
[00:00:02]: modoverrides.lua enabling workshop-786556008	
[00:00:02]: modoverrides.lua enabling workshop-375850593	
[00:00:02]: modoverrides.lua enabling workshop-1207269058	
[00:00:02]: modoverrides.lua enabling workshop-1185229307	
[00:00:02]: modoverrides.lua enabling workshop-666155465	
[00:00:02]: modoverrides.lua enabling workshop-362175979	
[00:00:02]: modoverrides.lua enabling workshop-661253977	
[00:00:02]: modoverrides.lua enabling workshop-569043634	
[00:00:02]: modoverrides.lua enabling workshop-378160973	
[00:00:02]: modoverrides.lua enabling workshop-375859599	
[00:00:02]: ModIndex:GetModsToLoad inserting moddir, 	workshop-347079953	
[00:00:02]: ModIndex:GetModsToLoad inserting moddir, 	workshop-362175979	
[00:00:02]: ModIndex:GetModsToLoad inserting moddir, 	workshop-375850593	
[00:00:02]: ModIndex:GetModsToLoad inserting moddir, 	workshop-661253977	
[00:00:02]: ModIndex:GetModsToLoad inserting moddir, 	workshop-786556008	
[00:00:02]: ModIndex:GetModsToLoad inserting moddir, 	workshop-856487758	
[00:00:02]: ModIndex:GetModsToLoad inserting forcedmoddir, 	workshop-1207269058	
[00:00:02]: ModIndex:GetModsToLoad inserting forcedmoddir, 	workshop-1185229307	
[00:00:02]: ModIndex:GetModsToLoad inserting forcedmoddir, 	workshop-1378549454	
[00:00:02]: ModIndex:GetModsToLoad inserting forcedmoddir, 	workshop-666155465	
[00:00:02]: ModIndex:GetModsToLoad inserting forcedmoddir, 	workshop-378160973	
[00:00:02]: ModIndex:GetModsToLoad inserting forcedmoddir, 	workshop-375859599	
[00:00:02]: ModIndex:GetModsToLoad inserting forcedmoddir, 	workshop-569043634	
[00:00:02]: Could not load mod_config_data/modconfiguration_workshop-347079953_CLIENT	
[00:00:02]: Loading mod: workshop-347079953 (Display food values) Version:1.61	
[00:00:02]: Could not load mod_config_data/modconfiguration_workshop-362175979_CLIENT	
[00:00:02]: Loading mod: workshop-362175979 (Wormhole Marks) Version:1.4.5	
[00:00:02]: Could not load mod_config_data/modconfiguration_workshop-375850593_CLIENT	
[00:00:02]: Loading mod: workshop-375850593 (Extra Equip Slots) Version:1.8.0	
[00:00:02]: Could not load mod_config_data/modconfiguration_workshop-661253977_CLIENT	
[00:00:02]: Loading mod: workshop-661253977 ( Don't Drop Everything) Version:11:15 2020-08-10	
[00:00:02]: Could not load mod_config_data/modconfiguration_workshop-786556008_CLIENT	
[00:00:02]: Loading mod: workshop-786556008 (45 Inventory Slots) Version:1.4.1	
[00:00:02]: Could not load mod_config_data/modconfiguration_workshop-856487758_CLIENT	
[00:00:02]: Loading mod: workshop-856487758 (Quick Drop) Version:1.1	
[00:00:02]: Could not load mod_config_data/modconfiguration_workshop-1207269058_CLIENT	
[00:00:02]: Loading mod: workshop-1207269058 ( Simple Health Bar DST) Version:2.16	
[00:00:02]: Could not load mod_config_data/modconfiguration_workshop-1185229307_CLIENT	
[00:00:02]: Loading mod: workshop-1185229307 (史诗般的血量条) Version:73	
[00:00:02]: Could not load mod_config_data/modconfiguration_workshop-1378549454_CLIENT	
[00:00:02]: Loading mod: workshop-1378549454 ([API] Gem Core) Version:5.1.43	
[00:00:02]: Could not load mod_config_data/modconfiguration_workshop-666155465_CLIENT	
[00:00:02]: Loading mod: workshop-666155465 (Show Me (Origin)) Version:0.58	
[00:00:02]: Could not load mod_config_data/modconfiguration_workshop-378160973_CLIENT	
[00:00:02]: Loading mod: workshop-378160973 (Global Positions) Version:1.7.4	
[00:00:02]: Could not load mod_config_data/modconfiguration_workshop-375859599_CLIENT	
[00:00:02]: Loading mod: workshop-375859599 (Health Info) Version:2.2.03	
[00:00:02]: Could not load mod_config_data/modconfiguration_workshop-569043634_CLIENT	
[00:00:02]: Loading mod: workshop-569043634 (Campfire Respawn) Version:1.6.8.1	
[00:00:02]: applying configuration_options from modoverrides.lua to mod workshop-1378549454	
[00:00:02]: Overriding mod workshop-1378549454's option craftinghighlight with value false	
[00:00:02]: applying configuration_options from modoverrides.lua to mod workshop-856487758	
[00:00:02]: applying configuration_options from modoverrides.lua to mod workshop-347079953	
[00:00:02]: Overriding mod workshop-347079953's option DFV_Language with value EN	
[00:00:02]: Overriding mod workshop-347079953's option DFV_MinimalMode with value default	
[00:00:02]: applying configuration_options from modoverrides.lua to mod workshop-786556008	
[00:00:02]: Overriding mod workshop-786556008's option EXTRASLOT with value 0	
[00:00:02]: Overriding mod workshop-786556008's option ENABLEBACKPACK with value false	
[00:00:02]: Overriding mod workshop-786556008's option INVENTORYSIZE with value 45	
[00:00:02]: applying configuration_options from modoverrides.lua to mod workshop-375850593	
[00:00:02]: applying configuration_options from modoverrides.lua to mod workshop-1207269058	
[00:00:02]: applying configuration_options from modoverrides.lua to mod workshop-1185229307	
[00:00:02]: Overriding mod workshop-1185229307's option  with value 	
[00:00:02]: Overriding mod workshop-1185229307's option  with value 	
[00:00:02]: Overriding mod workshop-1185229307's option  with value 	
[00:00:02]: Overriding mod workshop-1185229307's option WETNESS_METER with value false	
[00:00:02]: Overriding mod workshop-1185229307's option NOEPIC with value false	
[00:00:02]: Overriding mod workshop-1185229307's option FRAME_PHASES with value true	
[00:00:02]: Overriding mod workshop-1185229307's option DAMAGE_NUMBERS with value true	
[00:00:02]: Overriding mod workshop-1185229307's option NONOEPIC with value false	
[00:00:02]: Overriding mod workshop-1185229307's option DAMAGE_RESISTANCE with value true	
[00:00:02]: Overriding mod workshop-1185229307's option HORIZONTAL_OFFSET with value 0	
[00:00:02]: applying configuration_options from modoverrides.lua to mod workshop-666155465	
[00:00:02]: Overriding mod workshop-666155465's option chestR with value -1	
[00:00:02]: Overriding mod workshop-666155465's option food_style with value 0	
[00:00:02]: Overriding mod workshop-666155465's option display_hp with value -1	
[00:00:02]: Overriding mod workshop-666155465's option show_uses with value -1	
[00:00:02]: Overriding mod workshop-666155465's option show_food_units with value -1	
[00:00:02]: Overriding mod workshop-666155465's option lang with value auto	
[00:00:02]: Overriding mod workshop-666155465's option chestB with value -1	
[00:00:02]: Overriding mod workshop-666155465's option food_order with value 0	
[00:00:02]: Overriding mod workshop-666155465's option chestG with value -1	
[00:00:02]: Overriding mod workshop-666155465's option food_estimation with value -1	
[00:00:02]: applying configuration_options from modoverrides.lua to mod workshop-362175979	
[00:00:02]: Overriding mod workshop-362175979's option Draw over FoW with value enabled	
[00:00:02]: applying configuration_options from modoverrides.lua to mod workshop-661253977	
[00:00:02]: Overriding mod workshop-661253977's option nillots with value 0	
[00:00:02]: Overriding mod workshop-661253977's option baodiao with value 1	
[00:00:02]: Overriding mod workshop-661253977's option amudiao with value true	
[00:00:02]: Overriding mod workshop-661253977's option zbdiao with value true	
[00:00:02]: Overriding mod workshop-661253977's option kong with value 0	
[00:00:02]: Overriding mod workshop-661253977's option rendiao with value 2	
[00:00:02]: applying configuration_options from modoverrides.lua to mod workshop-569043634	
[00:00:02]: Overriding mod workshop-569043634's option ReturnHotkey_Mode with value Closest	
[00:00:02]: Overriding mod workshop-569043634's option campfire with value Enabled	
[00:00:02]: Overriding mod workshop-569043634's option Health_Penalty_Generic with value Unchanged	
[00:00:02]: Overriding mod workshop-569043634's option skeleton with value Unchanged	
[00:00:02]: Overriding mod workshop-569043634's option NoPlayerSkeletons with value Unchanged	
[00:00:02]: Overriding mod workshop-569043634's option Health_Respawn_Amount with value Unchanged	
[00:00:02]: Overriding mod workshop-569043634's option Health_Penalty_Maximum with value Unchanged	
[00:00:02]: Overriding mod workshop-569043634's option reviver with value Unchanged	
[00:00:02]: Overriding mod workshop-569043634's option KeepInventory with value Unchanged	
[00:00:02]: Overriding mod workshop-569043634's option Health_Penalty_Meat_Effigy with value Unchanged	
[00:00:02]: Overriding mod workshop-569043634's option coldfire with value Enabled	
[00:00:02]: Overriding mod workshop-569043634's option SpawnProtection with value Unchanged	
[00:00:02]: Overriding mod workshop-569043634's option Health_Penalty_Portal with value Unchanged	
[00:00:02]: Overriding mod workshop-569043634's option firepit with value Enabled	
[00:00:02]: Overriding mod workshop-569043634's option usetags with value Unchanged	
[00:00:02]: Overriding mod workshop-569043634's option coldfirepit with value Enabled	
[00:00:02]: Overriding mod workshop-569043634's option ReturnHotkey with value Unchanged	
[00:00:02]: Overriding mod workshop-569043634's option KillMe with value Unchanged	
[00:00:02]: applying configuration_options from modoverrides.lua to mod workshop-378160973	
[00:00:02]: Overriding mod workshop-378160973's option FIREOPTIONS with value 2	
[00:00:02]: Overriding mod workshop-378160973's option SHOWFIREICONS with value true	
[00:00:02]: Overriding mod workshop-378160973's option SHAREMINIMAPPROGRESS with value true	
[00:00:02]: Overriding mod workshop-378160973's option SHOWPLAYERICONS with value true	
[00:00:02]: Overriding mod workshop-378160973's option OVERRIDEMODE with value false	
[00:00:02]: Overriding mod workshop-378160973's option SHOWPLAYERSOPTIONS with value 3	
[00:00:02]: Overriding mod workshop-378160973's option ENABLEPINGS with value true	
[00:00:02]: applying configuration_options from modoverrides.lua to mod workshop-375859599	
[00:00:02]: Overriding mod workshop-375859599's option random_range with value 0	
[00:00:02]: Overriding mod workshop-375859599's option divider with value 5	
[00:00:02]: Overriding mod workshop-375859599's option use_blacklist with value true	
[00:00:02]: Overriding mod workshop-375859599's option unknwon_prefabs with value 1	
[00:00:02]: Overriding mod workshop-375859599's option show_type with value 0	
[00:00:02]: Overriding mod workshop-375859599's option send_unknwon_prefabs with value false	
[00:00:02]: Overriding mod workshop-375859599's option random_health_value with value 0	
[00:00:02]: Mod: workshop-1378549454 ([API] Gem Core)	Loading modworldgenmain.lua	
[00:00:02]: Mod: workshop-1378549454 ([API] Gem Core)	Loading modbackendmain.lua	
[00:00:02]: modimport: ../mods/workshop-1378549454/gemscripts/gemrun	
[00:00:02]: modimport: ../mods/workshop-1378549454/gemscripts/legacy_modbackendmain	
[00:00:02]: Mod: workshop-1378549454 ([API] Gem Core)	Loading modmain.lua	
[00:00:02]: modimport: ../mods/workshop-1378549454/gemscripts/legacy_modmain	
[00:00:02]: Mod: workshop-1185229307 (史诗般的血量条)	Loading modworldgenmain.lua	
[00:00:02]: Mod: workshop-1185229307 (史诗般的血量条)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:02]: Mod: workshop-1185229307 (史诗般的血量条)	Loading modbackendmain.lua	
[00:00:02]: Mod: workshop-1185229307 (史诗般的血量条)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:02]: Mod: workshop-1185229307 (史诗般的血量条)	Loading modmain.lua	
[00:00:02]: Mod: workshop-375850593 (Extra Equip Slots)	Loading modworldgenmain.lua	
[00:00:02]: Mod: workshop-375850593 (Extra Equip Slots)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:02]: Mod: workshop-375850593 (Extra Equip Slots)	Loading modbackendmain.lua	
[00:00:02]: Mod: workshop-375850593 (Extra Equip Slots)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:02]: Mod: workshop-375850593 (Extra Equip Slots)	Loading modmain.lua	
[00:00:02]: Mod: workshop-347079953 (Display food values)	Loading modworldgenmain.lua	
[00:00:02]: Mod: workshop-347079953 (Display food values)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:02]: Mod: workshop-347079953 (Display food values)	Loading modbackendmain.lua	
[00:00:02]: Mod: workshop-347079953 (Display food values)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:02]: Mod: workshop-347079953 (Display food values)	Loading modmain.lua	
[00:00:02]: Mod: workshop-786556008 (45 Inventory Slots)	Loading modworldgenmain.lua	
[00:00:02]: Mod: workshop-786556008 (45 Inventory Slots)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:02]: Mod: workshop-786556008 (45 Inventory Slots)	Loading modbackendmain.lua	
[00:00:02]: Mod: workshop-786556008 (45 Inventory Slots)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:02]: Mod: workshop-786556008 (45 Inventory Slots)	Loading modmain.lua	
[00:00:02]: Mod: workshop-666155465 (Show Me (Origin))	Loading modworldgenmain.lua	
[00:00:02]: Mod: workshop-666155465 (Show Me (Origin))	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:02]: Mod: workshop-666155465 (Show Me (Origin))	Loading modbackendmain.lua	
[00:00:02]: Mod: workshop-666155465 (Show Me (Origin))	  Mod had no modbackendmain.lua. Skipping.	
[00:00:02]: Mod: workshop-666155465 (Show Me (Origin))	Loading modmain.lua	
[00:00:02]: ShowMe version:	0.58	
[00:00:02]: show_food_units	-1	-1	-1	
[00:00:02]: show_uses	-1	-1	-1	
[00:00:02]: Detected language for ShowMe: 	auto	zh	
[00:00:02]: Mod: workshop-375859599 (Health Info)	Loading modworldgenmain.lua	
[00:00:02]: Mod: workshop-375859599 (Health Info)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:02]: Mod: workshop-375859599 (Health Info)	Loading modbackendmain.lua	
[00:00:02]: Mod: workshop-375859599 (Health Info)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:02]: Mod: workshop-375859599 (Health Info)	Loading modmain.lua	
[00:00:02]: modimport: ../mods/workshop-375859599/black_white_lists.lua	
[00:00:02]: Mod: workshop-362175979 (Wormhole Marks)	Loading modworldgenmain.lua	
[00:00:02]: Mod: workshop-362175979 (Wormhole Marks)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:02]: Mod: workshop-362175979 (Wormhole Marks)	Loading modbackendmain.lua	
[00:00:02]: Mod: workshop-362175979 (Wormhole Marks)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:02]: Mod: workshop-362175979 (Wormhole Marks)	Loading modmain.lua	
[00:00:02]: Mod: workshop-856487758 (Quick Drop)	Loading modworldgenmain.lua	
[00:00:02]: Mod: workshop-856487758 (Quick Drop)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:02]: Mod: workshop-856487758 (Quick Drop)	Loading modbackendmain.lua	
[00:00:02]: Mod: workshop-856487758 (Quick Drop)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:02]: Mod: workshop-856487758 (Quick Drop)	Loading modmain.lua	
[00:00:02]: Mod: workshop-569043634 (Campfire Respawn)	Loading modworldgenmain.lua	
[00:00:02]: Mod: workshop-569043634 (Campfire Respawn)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:02]: Mod: workshop-569043634 (Campfire Respawn)	Loading modbackendmain.lua	
[00:00:02]: Mod: workshop-569043634 (Campfire Respawn)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:02]: Mod: workshop-569043634 (Campfire Respawn)	Loading modmain.lua	
[00:00:02]: Mod: workshop-661253977 ( Don't Drop Everything)	Loading modworldgenmain.lua	
[00:00:02]: Mod: workshop-661253977 ( Don't Drop Everything)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:02]: Mod: workshop-661253977 ( Don't Drop Everything)	Loading modbackendmain.lua	
[00:00:02]: Mod: workshop-661253977 ( Don't Drop Everything)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:02]: Mod: workshop-661253977 ( Don't Drop Everything)	Loading modmain.lua	
[00:00:02]: Mod: workshop-378160973 (Global Positions)	Loading modworldgenmain.lua	
[00:00:02]: Mod: workshop-378160973 (Global Positions)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:02]: Mod: workshop-378160973 (Global Positions)	Loading modbackendmain.lua	
[00:00:02]: Mod: workshop-378160973 (Global Positions)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:02]: Mod: workshop-378160973 (Global Positions)	Loading modmain.lua	
[00:00:02]: ModIndex:GetModsToLoad inserting moddir, 	workshop-347079953	
[00:00:02]: ModIndex:GetModsToLoad inserting moddir, 	workshop-362175979	
[00:00:02]: ModIndex:GetModsToLoad inserting moddir, 	workshop-375850593	
[00:00:02]: ModIndex:GetModsToLoad inserting moddir, 	workshop-661253977	
[00:00:02]: ModIndex:GetModsToLoad inserting moddir, 	workshop-786556008	
[00:00:02]: ModIndex:GetModsToLoad inserting moddir, 	workshop-856487758	
[00:00:02]: ModIndex:GetModsToLoad inserting forcedmoddir, 	workshop-1207269058	
[00:00:02]: ModIndex:GetModsToLoad inserting forcedmoddir, 	workshop-1185229307	
[00:00:02]: ModIndex:GetModsToLoad inserting forcedmoddir, 	workshop-1378549454	
[00:00:02]: ModIndex:GetModsToLoad inserting forcedmoddir, 	workshop-666155465	
[00:00:02]: ModIndex:GetModsToLoad inserting forcedmoddir, 	workshop-378160973	
[00:00:02]: ModIndex:GetModsToLoad inserting forcedmoddir, 	workshop-375859599	
[00:00:02]: ModIndex:GetModsToLoad inserting forcedmoddir, 	workshop-569043634	
[00:00:03]: Mod: workshop-1207269058 ( Simple Health Bar DST)	Loading modworldgenmain.lua	
[00:00:03]: Mod: workshop-1207269058 ( Simple Health Bar DST)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:03]: Mod: workshop-1207269058 ( Simple Health Bar DST)	Loading modbackendmain.lua	
[00:00:03]: Mod: workshop-1207269058 ( Simple Health Bar DST)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:03]: Mod: workshop-1207269058 ( Simple Health Bar DST)	Loading modmain.lua	
[00:00:03]: Mod: workshop-1378549454 ([API] Gem Core)	Loading modmainpostinit.lua	
[00:00:03]: Mod: workshop-1185229307 (史诗般的血量条)	Loading modmainpostinit.lua	
[00:00:03]: Mod: workshop-1185229307 (史诗般的血量条)	  Mod had no modmainpostinit.lua. Skipping.	
[00:00:03]: Mod: workshop-375850593 (Extra Equip Slots)	Loading modmainpostinit.lua	
[00:00:03]: Mod: workshop-375850593 (Extra Equip Slots)	  Mod had no modmainpostinit.lua. Skipping.	
[00:00:03]: Mod: workshop-347079953 (Display food values)	Loading modmainpostinit.lua	
[00:00:03]: Mod: workshop-347079953 (Display food values)	  Mod had no modmainpostinit.lua. Skipping.	
[00:00:03]: Mod: workshop-786556008 (45 Inventory Slots)	Loading modmainpostinit.lua	
[00:00:03]: Mod: workshop-786556008 (45 Inventory Slots)	  Mod had no modmainpostinit.lua. Skipping.	
[00:00:03]: Mod: workshop-666155465 (Show Me (Origin))	Loading modmainpostinit.lua	
[00:00:03]: Mod: workshop-666155465 (Show Me (Origin))	  Mod had no modmainpostinit.lua. Skipping.	
[00:00:03]: Mod: workshop-375859599 (Health Info)	Loading modmainpostinit.lua	
[00:00:03]: Mod: workshop-375859599 (Health Info)	  Mod had no modmainpostinit.lua. Skipping.	
[00:00:03]: Mod: workshop-362175979 (Wormhole Marks)	Loading modmainpostinit.lua	
[00:00:03]: Mod: workshop-362175979 (Wormhole Marks)	  Mod had no modmainpostinit.lua. Skipping.	
[00:00:03]: Mod: workshop-856487758 (Quick Drop)	Loading modmainpostinit.lua	
[00:00:03]: Mod: workshop-856487758 (Quick Drop)	  Mod had no modmainpostinit.lua. Skipping.	
[00:00:03]: Mod: workshop-569043634 (Campfire Respawn)	Loading modmainpostinit.lua	
[00:00:03]: Mod: workshop-569043634 (Campfire Respawn)	  Mod had no modmainpostinit.lua. Skipping.	
[00:00:03]: Mod: workshop-661253977 ( Don't Drop Everything)	Loading modmainpostinit.lua	
[00:00:03]: Mod: workshop-661253977 ( Don't Drop Everything)	  Mod had no modmainpostinit.lua. Skipping.	
[00:00:03]: Mod: workshop-378160973 (Global Positions)	Loading modmainpostinit.lua	
[00:00:03]: Mod: workshop-378160973 (Global Positions)	  Mod had no modmainpostinit.lua. Skipping.	
[00:00:03]: Mod: workshop-1207269058 ( Simple Health Bar DST)	Loading modmainpostinit.lua	
[00:00:03]: Mod: workshop-1207269058 ( Simple Health Bar DST)	  Mod had no modmainpostinit.lua. Skipping.	
[00:00:03]: Event data unavailable: lavaarena_event_server/lavaarena_achievement_quest_defs
[00:00:04]: LOADING LUA SUCCESS
[00:00:04]: Registering Server mod namespace "workshop-1207269058"
[00:00:04]: Registering Server mod namespace "food item"
[00:00:04]: Registering Server mod namespace "gemcore"
[00:00:04]: Registering Server mod namespace "showmeshint"
[00:00:04]: Registering Server mod namespace "workshop-378160973"
[00:00:04]: Registering Server mod namespace "showme"
[00:00:04]: Registering Shard mod namespace "gemcore"
[00:00:04]: PlayerDeaths could not load morgue	
[00:00:04]: PlayerHistory could not load player_history	
[00:00:04]: ServerPreferences could not load server_preferences	
[00:00:04]: ConsoleScreenSettings could not load consolescreen	
[00:00:04]: bloom_enabled	true	
[00:00:04]: OnFilesLoaded()	
[00:00:04]: OnUpdatePurchaseStateComplete	
[00:00:04]: Klump load on boot started.	
[00:00:04]: Klump files loaded: 	0	
[00:00:05]: Mod: workshop-1378549454 ([API] Gem Core)	Registering prefabs	
[00:00:05]: Mod: workshop-1378549454 ([API] Gem Core)	  Registering default mod prefab	
[00:00:05]: Mod: workshop-1185229307 (史诗般的血量条)	Registering prefabs	
[00:00:05]: Mod: workshop-1185229307 (史诗般的血量条)	  Registering prefab file: prefabs/epichealth_proxy	
[00:00:05]: Mod: workshop-1185229307 (史诗般的血量条)	    epichealth_proxy	
[00:00:05]: Mod: workshop-1185229307 (史诗般的血量条)	  Registering default mod prefab	
[00:00:05]: Mod: workshop-375850593 (Extra Equip Slots)	Registering prefabs	
[00:00:05]: Mod: workshop-375850593 (Extra Equip Slots)	  Registering default mod prefab	
[00:00:05]: Mod: workshop-347079953 (Display food values)	Registering prefabs	
[00:00:05]: Mod: workshop-347079953 (Display food values)	  Registering default mod prefab	
[00:00:05]: Mod: workshop-786556008 (45 Inventory Slots)	Registering prefabs	
[00:00:05]: Mod: workshop-786556008 (45 Inventory Slots)	  Registering default mod prefab	
[00:00:05]: Mod: workshop-666155465 (Show Me (Origin))	Registering prefabs	
[00:00:05]: Mod: workshop-666155465 (Show Me (Origin))	  Registering default mod prefab	
[00:00:05]: Mod: workshop-375859599 (Health Info)	Registering prefabs	
[00:00:05]: Mod: workshop-375859599 (Health Info)	  Registering default mod prefab	
[00:00:05]: Mod: workshop-362175979 (Wormhole Marks)	Registering prefabs	
[00:00:05]: Mod: workshop-362175979 (Wormhole Marks)	  Registering default mod prefab	
[00:00:05]: Mod: workshop-856487758 (Quick Drop)	Registering prefabs	
[00:00:05]: Mod: workshop-856487758 (Quick Drop)	  Registering default mod prefab	
[00:00:05]: Mod: workshop-569043634 (Campfire Respawn)	Registering prefabs	
[00:00:05]: Mod: workshop-569043634 (Campfire Respawn)	  Registering default mod prefab	
[00:00:05]: Mod: workshop-661253977 ( Don't Drop Everything)	Registering prefabs	
[00:00:05]: Mod: workshop-661253977 ( Don't Drop Everything)	  Registering default mod prefab	
[00:00:05]: Mod: workshop-378160973 (Global Positions)	Registering prefabs	
[00:00:05]: Mod: workshop-378160973 (Global Positions)	  Registering prefab file: prefabs/globalposition_classified	
[00:00:05]: Mod: workshop-378160973 (Global Positions)	    globalposition_classified	
[00:00:05]: Mod: workshop-378160973 (Global Positions)	  Registering prefab file: prefabs/smoketrail	
[00:00:05]: Mod: workshop-378160973 (Global Positions)	    smoketrail	
[00:00:05]: Mod: workshop-378160973 (Global Positions)	  Registering prefab file: prefabs/globalmapicon_noproxy	
[00:00:05]: Mod: workshop-378160973 (Global Positions)	    globalmapicon_noproxy	
[00:00:05]: Mod: workshop-378160973 (Global Positions)	  Registering prefab file: prefabs/worldmapexplorer	
[00:00:05]: Mod: workshop-378160973 (Global Positions)	    worldmapexplorer	
[00:00:05]: Mod: workshop-378160973 (Global Positions)	  Registering prefab file: prefabs/pings	
[00:00:05]: Mod: workshop-378160973 (Global Positions)	    ping_generic	
[00:00:05]: Mod: workshop-378160973 (Global Positions)	    ping_omw	
[00:00:05]: Mod: workshop-378160973 (Global Positions)	    ping_danger	
[00:00:05]: Mod: workshop-378160973 (Global Positions)	    ping_explore	
[00:00:05]: Mod: workshop-378160973 (Global Positions)	    ping_gohere	
[00:00:05]: Mod: workshop-378160973 (Global Positions)	  Registering default mod prefab	
[00:00:06]: Mod: workshop-1207269058 ( Simple Health Bar DST)	Registering prefabs	
[00:00:06]: Mod: workshop-1207269058 ( Simple Health Bar DST)	  Registering prefab file: prefabs/dychealthbar	
[00:00:06]: Mod: workshop-1207269058 ( Simple Health Bar DST)	    dyc_damagedisplay	
[00:00:06]: Mod: workshop-1207269058 ( Simple Health Bar DST)	    dyc_healthbarchild	
[00:00:06]: Mod: workshop-1207269058 ( Simple Health Bar DST)	    dyc_healthbar	
[00:00:06]: Mod: workshop-1207269058 ( Simple Health Bar DST)	  Registering default mod prefab	
[00:00:06]: 	Load FE	
[00:00:06]: 	Load FE: done	
[00:00:06]: THREAD - started 'FilesExistAsyncThread' (15244)
[00:00:06]: FilesExistAsyncThread started (22134 files)...
[00:00:06]: Check for write access: TRUE
[00:00:06]: Check for read access: TRUE
[00:00:06]: Available disk space for save files: 86365 MB
[00:00:06]: ModIndex: Load sequence finished successfully.	
[00:00:06]: Reset() returning
[00:00:06]: [IPC] Signal 'DST_Master_Kill' opened  #00000000000009F4
[00:00:06]: [IPC] Registering handler for signal #00000000000009F4
[00:00:06]: [IPC] Handle #00000000000009F4 added to the Eventhandles
[00:00:06]: [IPC] Signal 'DST_Master_ShutdownNoSave' opened  #0000000000000984
[00:00:06]: [IPC] Registering handler for signal #0000000000000984
[00:00:06]: [IPC] Handle #0000000000000984 added to the Eventhandles
[00:00:06]: [IPC] Signal 'DST_Master_Starting' opened  #00000000000009C4
[00:00:06]: [IPC] Sending signal... #00000000000009C4
[00:00:07]: [200] Account Communication Success (6)
[00:00:07]: Cached userid (null) saved to APP:Klei//DoNotStarveTogether/144818993/Cluster_1/Master/save/cached_userid
[00:00:07]: Received (KU_0vPtViED) from TokenPurpose
[00:00:07]: Starting Dedicated Server Game	
[00:00:07]: Network tick rate: U=15(2), D=0
[00:00:07]: About to start a server with the following settings:
[00:00:07]:   Dedicated: true
[00:00:07]:   Online: true
[00:00:07]:   Passworded: true
[00:00:07]:   ServerPort: 10999
[00:00:07]:   SteamAuthPort: 8766
[00:00:07]:   SteamMasterServerPort: 27016
[00:00:07]:   ClanID: false
[00:00:07]:   ClanOnly: false
[00:00:07]:   ClanAdmin: false
[00:00:07]:   LanOnly: false
[00:00:07]:   FriendsOnly: false
[00:00:07]:   EnableAutosaver: true
[00:00:07]:   EncodeUserPath: true
[00:00:07]:   PVP: false
[00:00:07]:   MaxPlayers: 6
[00:00:07]:   GameMode: survival
[00:00:07]:   OverridenDNS: 
[00:00:07]:   PauseWhenEmpty: true
[00:00:07]:   IdleTimeout: 1800s
[00:00:07]:   VoteEnabled: false
[00:00:07]:   InternetBroadcasting: true
[00:00:07]: [Warning] Could not confirm port 10999 is open in the firewall. 
[00:00:07]: SUCCESS: Loaded modoverrides.lua	
[00:00:07]: Could not load mod_config_data/modconfiguration_workshop-347079953	
[00:00:07]: SUCCESS: Loaded modoverrides.lua	
[00:00:07]: Could not load mod_config_data/modconfiguration_workshop-786556008	
[00:00:07]: SUCCESS: Loaded modoverrides.lua	
[00:00:07]: Could not load mod_config_data/modconfiguration_workshop-569043634	
[00:00:07]: SUCCESS: Loaded modoverrides.lua	
[00:00:07]: Could not load mod_config_data/modconfiguration_workshop-1207269058	
[00:00:07]: SUCCESS: Loaded modoverrides.lua	
[00:00:07]: Could not load mod_config_data/modconfiguration_workshop-362175979	
[00:00:07]: SUCCESS: Loaded modoverrides.lua	
[00:00:07]: Could not load mod_config_data/modconfiguration_workshop-375859599	
[00:00:07]: SUCCESS: Loaded modoverrides.lua	
[00:00:07]: Could not load mod_config_data/modconfiguration_workshop-378160973	
[00:00:07]: SUCCESS: Loaded modoverrides.lua	
[00:00:07]: Could not load mod_config_data/modconfiguration_workshop-666155465	
[00:00:07]: SUCCESS: Loaded modoverrides.lua	
[00:00:07]: Could not load mod_config_data/modconfiguration_workshop-375850593	
[00:00:07]: SUCCESS: Loaded modoverrides.lua	
[00:00:07]: Could not load mod_config_data/modconfiguration_workshop-1378549454	
[00:00:07]: SUCCESS: Loaded modoverrides.lua	
[00:00:07]: Could not load mod_config_data/modconfiguration_workshop-1185229307	
[00:00:07]: SUCCESS: Loaded modoverrides.lua	
[00:00:07]: Could not load mod_config_data/modconfiguration_workshop-856487758	
[00:00:07]: Online Server Started on port: 10999
[00:00:07]: SUCCESS: Loaded modoverrides.lua	
[00:00:07]: Found a level data override file with these contents:	
[00:00:07]: 	K: 	desc	 V: 	永不结束的饥荒沙盒模式。
永远可以在绚丽之门复活。	
[00:00:07]: 	K: 	hideminimap	 V: 	false	
[00:00:07]: 	K: 	id	 V: 	ENDLESS	
[00:00:07]: 	K: 	location	 V: 	forest	
[00:00:07]: 	K: 	max_playlist_position	 V: 	999	
[00:00:07]: 	K: 	min_playlist_position	 V: 	0	
[00:00:07]: 	K: 	name	 V: 	无尽	
[00:00:07]: 	K: 	numrandom_set_pieces	 V: 	4	
[00:00:07]: 	K: 	override_level_string	 V: 	false	
[00:00:07]: 	K: 	overrides	 V: 	table: 000000001780AEB0	
[00:00:07]: 		K: 	alternatehunt	 V: 	default	
[00:00:07]: 		K: 	angrybees	 V: 	default	
[00:00:07]: 		K: 	antliontribute	 V: 	default	
[00:00:07]: 		K: 	autumn	 V: 	default	
[00:00:07]: 		K: 	bananabush_portalrate	 V: 	default	
[00:00:07]: 		K: 	basicresource_regrowth	 V: 	always	
[00:00:07]: 		K: 	bats_setting	 V: 	default	
[00:00:07]: 		K: 	bearger	 V: 	default	
[00:00:07]: 		K: 	beefalo	 V: 	default	
[00:00:07]: 		K: 	beefaloheat	 V: 	default	
[00:00:07]: 		K: 	beequeen	 V: 	default	
[00:00:07]: 		K: 	bees	 V: 	default	
[00:00:07]: 		K: 	bees_setting	 V: 	default	
[00:00:07]: 		K: 	berrybush	 V: 	default	
[00:00:07]: 		K: 	birds	 V: 	default	
[00:00:07]: 		K: 	boons	 V: 	default	
[00:00:07]: 		K: 	branching	 V: 	never	
[00:00:07]: 		K: 	brightmarecreatures	 V: 	default	
[00:00:07]: 		K: 	bunnymen_setting	 V: 	default	
[00:00:07]: 		K: 	butterfly	 V: 	default	
[00:00:07]: 		K: 	buzzard	 V: 	default	
[00:00:07]: 		K: 	cactus	 V: 	default	
[00:00:07]: 		K: 	cactus_regrowth	 V: 	default	
[00:00:07]: 		K: 	carrot	 V: 	default	
[00:00:07]: 		K: 	carrots_regrowth	 V: 	default	
[00:00:07]: 		K: 	catcoon	 V: 	default	
[00:00:07]: 		K: 	catcoons	 V: 	default	
[00:00:07]: 		K: 	chess	 V: 	default	
[00:00:07]: 		K: 	cookiecutters	 V: 	default	
[00:00:07]: 		K: 	crabking	 V: 	default	
[00:00:07]: 		K: 	crow_carnival	 V: 	default	
[00:00:07]: 		K: 	darkness	 V: 	default	
[00:00:07]: 		K: 	day	 V: 	default	
[00:00:07]: 		K: 	deciduousmonster	 V: 	default	
[00:00:07]: 		K: 	deciduoustree_regrowth	 V: 	default	
[00:00:07]: 		K: 	deerclops	 V: 	default	
[00:00:07]: 		K: 	dragonfly	 V: 	default	
[00:00:07]: 		K: 	dropeverythingondespawn	 V: 	default	
[00:00:07]: 		K: 	evergreen_regrowth	 V: 	default	
[00:00:07]: 		K: 	extrastartingitems	 V: 	default	
[00:00:07]: 		K: 	eyeofterror	 V: 	default	
[00:00:07]: 		K: 	fishschools	 V: 	default	
[00:00:07]: 		K: 	flint	 V: 	default	
[00:00:07]: 		K: 	flowers	 V: 	default	
[00:00:07]: 		K: 	flowers_regrowth	 V: 	default	
[00:00:07]: 		K: 	frograin	 V: 	default	
[00:00:07]: 		K: 	frogs	 V: 	default	
[00:00:07]: 		K: 	fruitfly	 V: 	default	
[00:00:07]: 		K: 	ghostenabled	 V: 	always	
[00:00:07]: 		K: 	ghostsanitydrain	 V: 	none	
[00:00:07]: 		K: 	gnarwail	 V: 	default	
[00:00:07]: 		K: 	goosemoose	 V: 	default	
[00:00:07]: 		K: 	grass	 V: 	default	
[00:00:07]: 		K: 	grassgekkos	 V: 	default	
[00:00:07]: 		K: 	hallowed_nights	 V: 	default	
[00:00:07]: 		K: 	has_ocean	 V: 	true	
[00:00:07]: 		K: 	healthpenalty	 V: 	always	
[00:00:07]: 		K: 	hound_mounds	 V: 	default	
[00:00:07]: 		K: 	houndmound	 V: 	default	
[00:00:07]: 		K: 	hounds	 V: 	default	
[00:00:07]: 		K: 	hunger	 V: 	default	
[00:00:07]: 		K: 	hunt	 V: 	default	
[00:00:07]: 		K: 	keep_disconnected_tiles	 V: 	true	
[00:00:07]: 		K: 	klaus	 V: 	default	
[00:00:07]: 		K: 	krampus	 V: 	default	
[00:00:07]: 		K: 	layout_mode	 V: 	LinkNodesByKeys	
[00:00:07]: 		K: 	lessdamagetaken	 V: 	none	
[00:00:07]: 		K: 	liefs	 V: 	default	
[00:00:07]: 		K: 	lightcrab_portalrate	 V: 	default	
[00:00:07]: 		K: 	lightning	 V: 	default	
[00:00:07]: 		K: 	lightninggoat	 V: 	default	
[00:00:07]: 		K: 	loop	 V: 	always	
[00:00:07]: 		K: 	lureplants	 V: 	default	
[00:00:07]: 		K: 	malbatross	 V: 	default	
[00:00:07]: 		K: 	marshbush	 V: 	default	
[00:00:07]: 		K: 	merm	 V: 	default	
[00:00:07]: 		K: 	merms	 V: 	default	
[00:00:07]: 		K: 	meteorshowers	 V: 	default	
[00:00:07]: 		K: 	meteorspawner	 V: 	default	
[00:00:07]: 		K: 	moles	 V: 	default	
[00:00:07]: 		K: 	moles_setting	 V: 	default	
[00:00:07]: 		K: 	monkeytail_portalrate	 V: 	default	
[00:00:07]: 		K: 	moon_berrybush	 V: 	default	
[00:00:07]: 		K: 	moon_bullkelp	 V: 	default	
[00:00:07]: 		K: 	moon_carrot	 V: 	default	
[00:00:07]: 		K: 	moon_fissure	 V: 	default	
[00:00:07]: 		K: 	moon_fruitdragon	 V: 	default	
[00:00:07]: 		K: 	moon_hotspring	 V: 	default	
[00:00:07]: 		K: 	moon_rock	 V: 	default	
[00:00:07]: 		K: 	moon_sapling	 V: 	default	
[00:00:07]: 		K: 	moon_spider	 V: 	default	
[00:00:07]: 		K: 	moon_spiders	 V: 	default	
[00:00:07]: 		K: 	moon_starfish	 V: 	default	
[00:00:07]: 		K: 	moon_tree	 V: 	default	
[00:00:07]: 		K: 	moon_tree_regrowth	 V: 	default	
[00:00:07]: 		K: 	mosquitos	 V: 	default	
[00:00:07]: 		K: 	mushroom	 V: 	default	
[00:00:07]: 		K: 	mutated_hounds	 V: 	default	
[00:00:07]: 		K: 	no_joining_islands	 V: 	true	
[00:00:07]: 		K: 	no_wormholes_to_disconnected_tiles	 V: 	true	
[00:00:07]: 		K: 	ocean_bullkelp	 V: 	default	
[00:00:07]: 		K: 	ocean_seastack	 V: 	ocean_default	
[00:00:07]: 		K: 	ocean_shoal	 V: 	default	
[00:00:07]: 		K: 	ocean_waterplant	 V: 	ocean_default	
[00:00:07]: 		K: 	ocean_wobsterden	 V: 	default	
[00:00:07]: 		K: 	palmcone_seed_portalrate	 V: 	default	
[00:00:07]: 		K: 	palmconetree	 V: 	default	
[00:00:07]: 		K: 	palmconetree_regrowth	 V: 	default	
[00:00:07]: 		K: 	penguins	 V: 	default	
[00:00:07]: 		K: 	penguins_moon	 V: 	default	
[00:00:07]: 		K: 	perd	 V: 	default	
[00:00:07]: 		K: 	petrification	 V: 	default	
[00:00:07]: 		K: 	pigs	 V: 	default	
[00:00:07]: 		K: 	pigs_setting	 V: 	default	
[00:00:07]: 		K: 	pirateraids	 V: 	default	
[00:00:07]: 		K: 	ponds	 V: 	default	
[00:00:07]: 		K: 	portal_spawnrate	 V: 	default	
[00:00:07]: 		K: 	portalresurection	 V: 	always	
[00:00:07]: 		K: 	powder_monkey_portalrate	 V: 	default	
[00:00:07]: 		K: 	prefabswaps_start	 V: 	classic	
[00:00:07]: 		K: 	rabbits	 V: 	default	
[00:00:07]: 		K: 	rabbits_setting	 V: 	default	
[00:00:07]: 		K: 	reeds	 V: 	default	
[00:00:07]: 		K: 	reeds_regrowth	 V: 	default	
[00:00:07]: 		K: 	regrowth	 V: 	default	
[00:00:07]: 		K: 	resettime	 V: 	none	
[00:00:07]: 		K: 	rifts_enabled	 V: 	default	
[00:00:07]: 		K: 	rifts_frequency	 V: 	default	
[00:00:07]: 		K: 	roads	 V: 	default	
[00:00:07]: 		K: 	rock	 V: 	default	
[00:00:07]: 		K: 	rock_ice	 V: 	default	
[00:00:07]: 		K: 	saltstack_regrowth	 V: 	default	
[00:00:07]: 		K: 	sapling	 V: 	default	
[00:00:07]: 		K: 	season_start	 V: 	default	
[00:00:07]: 		K: 	seasonalstartingitems	 V: 	default	
[00:00:07]: 		K: 	shadowcreatures	 V: 	default	
[00:00:07]: 		K: 	sharks	 V: 	default	
[00:00:07]: 		K: 	spawnmode	 V: 	fixed	
[00:00:07]: 		K: 	spawnprotection	 V: 	default	
[00:00:07]: 		K: 	specialevent	 V: 	default	
[00:00:07]: 		K: 	spider_warriors	 V: 	default	
[00:00:07]: 		K: 	spiderqueen	 V: 	default	
[00:00:07]: 		K: 	spiders	 V: 	default	
[00:00:07]: 		K: 	spiders_setting	 V: 	default	
[00:00:07]: 		K: 	spring	 V: 	default	
[00:00:07]: 		K: 	squid	 V: 	default	
[00:00:07]: 		K: 	stageplays	 V: 	default	
[00:00:07]: 		K: 	start_location	 V: 	default	
[00:00:07]: 		K: 	summer	 V: 	default	
[00:00:07]: 		K: 	summerhounds	 V: 	default	
[00:00:07]: 		K: 	tallbirds	 V: 	default	
[00:00:07]: 		K: 	task_set	 V: 	default	
[00:00:07]: 		K: 	temperaturedamage	 V: 	default	
[00:00:07]: 		K: 	tentacles	 V: 	default	
[00:00:07]: 		K: 	terrariumchest	 V: 	default	
[00:00:07]: 		K: 	touchstone	 V: 	default	
[00:00:07]: 		K: 	trees	 V: 	default	
[00:00:07]: 		K: 	tumbleweed	 V: 	default	
[00:00:07]: 		K: 	twiggytrees_regrowth	 V: 	default	
[00:00:07]: 		K: 	walrus	 V: 	default	
[00:00:07]: 		K: 	walrus_setting	 V: 	default	
[00:00:07]: 		K: 	wasps	 V: 	default	
[00:00:07]: 		K: 	weather	 V: 	default	
[00:00:07]: 		K: 	wildfires	 V: 	default	
[00:00:07]: 		K: 	winter	 V: 	default	
[00:00:07]: 		K: 	winterhounds	 V: 	default	
[00:00:07]: 		K: 	winters_feast	 V: 	default	
[00:00:07]: 		K: 	wobsters	 V: 	default	
[00:00:07]: 		K: 	world_size	 V: 	default	
[00:00:07]: 		K: 	worldseed	 V: 		
[00:00:07]: 		K: 	wormhole_prefab	 V: 	wormhole	
[00:00:07]: 		K: 	year_of_the_beefalo	 V: 	default	
[00:00:07]: 		K: 	year_of_the_bunnyman	 V: 	default	
[00:00:07]: 		K: 	year_of_the_carrat	 V: 	default	
[00:00:07]: 		K: 	year_of_the_catcoon	 V: 	default	
[00:00:07]: 		K: 	year_of_the_gobbler	 V: 	default	
[00:00:07]: 		K: 	year_of_the_pig	 V: 	default	
[00:00:07]: 		K: 	year_of_the_varg	 V: 	default	
[00:00:07]: 	K: 	playstyle	 V: 	endless	
[00:00:07]: 	K: 	random_set_pieces	 V: 	table: 000000001780A0A0	
[00:00:07]: 		K: 	1	 V: 	Sculptures_2	
[00:00:07]: 		K: 	2	 V: 	Sculptures_3	
[00:00:07]: 		K: 	3	 V: 	Sculptures_4	
[00:00:07]: 		K: 	4	 V: 	Sculptures_5	
[00:00:07]: 		K: 	5	 V: 	Chessy_1	
[00:00:07]: 		K: 	6	 V: 	Chessy_2	
[00:00:07]: 		K: 	7	 V: 	Chessy_3	
[00:00:07]: 		K: 	8	 V: 	Chessy_4	
[00:00:07]: 		K: 	9	 V: 	Chessy_5	
[00:00:07]: 		K: 	10	 V: 	Chessy_6	
[00:00:07]: 		K: 	11	 V: 	Maxwell1	
[00:00:07]: 		K: 	12	 V: 	Maxwell2	
[00:00:07]: 		K: 	13	 V: 	Maxwell3	
[00:00:07]: 		K: 	14	 V: 	Maxwell4	
[00:00:07]: 		K: 	15	 V: 	Maxwell6	
[00:00:07]: 		K: 	16	 V: 	Maxwell7	
[00:00:07]: 		K: 	17	 V: 	Warzone_1	
[00:00:07]: 		K: 	18	 V: 	Warzone_2	
[00:00:07]: 		K: 	19	 V: 	Warzone_3	
[00:00:07]: 	K: 	required_prefabs	 V: 	table: 0000000017809D30	
[00:00:07]: 		K: 	1	 V: 	multiplayer_portal	
[00:00:07]: 	K: 	required_setpieces	 V: 	table: 000000001780A690	
[00:00:07]: 		K: 	1	 V: 	Sculptures_1	
[00:00:07]: 		K: 	2	 V: 	Maxwell5	
[00:00:07]: 	K: 	settings_desc	 V: 	永不结束的饥荒沙盒模式。
永远可以在绚丽之门复活。	
[00:00:07]: 	K: 	settings_id	 V: 	ENDLESS	
[00:00:07]: 	K: 	settings_name	 V: 	无尽	
[00:00:07]: 	K: 	substitutes	 V: 	table: 000000001780A9B0	
[00:00:07]: 	K: 	version	 V: 	4	
[00:00:07]: 	K: 	worldgen_desc	 V: 	永不结束的饥荒沙盒模式。
永远可以在绚丽之门复活。	
[00:00:07]: 	K: 	worldgen_id	 V: 	ENDLESS	
[00:00:07]: 	K: 	worldgen_name	 V: 	无尽	
[00:00:07]: Loaded and applied level data override from ../leveldataoverride.lua	
[00:00:07]: Overwriting savedata with level data file.	
[00:00:07]: Not applying world gen overrides.	
[00:00:07]: Collecting garbage...
[00:00:07]: lua_gc took 0.05 seconds
[00:00:07]: ~ShardLuaProxy()
[00:00:07]: ~cEventLeaderboardProxy()
[00:00:07]: ~ItemServerLuaProxy()
[00:00:07]: ~InventoryLuaProxy()
[00:00:07]: ~NetworkLuaProxy()
[00:00:07]: ~SimLuaProxy()
[00:00:07]: FilesExistAsyncThread aborted.
[00:00:07]: ... FilesExistAsyncThread complete
[00:00:07]: lua_close took 0.06 seconds
[00:00:07]: ReleaseAll
[00:00:07]: ReleaseAll Finished
[00:00:07]: cGame::StartPlaying
[00:00:07]: AppVersion::GetArchitecture() x64
[00:00:07]: LOADING LUA
[00:00:07]: DoLuaFile scripts/main.lua
[00:00:07]: DoLuaFile loading buffer scripts/main.lua
[00:00:08]: Translator:LoadPOFile - loading file: scripts/languages/chinese_s.po	
[00:00:09]:   taskgrouplist:	default	联机版	
[00:00:09]:   taskgrouplist:	classic	经典	
[00:00:09]:   taskgrouplist:	cave_default	地下	
[00:00:09]:   taskgrouplist:	lavaarena_taskset	熔炉	
[00:00:09]:   taskgrouplist:	quagmire_taskset	暴食	
[00:00:09]: Running main.lua
	
[00:00:09]: loaded modindex	
[00:00:09]: ModIndex: Beginning normal load sequence for dedicated server.
	
[00:00:09]: SUCCESS: Loaded modoverrides.lua	
[00:00:09]: modoverrides.lua enabling workshop-1378549454	
[00:00:09]: modoverrides.lua enabling workshop-856487758	
[00:00:09]: modoverrides.lua enabling workshop-347079953	
[00:00:09]: modoverrides.lua enabling workshop-786556008	
[00:00:09]: modoverrides.lua enabling workshop-375850593	
[00:00:09]: modoverrides.lua enabling workshop-1207269058	
[00:00:09]: modoverrides.lua enabling workshop-1185229307	
[00:00:09]: modoverrides.lua enabling workshop-666155465	
[00:00:09]: modoverrides.lua enabling workshop-362175979	
[00:00:09]: modoverrides.lua enabling workshop-661253977	
[00:00:09]: modoverrides.lua enabling workshop-569043634	
[00:00:09]: modoverrides.lua enabling workshop-378160973	
[00:00:09]: modoverrides.lua enabling workshop-375859599	
[00:00:09]: ModIndex:GetModsToLoad inserting moddir, 	workshop-347079953	
[00:00:09]: ModIndex:GetModsToLoad inserting moddir, 	workshop-362175979	
[00:00:09]: ModIndex:GetModsToLoad inserting moddir, 	workshop-375850593	
[00:00:09]: ModIndex:GetModsToLoad inserting moddir, 	workshop-661253977	
[00:00:09]: ModIndex:GetModsToLoad inserting moddir, 	workshop-786556008	
[00:00:09]: ModIndex:GetModsToLoad inserting moddir, 	workshop-856487758	
[00:00:09]: ModIndex:GetModsToLoad inserting forcedmoddir, 	workshop-1207269058	
[00:00:09]: ModIndex:GetModsToLoad inserting forcedmoddir, 	workshop-1185229307	
[00:00:09]: ModIndex:GetModsToLoad inserting forcedmoddir, 	workshop-1378549454	
[00:00:09]: ModIndex:GetModsToLoad inserting forcedmoddir, 	workshop-666155465	
[00:00:09]: ModIndex:GetModsToLoad inserting forcedmoddir, 	workshop-378160973	
[00:00:09]: ModIndex:GetModsToLoad inserting forcedmoddir, 	workshop-375859599	
[00:00:09]: ModIndex:GetModsToLoad inserting forcedmoddir, 	workshop-569043634	
[00:00:09]: Could not load mod_config_data/modconfiguration_workshop-347079953	
[00:00:09]: Loading mod: workshop-347079953 (Display food values) Version:1.61	
[00:00:09]: Could not load mod_config_data/modconfiguration_workshop-362175979	
[00:00:09]: Loading mod: workshop-362175979 (Wormhole Marks) Version:1.4.5	
[00:00:09]: Could not load mod_config_data/modconfiguration_workshop-375850593	
[00:00:09]: Loading mod: workshop-375850593 (Extra Equip Slots) Version:1.8.0	
[00:00:09]: Could not load mod_config_data/modconfiguration_workshop-661253977	
[00:00:09]: Loading mod: workshop-661253977 ( Don't Drop Everything) Version:11:15 2020-08-10	
[00:00:09]: Could not load mod_config_data/modconfiguration_workshop-786556008	
[00:00:09]: Loading mod: workshop-786556008 (45 Inventory Slots) Version:1.4.1	
[00:00:09]: Could not load mod_config_data/modconfiguration_workshop-856487758	
[00:00:09]: Loading mod: workshop-856487758 (Quick Drop) Version:1.1	
[00:00:09]: Could not load mod_config_data/modconfiguration_workshop-1207269058	
[00:00:09]: Loading mod: workshop-1207269058 ( Simple Health Bar DST) Version:2.16	
[00:00:09]: Could not load mod_config_data/modconfiguration_workshop-1185229307	
[00:00:09]: Loading mod: workshop-1185229307 (史诗般的血量条) Version:73	
[00:00:09]: Could not load mod_config_data/modconfiguration_workshop-1378549454	
[00:00:09]: Loading mod: workshop-1378549454 ([API] Gem Core) Version:5.1.43	
[00:00:09]: Could not load mod_config_data/modconfiguration_workshop-666155465	
[00:00:09]: Loading mod: workshop-666155465 (Show Me (Origin)) Version:0.58	
[00:00:09]: Could not load mod_config_data/modconfiguration_workshop-378160973	
[00:00:09]: Loading mod: workshop-378160973 (Global Positions) Version:1.7.4	
[00:00:09]: Could not load mod_config_data/modconfiguration_workshop-375859599	
[00:00:09]: Loading mod: workshop-375859599 (Health Info) Version:2.2.03	
[00:00:09]: Could not load mod_config_data/modconfiguration_workshop-569043634	
[00:00:09]: Loading mod: workshop-569043634 (Campfire Respawn) Version:1.6.8.1	
[00:00:09]: applying configuration_options from modoverrides.lua to mod workshop-1378549454	
[00:00:09]: Overriding mod workshop-1378549454's option craftinghighlight with value false	
[00:00:09]: applying configuration_options from modoverrides.lua to mod workshop-856487758	
[00:00:09]: applying configuration_options from modoverrides.lua to mod workshop-347079953	
[00:00:09]: Overriding mod workshop-347079953's option DFV_Language with value EN	
[00:00:09]: Overriding mod workshop-347079953's option DFV_MinimalMode with value default	
[00:00:09]: applying configuration_options from modoverrides.lua to mod workshop-786556008	
[00:00:09]: Overriding mod workshop-786556008's option EXTRASLOT with value 0	
[00:00:09]: Overriding mod workshop-786556008's option ENABLEBACKPACK with value false	
[00:00:09]: Overriding mod workshop-786556008's option INVENTORYSIZE with value 45	
[00:00:09]: applying configuration_options from modoverrides.lua to mod workshop-375850593	
[00:00:09]: applying configuration_options from modoverrides.lua to mod workshop-1207269058	
[00:00:09]: applying configuration_options from modoverrides.lua to mod workshop-1185229307	
[00:00:09]: Overriding mod workshop-1185229307's option  with value 	
[00:00:09]: Overriding mod workshop-1185229307's option  with value 	
[00:00:09]: Overriding mod workshop-1185229307's option  with value 	
[00:00:09]: Overriding mod workshop-1185229307's option WETNESS_METER with value false	
[00:00:09]: Overriding mod workshop-1185229307's option NOEPIC with value false	
[00:00:09]: Overriding mod workshop-1185229307's option FRAME_PHASES with value true	
[00:00:09]: Overriding mod workshop-1185229307's option DAMAGE_NUMBERS with value true	
[00:00:09]: Overriding mod workshop-1185229307's option NONOEPIC with value false	
[00:00:09]: Overriding mod workshop-1185229307's option DAMAGE_RESISTANCE with value true	
[00:00:09]: Overriding mod workshop-1185229307's option HORIZONTAL_OFFSET with value 0	
[00:00:09]: applying configuration_options from modoverrides.lua to mod workshop-666155465	
[00:00:09]: Overriding mod workshop-666155465's option chestR with value -1	
[00:00:09]: Overriding mod workshop-666155465's option food_style with value 0	
[00:00:09]: Overriding mod workshop-666155465's option display_hp with value -1	
[00:00:09]: Overriding mod workshop-666155465's option show_uses with value -1	
[00:00:09]: Overriding mod workshop-666155465's option show_food_units with value -1	
[00:00:09]: Overriding mod workshop-666155465's option lang with value auto	
[00:00:09]: Overriding mod workshop-666155465's option chestB with value -1	
[00:00:09]: Overriding mod workshop-666155465's option food_order with value 0	
[00:00:09]: Overriding mod workshop-666155465's option chestG with value -1	
[00:00:09]: Overriding mod workshop-666155465's option food_estimation with value -1	
[00:00:09]: applying configuration_options from modoverrides.lua to mod workshop-362175979	
[00:00:09]: Overriding mod workshop-362175979's option Draw over FoW with value enabled	
[00:00:09]: applying configuration_options from modoverrides.lua to mod workshop-661253977	
[00:00:09]: Overriding mod workshop-661253977's option nillots with value 0	
[00:00:09]: Overriding mod workshop-661253977's option baodiao with value 1	
[00:00:09]: Overriding mod workshop-661253977's option amudiao with value true	
[00:00:09]: Overriding mod workshop-661253977's option zbdiao with value true	
[00:00:09]: Overriding mod workshop-661253977's option kong with value 0	
[00:00:09]: Overriding mod workshop-661253977's option rendiao with value 2	
[00:00:09]: applying configuration_options from modoverrides.lua to mod workshop-569043634	
[00:00:09]: Overriding mod workshop-569043634's option ReturnHotkey_Mode with value Closest	
[00:00:09]: Overriding mod workshop-569043634's option campfire with value Enabled	
[00:00:09]: Overriding mod workshop-569043634's option Health_Penalty_Generic with value Unchanged	
[00:00:09]: Overriding mod workshop-569043634's option skeleton with value Unchanged	
[00:00:09]: Overriding mod workshop-569043634's option NoPlayerSkeletons with value Unchanged	
[00:00:09]: Overriding mod workshop-569043634's option Health_Respawn_Amount with value Unchanged	
[00:00:09]: Overriding mod workshop-569043634's option Health_Penalty_Maximum with value Unchanged	
[00:00:09]: Overriding mod workshop-569043634's option reviver with value Unchanged	
[00:00:09]: Overriding mod workshop-569043634's option KeepInventory with value Unchanged	
[00:00:09]: Overriding mod workshop-569043634's option Health_Penalty_Meat_Effigy with value Unchanged	
[00:00:09]: Overriding mod workshop-569043634's option coldfire with value Enabled	
[00:00:09]: Overriding mod workshop-569043634's option SpawnProtection with value Unchanged	
[00:00:09]: Overriding mod workshop-569043634's option Health_Penalty_Portal with value Unchanged	
[00:00:09]: Overriding mod workshop-569043634's option firepit with value Enabled	
[00:00:09]: Overriding mod workshop-569043634's option usetags with value Unchanged	
[00:00:09]: Overriding mod workshop-569043634's option coldfirepit with value Enabled	
[00:00:09]: Overriding mod workshop-569043634's option ReturnHotkey with value Unchanged	
[00:00:09]: Overriding mod workshop-569043634's option KillMe with value Unchanged	
[00:00:09]: applying configuration_options from modoverrides.lua to mod workshop-378160973	
[00:00:09]: Overriding mod workshop-378160973's option FIREOPTIONS with value 2	
[00:00:09]: Overriding mod workshop-378160973's option SHOWFIREICONS with value true	
[00:00:09]: Overriding mod workshop-378160973's option SHAREMINIMAPPROGRESS with value true	
[00:00:09]: Overriding mod workshop-378160973's option SHOWPLAYERICONS with value true	
[00:00:09]: Overriding mod workshop-378160973's option OVERRIDEMODE with value false	
[00:00:09]: Overriding mod workshop-378160973's option SHOWPLAYERSOPTIONS with value 3	
[00:00:09]: Overriding mod workshop-378160973's option ENABLEPINGS with value true	
[00:00:09]: applying configuration_options from modoverrides.lua to mod workshop-375859599	
[00:00:09]: Overriding mod workshop-375859599's option random_range with value 0	
[00:00:09]: Overriding mod workshop-375859599's option divider with value 5	
[00:00:09]: Overriding mod workshop-375859599's option use_blacklist with value true	
[00:00:09]: Overriding mod workshop-375859599's option unknwon_prefabs with value 1	
[00:00:09]: Overriding mod workshop-375859599's option show_type with value 0	
[00:00:09]: Overriding mod workshop-375859599's option send_unknwon_prefabs with value false	
[00:00:09]: Overriding mod workshop-375859599's option random_health_value with value 0	
[00:00:09]: Mod: workshop-1378549454 ([API] Gem Core)	Loading modworldgenmain.lua	
[00:00:09]: Mod: workshop-1378549454 ([API] Gem Core)	Loading modbackendmain.lua	
[00:00:09]: modimport: ../mods/workshop-1378549454/gemscripts/gemrun	
[00:00:09]: modimport: ../mods/workshop-1378549454/gemscripts/legacy_modbackendmain	
[00:00:09]: Mod: workshop-1378549454 ([API] Gem Core)	Loading modmain.lua	
[00:00:09]: modimport: ../mods/workshop-1378549454/gemscripts/legacy_modmain	
[00:00:09]: Mod: workshop-1185229307 (史诗般的血量条)	Loading modworldgenmain.lua	
[00:00:09]: Mod: workshop-1185229307 (史诗般的血量条)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:09]: Mod: workshop-1185229307 (史诗般的血量条)	Loading modbackendmain.lua	
[00:00:09]: Mod: workshop-1185229307 (史诗般的血量条)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:09]: Mod: workshop-1185229307 (史诗般的血量条)	Loading modmain.lua	
[00:00:09]: Mod: workshop-375850593 (Extra Equip Slots)	Loading modworldgenmain.lua	
[00:00:09]: Mod: workshop-375850593 (Extra Equip Slots)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:09]: Mod: workshop-375850593 (Extra Equip Slots)	Loading modbackendmain.lua	
[00:00:09]: Mod: workshop-375850593 (Extra Equip Slots)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:09]: Mod: workshop-375850593 (Extra Equip Slots)	Loading modmain.lua	
[00:00:09]: Mod: workshop-347079953 (Display food values)	Loading modworldgenmain.lua	
[00:00:09]: Mod: workshop-347079953 (Display food values)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:09]: Mod: workshop-347079953 (Display food values)	Loading modbackendmain.lua	
[00:00:09]: Mod: workshop-347079953 (Display food values)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:09]: Mod: workshop-347079953 (Display food values)	Loading modmain.lua	
[00:00:09]: Mod: workshop-786556008 (45 Inventory Slots)	Loading modworldgenmain.lua	
[00:00:09]: Mod: workshop-786556008 (45 Inventory Slots)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:09]: Mod: workshop-786556008 (45 Inventory Slots)	Loading modbackendmain.lua	
[00:00:09]: Mod: workshop-786556008 (45 Inventory Slots)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:09]: Mod: workshop-786556008 (45 Inventory Slots)	Loading modmain.lua	
[00:00:09]: Mod: workshop-666155465 (Show Me (Origin))	Loading modworldgenmain.lua	
[00:00:09]: Mod: workshop-666155465 (Show Me (Origin))	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:09]: Mod: workshop-666155465 (Show Me (Origin))	Loading modbackendmain.lua	
[00:00:09]: Mod: workshop-666155465 (Show Me (Origin))	  Mod had no modbackendmain.lua. Skipping.	
[00:00:09]: Mod: workshop-666155465 (Show Me (Origin))	Loading modmain.lua	
[00:00:09]: ShowMe version:	0.58	
[00:00:09]: show_food_units	-1	-1	-1	
[00:00:09]: show_uses	-1	-1	-1	
[00:00:09]: Detected language for ShowMe: 	auto	zh	
[00:00:09]: Mod: workshop-375859599 (Health Info)	Loading modworldgenmain.lua	
[00:00:09]: Mod: workshop-375859599 (Health Info)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:09]: Mod: workshop-375859599 (Health Info)	Loading modbackendmain.lua	
[00:00:09]: Mod: workshop-375859599 (Health Info)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:09]: Mod: workshop-375859599 (Health Info)	Loading modmain.lua	
[00:00:09]: modimport: ../mods/workshop-375859599/black_white_lists.lua	
[00:00:09]: Mod: workshop-362175979 (Wormhole Marks)	Loading modworldgenmain.lua	
[00:00:09]: Mod: workshop-362175979 (Wormhole Marks)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:09]: Mod: workshop-362175979 (Wormhole Marks)	Loading modbackendmain.lua	
[00:00:09]: Mod: workshop-362175979 (Wormhole Marks)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:09]: Mod: workshop-362175979 (Wormhole Marks)	Loading modmain.lua	
[00:00:09]: Mod: workshop-856487758 (Quick Drop)	Loading modworldgenmain.lua	
[00:00:09]: Mod: workshop-856487758 (Quick Drop)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:09]: Mod: workshop-856487758 (Quick Drop)	Loading modbackendmain.lua	
[00:00:09]: Mod: workshop-856487758 (Quick Drop)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:09]: Mod: workshop-856487758 (Quick Drop)	Loading modmain.lua	
[00:00:09]: Mod: workshop-569043634 (Campfire Respawn)	Loading modworldgenmain.lua	
[00:00:09]: Mod: workshop-569043634 (Campfire Respawn)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:09]: Mod: workshop-569043634 (Campfire Respawn)	Loading modbackendmain.lua	
[00:00:09]: Mod: workshop-569043634 (Campfire Respawn)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:09]: Mod: workshop-569043634 (Campfire Respawn)	Loading modmain.lua	
[00:00:09]: Mod: workshop-661253977 ( Don't Drop Everything)	Loading modworldgenmain.lua	
[00:00:09]: Mod: workshop-661253977 ( Don't Drop Everything)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:09]: Mod: workshop-661253977 ( Don't Drop Everything)	Loading modbackendmain.lua	
[00:00:09]: Mod: workshop-661253977 ( Don't Drop Everything)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:09]: Mod: workshop-661253977 ( Don't Drop Everything)	Loading modmain.lua	
[00:00:09]: Mod: workshop-378160973 (Global Positions)	Loading modworldgenmain.lua	
[00:00:09]: Mod: workshop-378160973 (Global Positions)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:09]: Mod: workshop-378160973 (Global Positions)	Loading modbackendmain.lua	
[00:00:09]: Mod: workshop-378160973 (Global Positions)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:09]: Mod: workshop-378160973 (Global Positions)	Loading modmain.lua	
[00:00:09]: ModIndex:GetModsToLoad inserting moddir, 	workshop-347079953	
[00:00:09]: ModIndex:GetModsToLoad inserting moddir, 	workshop-362175979	
[00:00:09]: ModIndex:GetModsToLoad inserting moddir, 	workshop-375850593	
[00:00:09]: ModIndex:GetModsToLoad inserting moddir, 	workshop-661253977	
[00:00:09]: ModIndex:GetModsToLoad inserting moddir, 	workshop-786556008	
[00:00:09]: ModIndex:GetModsToLoad inserting moddir, 	workshop-856487758	
[00:00:09]: ModIndex:GetModsToLoad inserting forcedmoddir, 	workshop-1207269058	
[00:00:09]: ModIndex:GetModsToLoad inserting forcedmoddir, 	workshop-1185229307	
[00:00:09]: ModIndex:GetModsToLoad inserting forcedmoddir, 	workshop-1378549454	
[00:00:09]: ModIndex:GetModsToLoad inserting forcedmoddir, 	workshop-666155465	
[00:00:09]: ModIndex:GetModsToLoad inserting forcedmoddir, 	workshop-378160973	
[00:00:09]: ModIndex:GetModsToLoad inserting forcedmoddir, 	workshop-375859599	
[00:00:09]: ModIndex:GetModsToLoad inserting forcedmoddir, 	workshop-569043634	
[00:00:09]: Mod: workshop-1207269058 ( Simple Health Bar DST)	Loading modworldgenmain.lua	
[00:00:09]: Mod: workshop-1207269058 ( Simple Health Bar DST)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:09]: Mod: workshop-1207269058 ( Simple Health Bar DST)	Loading modbackendmain.lua	
[00:00:09]: Mod: workshop-1207269058 ( Simple Health Bar DST)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:09]: Mod: workshop-1207269058 ( Simple Health Bar DST)	Loading modmain.lua	
[00:00:09]: Mod: workshop-1378549454 ([API] Gem Core)	Loading modmainpostinit.lua	
[00:00:09]: Mod: workshop-1185229307 (史诗般的血量条)	Loading modmainpostinit.lua	
[00:00:09]: Mod: workshop-1185229307 (史诗般的血量条)	  Mod had no modmainpostinit.lua. Skipping.	
[00:00:09]: Mod: workshop-375850593 (Extra Equip Slots)	Loading modmainpostinit.lua	
[00:00:09]: Mod: workshop-375850593 (Extra Equip Slots)	  Mod had no modmainpostinit.lua. Skipping.	
[00:00:09]: Mod: workshop-347079953 (Display food values)	Loading modmainpostinit.lua	
[00:00:09]: Mod: workshop-347079953 (Display food values)	  Mod had no modmainpostinit.lua. Skipping.	
[00:00:09]: Mod: workshop-786556008 (45 Inventory Slots)	Loading modmainpostinit.lua	
[00:00:09]: Mod: workshop-786556008 (45 Inventory Slots)	  Mod had no modmainpostinit.lua. Skipping.	
[00:00:09]: Mod: workshop-666155465 (Show Me (Origin))	Loading modmainpostinit.lua	
[00:00:09]: Mod: workshop-666155465 (Show Me (Origin))	  Mod had no modmainpostinit.lua. Skipping.	
[00:00:09]: Mod: workshop-375859599 (Health Info)	Loading modmainpostinit.lua	
[00:00:09]: Mod: workshop-375859599 (Health Info)	  Mod had no modmainpostinit.lua. Skipping.	
[00:00:09]: Mod: workshop-362175979 (Wormhole Marks)	Loading modmainpostinit.lua	
[00:00:09]: Mod: workshop-362175979 (Wormhole Marks)	  Mod had no modmainpostinit.lua. Skipping.	
[00:00:09]: Mod: workshop-856487758 (Quick Drop)	Loading modmainpostinit.lua	
[00:00:09]: Mod: workshop-856487758 (Quick Drop)	  Mod had no modmainpostinit.lua. Skipping.	
[00:00:09]: Mod: workshop-569043634 (Campfire Respawn)	Loading modmainpostinit.lua	
[00:00:09]: Mod: workshop-569043634 (Campfire Respawn)	  Mod had no modmainpostinit.lua. Skipping.	
[00:00:09]: Mod: workshop-661253977 ( Don't Drop Everything)	Loading modmainpostinit.lua	
[00:00:09]: Mod: workshop-661253977 ( Don't Drop Everything)	  Mod had no modmainpostinit.lua. Skipping.	
[00:00:09]: Mod: workshop-378160973 (Global Positions)	Loading modmainpostinit.lua	
[00:00:09]: Mod: workshop-378160973 (Global Positions)	  Mod had no modmainpostinit.lua. Skipping.	
[00:00:09]: Mod: workshop-1207269058 ( Simple Health Bar DST)	Loading modmainpostinit.lua	
[00:00:09]: Mod: workshop-1207269058 ( Simple Health Bar DST)	  Mod had no modmainpostinit.lua. Skipping.	
[00:00:09]: Event data unavailable: lavaarena_event_server/lavaarena_achievement_quest_defs
[00:00:09]: LOADING LUA SUCCESS
[00:00:09]: Registering Server mod namespace "workshop-1207269058"
[00:00:09]: Registering Server mod namespace "food item"
[00:00:09]: Registering Server mod namespace "gemcore"
[00:00:09]: Registering Server mod namespace "showmeshint"
[00:00:09]: Registering Server mod namespace "workshop-378160973"
[00:00:09]: Registering Server mod namespace "showme"
[00:00:09]: Registering Shard mod namespace "gemcore"
[00:00:09]: PlayerDeaths could not load morgue	
[00:00:09]: PlayerHistory could not load player_history	
[00:00:09]: ServerPreferences could not load server_preferences	
[00:00:09]: ConsoleScreenSettings could not load consolescreen	
[00:00:09]: bloom_enabled	true	
[00:00:09]: OnFilesLoaded()	
[00:00:09]: OnUpdatePurchaseStateComplete	
[00:00:09]: SUCCESS: Loaded modoverrides.lua	
[00:00:09]: Found a level data override file with these contents:	
[00:00:09]: 	K: 	desc	 V: 	永不结束的饥荒沙盒模式。
永远可以在绚丽之门复活。	
[00:00:09]: 	K: 	hideminimap	 V: 	false	
[00:00:09]: 	K: 	id	 V: 	ENDLESS	
[00:00:09]: 	K: 	location	 V: 	forest	
[00:00:09]: 	K: 	max_playlist_position	 V: 	999	
[00:00:09]: 	K: 	min_playlist_position	 V: 	0	
[00:00:09]: 	K: 	name	 V: 	无尽	
[00:00:09]: 	K: 	numrandom_set_pieces	 V: 	4	
[00:00:09]: 	K: 	override_level_string	 V: 	false	
[00:00:09]: 	K: 	overrides	 V: 	table: 000000001BE725C0	
[00:00:09]: 		K: 	alternatehunt	 V: 	default	
[00:00:09]: 		K: 	angrybees	 V: 	default	
[00:00:09]: 		K: 	antliontribute	 V: 	default	
[00:00:09]: 		K: 	autumn	 V: 	default	
[00:00:09]: 		K: 	bananabush_portalrate	 V: 	default	
[00:00:09]: 		K: 	basicresource_regrowth	 V: 	always	
[00:00:09]: 		K: 	bats_setting	 V: 	default	
[00:00:09]: 		K: 	bearger	 V: 	default	
[00:00:09]: 		K: 	beefalo	 V: 	default	
[00:00:09]: 		K: 	beefaloheat	 V: 	default	
[00:00:09]: 		K: 	beequeen	 V: 	default	
[00:00:09]: 		K: 	bees	 V: 	default	
[00:00:09]: 		K: 	bees_setting	 V: 	default	
[00:00:09]: 		K: 	berrybush	 V: 	default	
[00:00:09]: 		K: 	birds	 V: 	default	
[00:00:09]: 		K: 	boons	 V: 	default	
[00:00:09]: 		K: 	branching	 V: 	never	
[00:00:09]: 		K: 	brightmarecreatures	 V: 	default	
[00:00:09]: 		K: 	bunnymen_setting	 V: 	default	
[00:00:09]: 		K: 	butterfly	 V: 	default	
[00:00:09]: 		K: 	buzzard	 V: 	default	
[00:00:09]: 		K: 	cactus	 V: 	default	
[00:00:09]: 		K: 	cactus_regrowth	 V: 	default	
[00:00:09]: 		K: 	carrot	 V: 	default	
[00:00:09]: 		K: 	carrots_regrowth	 V: 	default	
[00:00:09]: 		K: 	catcoon	 V: 	default	
[00:00:09]: 		K: 	catcoons	 V: 	default	
[00:00:09]: 		K: 	chess	 V: 	default	
[00:00:09]: 		K: 	cookiecutters	 V: 	default	
[00:00:09]: 		K: 	crabking	 V: 	default	
[00:00:09]: 		K: 	crow_carnival	 V: 	default	
[00:00:09]: 		K: 	darkness	 V: 	default	
[00:00:09]: 		K: 	day	 V: 	default	
[00:00:09]: 		K: 	deciduousmonster	 V: 	default	
[00:00:09]: 		K: 	deciduoustree_regrowth	 V: 	default	
[00:00:09]: 		K: 	deerclops	 V: 	default	
[00:00:09]: 		K: 	dragonfly	 V: 	default	
[00:00:09]: 		K: 	dropeverythingondespawn	 V: 	default	
[00:00:09]: 		K: 	evergreen_regrowth	 V: 	default	
[00:00:09]: 		K: 	extrastartingitems	 V: 	default	
[00:00:09]: 		K: 	eyeofterror	 V: 	default	
[00:00:09]: 		K: 	fishschools	 V: 	default	
[00:00:09]: 		K: 	flint	 V: 	default	
[00:00:09]: 		K: 	flowers	 V: 	default	
[00:00:09]: 		K: 	flowers_regrowth	 V: 	default	
[00:00:09]: 		K: 	frograin	 V: 	default	
[00:00:09]: 		K: 	frogs	 V: 	default	
[00:00:09]: 		K: 	fruitfly	 V: 	default	
[00:00:09]: 		K: 	ghostenabled	 V: 	always	
[00:00:09]: 		K: 	ghostsanitydrain	 V: 	none	
[00:00:09]: 		K: 	gnarwail	 V: 	default	
[00:00:09]: 		K: 	goosemoose	 V: 	default	
[00:00:09]: 		K: 	grass	 V: 	default	
[00:00:09]: 		K: 	grassgekkos	 V: 	default	
[00:00:09]: 		K: 	hallowed_nights	 V: 	default	
[00:00:09]: 		K: 	has_ocean	 V: 	true	
[00:00:09]: 		K: 	healthpenalty	 V: 	always	
[00:00:09]: 		K: 	hound_mounds	 V: 	default	
[00:00:09]: 		K: 	houndmound	 V: 	default	
[00:00:09]: 		K: 	hounds	 V: 	default	
[00:00:09]: 		K: 	hunger	 V: 	default	
[00:00:09]: 		K: 	hunt	 V: 	default	
[00:00:09]: 		K: 	keep_disconnected_tiles	 V: 	true	
[00:00:09]: 		K: 	klaus	 V: 	default	
[00:00:09]: 		K: 	krampus	 V: 	default	
[00:00:09]: 		K: 	layout_mode	 V: 	LinkNodesByKeys	
[00:00:09]: 		K: 	lessdamagetaken	 V: 	none	
[00:00:09]: 		K: 	liefs	 V: 	default	
[00:00:09]: 		K: 	lightcrab_portalrate	 V: 	default	
[00:00:09]: 		K: 	lightning	 V: 	default	
[00:00:09]: 		K: 	lightninggoat	 V: 	default	
[00:00:09]: 		K: 	loop	 V: 	always	
[00:00:09]: 		K: 	lureplants	 V: 	default	
[00:00:09]: 		K: 	malbatross	 V: 	default	
[00:00:09]: 		K: 	marshbush	 V: 	default	
[00:00:09]: 		K: 	merm	 V: 	default	
[00:00:09]: 		K: 	merms	 V: 	default	
[00:00:09]: 		K: 	meteorshowers	 V: 	default	
[00:00:09]: 		K: 	meteorspawner	 V: 	default	
[00:00:09]: 		K: 	moles	 V: 	default	
[00:00:09]: 		K: 	moles_setting	 V: 	default	
[00:00:09]: 		K: 	monkeytail_portalrate	 V: 	default	
[00:00:09]: 		K: 	moon_berrybush	 V: 	default	
[00:00:09]: 		K: 	moon_bullkelp	 V: 	default	
[00:00:09]: 		K: 	moon_carrot	 V: 	default	
[00:00:09]: 		K: 	moon_fissure	 V: 	default	
[00:00:09]: 		K: 	moon_fruitdragon	 V: 	default	
[00:00:09]: 		K: 	moon_hotspring	 V: 	default	
[00:00:09]: 		K: 	moon_rock	 V: 	default	
[00:00:09]: 		K: 	moon_sapling	 V: 	default	
[00:00:09]: 		K: 	moon_spider	 V: 	default	
[00:00:09]: 		K: 	moon_spiders	 V: 	default	
[00:00:09]: 		K: 	moon_starfish	 V: 	default	
[00:00:09]: 		K: 	moon_tree	 V: 	default	
[00:00:09]: 		K: 	moon_tree_regrowth	 V: 	default	
[00:00:09]: 		K: 	mosquitos	 V: 	default	
[00:00:09]: 		K: 	mushroom	 V: 	default	
[00:00:09]: 		K: 	mutated_hounds	 V: 	default	
[00:00:09]: 		K: 	no_joining_islands	 V: 	true	
[00:00:09]: 		K: 	no_wormholes_to_disconnected_tiles	 V: 	true	
[00:00:09]: 		K: 	ocean_bullkelp	 V: 	default	
[00:00:09]: 		K: 	ocean_seastack	 V: 	ocean_default	
[00:00:09]: 		K: 	ocean_shoal	 V: 	default	
[00:00:09]: 		K: 	ocean_waterplant	 V: 	ocean_default	
[00:00:09]: 		K: 	ocean_wobsterden	 V: 	default	
[00:00:09]: 		K: 	palmcone_seed_portalrate	 V: 	default	
[00:00:09]: 		K: 	palmconetree	 V: 	default	
[00:00:09]: 		K: 	palmconetree_regrowth	 V: 	default	
[00:00:09]: 		K: 	penguins	 V: 	default	
[00:00:09]: 		K: 	penguins_moon	 V: 	default	
[00:00:09]: 		K: 	perd	 V: 	default	
[00:00:09]: 		K: 	petrification	 V: 	default	
[00:00:09]: 		K: 	pigs	 V: 	default	
[00:00:09]: 		K: 	pigs_setting	 V: 	default	
[00:00:09]: 		K: 	pirateraids	 V: 	default	
[00:00:09]: 		K: 	ponds	 V: 	default	
[00:00:09]: 		K: 	portal_spawnrate	 V: 	default	
[00:00:09]: 		K: 	portalresurection	 V: 	always	
[00:00:09]: 		K: 	powder_monkey_portalrate	 V: 	default	
[00:00:09]: 		K: 	prefabswaps_start	 V: 	classic	
[00:00:09]: 		K: 	rabbits	 V: 	default	
[00:00:09]: 		K: 	rabbits_setting	 V: 	default	
[00:00:09]: 		K: 	reeds	 V: 	default	
[00:00:09]: 		K: 	reeds_regrowth	 V: 	default	
[00:00:09]: 		K: 	regrowth	 V: 	default	
[00:00:09]: 		K: 	resettime	 V: 	none	
[00:00:09]: 		K: 	rifts_enabled	 V: 	default	
[00:00:09]: 		K: 	rifts_frequency	 V: 	default	
[00:00:09]: 		K: 	roads	 V: 	default	
[00:00:09]: 		K: 	rock	 V: 	default	
[00:00:09]: 		K: 	rock_ice	 V: 	default	
[00:00:09]: 		K: 	saltstack_regrowth	 V: 	default	
[00:00:09]: 		K: 	sapling	 V: 	default	
[00:00:09]: 		K: 	season_start	 V: 	default	
[00:00:09]: 		K: 	seasonalstartingitems	 V: 	default	
[00:00:09]: 		K: 	shadowcreatures	 V: 	default	
[00:00:09]: 		K: 	sharks	 V: 	default	
[00:00:09]: 		K: 	spawnmode	 V: 	fixed	
[00:00:09]: 		K: 	spawnprotection	 V: 	default	
[00:00:09]: 		K: 	specialevent	 V: 	default	
[00:00:09]: 		K: 	spider_warriors	 V: 	default	
[00:00:09]: 		K: 	spiderqueen	 V: 	default	
[00:00:09]: 		K: 	spiders	 V: 	default	
[00:00:09]: 		K: 	spiders_setting	 V: 	default	
[00:00:09]: 		K: 	spring	 V: 	default	
[00:00:09]: 		K: 	squid	 V: 	default	
[00:00:09]: 		K: 	stageplays	 V: 	default	
[00:00:09]: 		K: 	start_location	 V: 	default	
[00:00:09]: 		K: 	summer	 V: 	default	
[00:00:09]: 		K: 	summerhounds	 V: 	default	
[00:00:09]: 		K: 	tallbirds	 V: 	default	
[00:00:09]: 		K: 	task_set	 V: 	default	
[00:00:09]: 		K: 	temperaturedamage	 V: 	default	
[00:00:09]: 		K: 	tentacles	 V: 	default	
[00:00:09]: 		K: 	terrariumchest	 V: 	default	
[00:00:09]: 		K: 	touchstone	 V: 	default	
[00:00:09]: 		K: 	trees	 V: 	default	
[00:00:09]: 		K: 	tumbleweed	 V: 	default	
[00:00:09]: 		K: 	twiggytrees_regrowth	 V: 	default	
[00:00:09]: 		K: 	walrus	 V: 	default	
[00:00:09]: 		K: 	walrus_setting	 V: 	default	
[00:00:09]: 		K: 	wasps	 V: 	default	
[00:00:09]: 		K: 	weather	 V: 	default	
[00:00:09]: 		K: 	wildfires	 V: 	default	
[00:00:09]: 		K: 	winter	 V: 	default	
[00:00:09]: 		K: 	winterhounds	 V: 	default	
[00:00:09]: 		K: 	winters_feast	 V: 	default	
[00:00:09]: 		K: 	wobsters	 V: 	default	
[00:00:09]: 		K: 	world_size	 V: 	default	
[00:00:09]: 		K: 	worldseed	 V: 		
[00:00:09]: 		K: 	wormhole_prefab	 V: 	wormhole	
[00:00:09]: 		K: 	year_of_the_beefalo	 V: 	default	
[00:00:09]: 		K: 	year_of_the_bunnyman	 V: 	default	
[00:00:09]: 		K: 	year_of_the_carrat	 V: 	default	
[00:00:09]: 		K: 	year_of_the_catcoon	 V: 	default	
[00:00:09]: 		K: 	year_of_the_gobbler	 V: 	default	
[00:00:09]: 		K: 	year_of_the_pig	 V: 	default	
[00:00:09]: 		K: 	year_of_the_varg	 V: 	default	
[00:00:09]: 	K: 	playstyle	 V: 	endless	
[00:00:09]: 	K: 	random_set_pieces	 V: 	table: 000000001BE723E0	
[00:00:09]: 		K: 	1	 V: 	Sculptures_2	
[00:00:09]: 		K: 	2	 V: 	Sculptures_3	
[00:00:09]: 		K: 	3	 V: 	Sculptures_4	
[00:00:09]: 		K: 	4	 V: 	Sculptures_5	
[00:00:09]: 		K: 	5	 V: 	Chessy_1	
[00:00:09]: 		K: 	6	 V: 	Chessy_2	
[00:00:09]: 		K: 	7	 V: 	Chessy_3	
[00:00:09]: 		K: 	8	 V: 	Chessy_4	
[00:00:09]: 		K: 	9	 V: 	Chessy_5	
[00:00:09]: 		K: 	10	 V: 	Chessy_6	
[00:00:09]: 		K: 	11	 V: 	Maxwell1	
[00:00:09]: 		K: 	12	 V: 	Maxwell2	
[00:00:09]: 		K: 	13	 V: 	Maxwell3	
[00:00:09]: 		K: 	14	 V: 	Maxwell4	
[00:00:09]: 		K: 	15	 V: 	Maxwell6	
[00:00:09]: 		K: 	16	 V: 	Maxwell7	
[00:00:09]: 		K: 	17	 V: 	Warzone_1	
[00:00:09]: 		K: 	18	 V: 	Warzone_2	
[00:00:09]: 		K: 	19	 V: 	Warzone_3	
[00:00:09]: 	K: 	required_prefabs	 V: 	table: 000000001BE72200	
[00:00:09]: 		K: 	1	 V: 	multiplayer_portal	
[00:00:09]: 	K: 	required_setpieces	 V: 	table: 000000001BE718A0	
[00:00:09]: 		K: 	1	 V: 	Sculptures_1	
[00:00:09]: 		K: 	2	 V: 	Maxwell5	
[00:00:09]: 	K: 	settings_desc	 V: 	永不结束的饥荒沙盒模式。
永远可以在绚丽之门复活。	
[00:00:09]: 	K: 	settings_id	 V: 	ENDLESS	
[00:00:09]: 	K: 	settings_name	 V: 	无尽	
[00:00:09]: 	K: 	substitutes	 V: 	table: 000000001BE71FD0	
[00:00:09]: 	K: 	version	 V: 	4	
[00:00:09]: 	K: 	worldgen_desc	 V: 	永不结束的饥荒沙盒模式。
永远可以在绚丽之门复活。	
[00:00:09]: 	K: 	worldgen_id	 V: 	ENDLESS	
[00:00:09]: 	K: 	worldgen_name	 V: 	无尽	
[00:00:09]: Loaded and applied level data override from ../leveldataoverride.lua	
[00:00:09]: Overwriting savedata with level data file.	
[00:00:09]: Not applying world gen overrides.	
[00:00:09]: [IPC] Signal 'DST_Master_WorldGen' opened  #0000000000000768
[00:00:09]: [IPC] Sending signal... #0000000000000768
[00:00:09]: WorldSim::SimThread::SimThread()
[00:00:09]: ABOUT TO INSTALL STACKTRACE
[00:00:09]: DoLuaFile scripts/stacktrace.lua
[00:00:09]: DoLuaFile loading buffer scripts/stacktrace.lua
[00:00:09]: INSTALLED STACKTRACE
[00:00:09]: WorldSim::SimThread::SimThread() complete
[00:00:09]: THREAD - started 'WorldSim' (51480)
[00:00:09]: WorldSim::SimThread::Main()
[00:00:09]: DoLuaFile scripts/worldgen_main.lua
[00:00:09]: Check for write access: TRUE
[00:00:09]: Check for read access: TRUE
[00:00:09]: Available disk space for save files: 86365 MB
[00:00:09]: ModIndex: Load sequence finished successfully.	
[00:00:09]: Reset() returning
[00:00:09]: DoLuaFile loading buffer scripts/worldgen_main.lua
[00:00:09]: DLC enabled : 	false	
[00:00:10]:   taskgrouplist:	default	Together	
[00:00:10]:   taskgrouplist:	classic	Classic	
[00:00:10]:   taskgrouplist:	cave_default	Underground	
[00:00:10]:   taskgrouplist:	lavaarena_taskset	The Forge	
[00:00:10]:   taskgrouplist:	quagmire_taskset	The Gorge	
[00:00:10]: ModIndex:GetModsToLoad inserting modname, 	workshop-786556008	
[00:00:10]: ModIndex:GetModsToLoad inserting modname, 	workshop-569043634	
[00:00:10]: ModIndex:GetModsToLoad inserting modname, 	workshop-1207269058	
[00:00:10]: ModIndex:GetModsToLoad inserting modname, 	workshop-362175979	
[00:00:10]: ModIndex:GetModsToLoad inserting modname, 	workshop-375859599	
[00:00:10]: ModIndex:GetModsToLoad inserting modname, 	workshop-378160973	
[00:00:10]: ModIndex:GetModsToLoad inserting modname, 	workshop-666155465	
[00:00:10]: ModIndex:GetModsToLoad inserting modname, 	workshop-661253977	
[00:00:10]: ModIndex:GetModsToLoad inserting modname, 	workshop-375850593	
[00:00:10]: ModIndex:GetModsToLoad inserting modname, 	workshop-1378549454	
[00:00:10]: ModIndex:GetModsToLoad inserting modname, 	workshop-1185229307	
[00:00:10]: ModIndex:GetModsToLoad inserting modname, 	workshop-856487758	
[00:00:10]: ModIndex:GetModsToLoad inserting modname, 	workshop-347079953	
[00:00:10]: Loading mod: workshop-786556008 (45 Inventory Slots) Version:1.4.1	
[00:00:10]: Loading mod: workshop-569043634 (Campfire Respawn) Version:1.6.8.1	
[00:00:10]: Loading mod: workshop-1207269058 ( Simple Health Bar DST) Version:2.16	
[00:00:10]: Loading mod: workshop-362175979 (Wormhole Marks) Version:1.4.5	
[00:00:10]: Loading mod: workshop-375859599 (Health Info) Version:2.2.03	
[00:00:10]: Loading mod: workshop-378160973 (Global Positions) Version:1.7.4	
[00:00:10]: Loading mod: workshop-666155465 (Show Me (Origin)) Version:0.58	
[00:00:10]: Loading mod: workshop-661253977 ( Don't Drop Everything) Version:11:15 2020-08-10	
[00:00:10]: Loading mod: workshop-375850593 (Extra Equip Slots) Version:1.8.0	
[00:00:10]: Loading mod: workshop-1378549454 ([API] Gem Core) Version:5.1.43	
[00:00:10]: Loading mod: workshop-1185229307 (史诗般的血量条) Version:73	
[00:00:10]: Loading mod: workshop-856487758 (Quick Drop) Version:1.1	
[00:00:10]: Loading mod: workshop-347079953 (Display food values) Version:1.61	
[00:00:10]: Mod: workshop-1378549454 ([API] Gem Core)	Loading modworldgenmain.lua	
[00:00:10]: Mod: workshop-1378549454 ([API] Gem Core)	Loading modbackendmain.lua	
[00:00:10]: modimport: ../mods/workshop-1378549454/gemscripts/gemrun	
[00:00:10]: modimport: ../mods/workshop-1378549454/gemscripts/legacy_modbackendmain	
[00:00:10]: Mod: workshop-1185229307 (史诗般的血量条)	Loading modworldgenmain.lua	
[00:00:10]: Mod: workshop-1185229307 (史诗般的血量条)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:10]: Mod: workshop-1185229307 (史诗般的血量条)	Loading modbackendmain.lua	
[00:00:10]: Mod: workshop-1185229307 (史诗般的血量条)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:10]: Mod: workshop-375850593 (Extra Equip Slots)	Loading modworldgenmain.lua	
[00:00:10]: Mod: workshop-375850593 (Extra Equip Slots)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:10]: Mod: workshop-375850593 (Extra Equip Slots)	Loading modbackendmain.lua	
[00:00:10]: Mod: workshop-375850593 (Extra Equip Slots)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:10]: Mod: workshop-347079953 (Display food values)	Loading modworldgenmain.lua	
[00:00:10]: Mod: workshop-347079953 (Display food values)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:10]: Mod: workshop-347079953 (Display food values)	Loading modbackendmain.lua	
[00:00:10]: Mod: workshop-347079953 (Display food values)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:10]: Mod: workshop-786556008 (45 Inventory Slots)	Loading modworldgenmain.lua	
[00:00:10]: Mod: workshop-786556008 (45 Inventory Slots)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:10]: Mod: workshop-786556008 (45 Inventory Slots)	Loading modbackendmain.lua	
[00:00:10]: Mod: workshop-786556008 (45 Inventory Slots)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:10]: Mod: workshop-666155465 (Show Me (Origin))	Loading modworldgenmain.lua	
[00:00:10]: Mod: workshop-666155465 (Show Me (Origin))	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:10]: Mod: workshop-666155465 (Show Me (Origin))	Loading modbackendmain.lua	
[00:00:10]: Mod: workshop-666155465 (Show Me (Origin))	  Mod had no modbackendmain.lua. Skipping.	
[00:00:10]: Mod: workshop-375859599 (Health Info)	Loading modworldgenmain.lua	
[00:00:10]: Mod: workshop-375859599 (Health Info)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:10]: Mod: workshop-375859599 (Health Info)	Loading modbackendmain.lua	
[00:00:10]: Mod: workshop-375859599 (Health Info)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:10]: Mod: workshop-362175979 (Wormhole Marks)	Loading modworldgenmain.lua	
[00:00:10]: Mod: workshop-362175979 (Wormhole Marks)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:10]: Mod: workshop-362175979 (Wormhole Marks)	Loading modbackendmain.lua	
[00:00:10]: Mod: workshop-362175979 (Wormhole Marks)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:10]: Mod: workshop-856487758 (Quick Drop)	Loading modworldgenmain.lua	
[00:00:10]: Mod: workshop-856487758 (Quick Drop)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:10]: Mod: workshop-856487758 (Quick Drop)	Loading modbackendmain.lua	
[00:00:10]: Mod: workshop-856487758 (Quick Drop)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:10]: Mod: workshop-569043634 (Campfire Respawn)	Loading modworldgenmain.lua	
[00:00:10]: Mod: workshop-569043634 (Campfire Respawn)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:10]: Mod: workshop-569043634 (Campfire Respawn)	Loading modbackendmain.lua	
[00:00:10]: Mod: workshop-569043634 (Campfire Respawn)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:10]: Mod: workshop-661253977 ( Don't Drop Everything)	Loading modworldgenmain.lua	
[00:00:10]: Mod: workshop-661253977 ( Don't Drop Everything)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:10]: Mod: workshop-661253977 ( Don't Drop Everything)	Loading modbackendmain.lua	
[00:00:10]: Mod: workshop-661253977 ( Don't Drop Everything)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:10]: Mod: workshop-378160973 (Global Positions)	Loading modworldgenmain.lua	
[00:00:10]: Mod: workshop-378160973 (Global Positions)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:10]: Mod: workshop-378160973 (Global Positions)	Loading modbackendmain.lua	
[00:00:10]: Mod: workshop-378160973 (Global Positions)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:10]: Mod: workshop-1207269058 ( Simple Health Bar DST)	Loading modworldgenmain.lua	
[00:00:10]: Mod: workshop-1207269058 ( Simple Health Bar DST)	  Mod had no modworldgenmain.lua. Skipping.	
[00:00:10]: Mod: workshop-1207269058 ( Simple Health Bar DST)	Loading modbackendmain.lua	
[00:00:10]: Mod: workshop-1207269058 ( Simple Health Bar DST)	  Mod had no modbackendmain.lua. Skipping.	
[00:00:10]: Mod: workshop-1378549454 ([API] Gem Core)	Loading modworldgenmainpostinit.lua	
[00:00:10]: Mod: workshop-1185229307 (史诗般的血量条)	Loading modworldgenmainpostinit.lua	
[00:00:10]: Mod: workshop-1185229307 (史诗般的血量条)	  Mod had no modworldgenmainpostinit.lua. Skipping.	
[00:00:10]: Mod: workshop-375850593 (Extra Equip Slots)	Loading modworldgenmainpostinit.lua	
[00:00:10]: Mod: workshop-375850593 (Extra Equip Slots)	  Mod had no modworldgenmainpostinit.lua. Skipping.	
[00:00:10]: Mod: workshop-347079953 (Display food values)	Loading modworldgenmainpostinit.lua	
[00:00:10]: Mod: workshop-347079953 (Display food values)	  Mod had no modworldgenmainpostinit.lua. Skipping.	
[00:00:10]: Mod: workshop-786556008 (45 Inventory Slots)	Loading modworldgenmainpostinit.lua	
[00:00:10]: Mod: workshop-786556008 (45 Inventory Slots)	  Mod had no modworldgenmainpostinit.lua. Skipping.	
[00:00:10]: Mod: workshop-666155465 (Show Me (Origin))	Loading modworldgenmainpostinit.lua	
[00:00:10]: Mod: workshop-666155465 (Show Me (Origin))	  Mod had no modworldgenmainpostinit.lua. Skipping.	
[00:00:10]: Mod: workshop-375859599 (Health Info)	Loading modworldgenmainpostinit.lua	
[00:00:10]: Mod: workshop-375859599 (Health Info)	  Mod had no modworldgenmainpostinit.lua. Skipping.	
[00:00:10]: Mod: workshop-362175979 (Wormhole Marks)	Loading modworldgenmainpostinit.lua	
[00:00:10]: Mod: workshop-362175979 (Wormhole Marks)	  Mod had no modworldgenmainpostinit.lua. Skipping.	
[00:00:10]: Mod: workshop-856487758 (Quick Drop)	Loading modworldgenmainpostinit.lua	
[00:00:10]: Mod: workshop-856487758 (Quick Drop)	  Mod had no modworldgenmainpostinit.lua. Skipping.	
[00:00:10]: Mod: workshop-569043634 (Campfire Respawn)	Loading modworldgenmainpostinit.lua	
[00:00:10]: Mod: workshop-569043634 (Campfire Respawn)	  Mod had no modworldgenmainpostinit.lua. Skipping.	
[00:00:10]: Mod: workshop-661253977 ( Don't Drop Everything)	Loading modworldgenmainpostinit.lua	
[00:00:10]: Mod: workshop-661253977 ( Don't Drop Everything)	  Mod had no modworldgenmainpostinit.lua. Skipping.	
[00:00:10]: Mod: workshop-378160973 (Global Positions)	Loading modworldgenmainpostinit.lua	
[00:00:10]: Mod: workshop-378160973 (Global Positions)	  Mod had no modworldgenmainpostinit.lua. Skipping.	
[00:00:10]: Mod: workshop-1207269058 ( Simple Health Bar DST)	Loading modworldgenmainpostinit.lua	
[00:00:10]: Mod: workshop-1207269058 ( Simple Health Bar DST)	  Mod had no modworldgenmainpostinit.lua. Skipping.	
[00:00:10]: running worldgen_main.lua
	
[00:00:10]: SEED = 	1686879197	
[00:00:10]: Generating world with these parameters:	
[00:00:10]: level_type	SURVIVAL	
[00:00:10]: level_data:	
[00:00:10]: 	K: 	desc	 V: 	永不结束的饥荒沙盒模式。
永远可以在绚丽之门复活。	
[00:00:10]: 	K: 	hideminimap	 V: 	false	
[00:00:10]: 	K: 	id	 V: 	ENDLESS	
[00:00:10]: 	K: 	location	 V: 	forest	
[00:00:10]: 	K: 	max_playlist_position	 V: 	999	
[00:00:10]: 	K: 	min_playlist_position	 V: 	0	
[00:00:10]: 	K: 	name	 V: 	无尽	
[00:00:10]: 	K: 	numrandom_set_pieces	 V: 	4	
[00:00:10]: 	K: 	override_level_string	 V: 	false	
[00:00:10]: 	K: 	overrides	 V: 	table: 000000000E11CDD0	
[00:00:10]: 		K: 	alternatehunt	 V: 	default	
[00:00:10]: 		K: 	angrybees	 V: 	default	
[00:00:10]: 		K: 	antliontribute	 V: 	default	
[00:00:10]: 		K: 	autumn	 V: 	default	
[00:00:10]: 		K: 	bananabush_portalrate	 V: 	default	
[00:00:10]: 		K: 	basicresource_regrowth	 V: 	always	
[00:00:10]: 		K: 	bats_setting	 V: 	default	
[00:00:10]: 		K: 	bearger	 V: 	default	
[00:00:10]: 		K: 	beefalo	 V: 	default	
[00:00:10]: 		K: 	beefaloheat	 V: 	default	
[00:00:10]: 		K: 	beequeen	 V: 	default	
[00:00:10]: 		K: 	bees	 V: 	default	
[00:00:10]: 		K: 	bees_setting	 V: 	default	
[00:00:10]: 		K: 	berrybush	 V: 	default	
[00:00:10]: 		K: 	birds	 V: 	default	
[00:00:10]: 		K: 	boons	 V: 	default	
[00:00:10]: 		K: 	branching	 V: 	never	
[00:00:10]: 		K: 	brightmarecreatures	 V: 	default	
[00:00:10]: 		K: 	bunnymen_setting	 V: 	default	
[00:00:10]: 		K: 	butterfly	 V: 	default	
[00:00:10]: 		K: 	buzzard	 V: 	default	
[00:00:10]: 		K: 	cactus	 V: 	default	
[00:00:10]: 		K: 	cactus_regrowth	 V: 	default	
[00:00:10]: 		K: 	carrot	 V: 	default	
[00:00:10]: 		K: 	carrots_regrowth	 V: 	default	
[00:00:10]: 		K: 	catcoon	 V: 	default	
[00:00:10]: 		K: 	catcoons	 V: 	default	
[00:00:10]: 		K: 	chess	 V: 	default	
[00:00:10]: 		K: 	cookiecutters	 V: 	default	
[00:00:10]: 		K: 	crabking	 V: 	default	
[00:00:10]: 		K: 	crow_carnival	 V: 	default	
[00:00:10]: 		K: 	darkness	 V: 	default	
[00:00:10]: 		K: 	day	 V: 	default	
[00:00:10]: 		K: 	deciduousmonster	 V: 	default	
[00:00:10]: 		K: 	deciduoustree_regrowth	 V: 	default	
[00:00:10]: 		K: 	deerclops	 V: 	default	
[00:00:10]: 		K: 	dragonfly	 V: 	default	
[00:00:10]: 		K: 	dropeverythingondespawn	 V: 	default	
[00:00:10]: 		K: 	evergreen_regrowth	 V: 	default	
[00:00:10]: 		K: 	extrastartingitems	 V: 	default	
[00:00:10]: 		K: 	eyeofterror	 V: 	default	
[00:00:10]: 		K: 	fishschools	 V: 	default	
[00:00:10]: 		K: 	flint	 V: 	default	
[00:00:10]: 		K: 	flowers	 V: 	default	
[00:00:10]: 		K: 	flowers_regrowth	 V: 	default	
[00:00:10]: 		K: 	frograin	 V: 	default	
[00:00:10]: 		K: 	frogs	 V: 	default	
[00:00:10]: 		K: 	fruitfly	 V: 	default	
[00:00:10]: 		K: 	ghostenabled	 V: 	always	
[00:00:10]: 		K: 	ghostsanitydrain	 V: 	none	
[00:00:10]: 		K: 	gnarwail	 V: 	default	
[00:00:10]: 		K: 	goosemoose	 V: 	default	
[00:00:10]: 		K: 	grass	 V: 	default	
[00:00:10]: 		K: 	grassgekkos	 V: 	default	
[00:00:10]: 		K: 	hallowed_nights	 V: 	default	
[00:00:10]: 		K: 	has_ocean	 V: 	true	
[00:00:10]: 		K: 	healthpenalty	 V: 	always	
[00:00:10]: 		K: 	hound_mounds	 V: 	default	
[00:00:10]: 		K: 	houndmound	 V: 	default	
[00:00:10]: 		K: 	hounds	 V: 	default	
[00:00:10]: 		K: 	hunger	 V: 	default	
[00:00:10]: 		K: 	hunt	 V: 	default	
[00:00:10]: 		K: 	keep_disconnected_tiles	 V: 	true	
[00:00:10]: 		K: 	klaus	 V: 	default	
[00:00:10]: 		K: 	krampus	 V: 	default	
[00:00:10]: 		K: 	layout_mode	 V: 	LinkNodesByKeys	
[00:00:10]: 		K: 	lessdamagetaken	 V: 	none	
[00:00:10]: 		K: 	liefs	 V: 	default	
[00:00:10]: 		K: 	lightcrab_portalrate	 V: 	default	
[00:00:10]: 		K: 	lightning	 V: 	default	
[00:00:10]: 		K: 	lightninggoat	 V: 	default	
[00:00:10]: 		K: 	loop	 V: 	always	
[00:00:10]: 		K: 	lureplants	 V: 	default	
[00:00:10]: 		K: 	malbatross	 V: 	default	
[00:00:10]: 		K: 	marshbush	 V: 	default	
[00:00:10]: 		K: 	merm	 V: 	default	
[00:00:10]: 		K: 	merms	 V: 	default	
[00:00:10]: 		K: 	meteorshowers	 V: 	default	
[00:00:10]: 		K: 	meteorspawner	 V: 	default	
[00:00:10]: 		K: 	moles	 V: 	default	
[00:00:10]: 		K: 	moles_setting	 V: 	default	
[00:00:10]: 		K: 	monkeytail_portalrate	 V: 	default	
[00:00:10]: 		K: 	moon_berrybush	 V: 	default	
[00:00:10]: 		K: 	moon_bullkelp	 V: 	default	
[00:00:10]: 		K: 	moon_carrot	 V: 	default	
[00:00:10]: 		K: 	moon_fissure	 V: 	default	
[00:00:10]: 		K: 	moon_fruitdragon	 V: 	default	
[00:00:10]: 		K: 	moon_hotspring	 V: 	default	
[00:00:10]: 		K: 	moon_rock	 V: 	default	
[00:00:10]: 		K: 	moon_sapling	 V: 	default	
[00:00:10]: 		K: 	moon_spider	 V: 	default	
[00:00:10]: 		K: 	moon_spiders	 V: 	default	
[00:00:10]: 		K: 	moon_starfish	 V: 	default	
[00:00:10]: 		K: 	moon_tree	 V: 	default	
[00:00:10]: 		K: 	moon_tree_regrowth	 V: 	default	
[00:00:10]: 		K: 	mosquitos	 V: 	default	
[00:00:10]: 		K: 	mushroom	 V: 	default	
[00:00:10]: 		K: 	mutated_hounds	 V: 	default	
[00:00:10]: 		K: 	no_joining_islands	 V: 	true	
[00:00:10]: 		K: 	no_wormholes_to_disconnected_tiles	 V: 	true	
[00:00:10]: 		K: 	ocean_bullkelp	 V: 	default	
[00:00:10]: 		K: 	ocean_seastack	 V: 	ocean_default	
[00:00:10]: 		K: 	ocean_shoal	 V: 	default	
[00:00:10]: 		K: 	ocean_waterplant	 V: 	ocean_default	
[00:00:10]: 		K: 	ocean_wobsterden	 V: 	default	
[00:00:10]: 		K: 	palmcone_seed_portalrate	 V: 	default	
[00:00:10]: 		K: 	palmconetree	 V: 	default	
[00:00:10]: 		K: 	palmconetree_regrowth	 V: 	default	
[00:00:10]: 		K: 	penguins	 V: 	default	
[00:00:10]: 		K: 	penguins_moon	 V: 	default	
[00:00:10]: 		K: 	perd	 V: 	default	
[00:00:10]: 		K: 	petrification	 V: 	default	
[00:00:10]: 		K: 	pigs	 V: 	default	
[00:00:10]: 		K: 	pigs_setting	 V: 	default	
[00:00:10]: 		K: 	pirateraids	 V: 	default	
[00:00:10]: 		K: 	ponds	 V: 	default	
[00:00:10]: 		K: 	portal_spawnrate	 V: 	default	
[00:00:10]: 		K: 	portalresurection	 V: 	always	
[00:00:10]: 		K: 	powder_monkey_portalrate	 V: 	default	
[00:00:10]: 		K: 	prefabswaps_start	 V: 	classic	
[00:00:10]: 		K: 	rabbits	 V: 	default	
[00:00:10]: 		K: 	rabbits_setting	 V: 	default	
[00:00:10]: 		K: 	reeds	 V: 	default	
[00:00:10]: 		K: 	reeds_regrowth	 V: 	default	
[00:00:10]: 		K: 	regrowth	 V: 	default	
[00:00:10]: 		K: 	resettime	 V: 	none	
[00:00:10]: 		K: 	rifts_enabled	 V: 	default	
[00:00:10]: 		K: 	rifts_frequency	 V: 	default	
[00:00:10]: 		K: 	roads	 V: 	default	
[00:00:10]: 		K: 	rock	 V: 	default	
[00:00:10]: 		K: 	rock_ice	 V: 	default	
[00:00:10]: 		K: 	saltstack_regrowth	 V: 	default	
[00:00:10]: 		K: 	sapling	 V: 	default	
[00:00:10]: 		K: 	season_start	 V: 	default	
[00:00:10]: 		K: 	seasonalstartingitems	 V: 	default	
[00:00:10]: 		K: 	shadowcreatures	 V: 	default	
[00:00:10]: 		K: 	sharks	 V: 	default	
[00:00:10]: 		K: 	spawnmode	 V: 	fixed	
[00:00:10]: 		K: 	spawnprotection	 V: 	default	
[00:00:10]: 		K: 	specialevent	 V: 	default	
[00:00:10]: 		K: 	spider_warriors	 V: 	default	
[00:00:10]: 		K: 	spiderqueen	 V: 	default	
[00:00:10]: 		K: 	spiders	 V: 	default	
[00:00:10]: 		K: 	spiders_setting	 V: 	default	
[00:00:10]: 		K: 	spring	 V: 	default	
[00:00:10]: 		K: 	squid	 V: 	default	
[00:00:10]: 		K: 	stageplays	 V: 	default	
[00:00:10]: 		K: 	start_location	 V: 	default	
[00:00:10]: 		K: 	summer	 V: 	default	
[00:00:10]: 		K: 	summerhounds	 V: 	default	
[00:00:10]: 		K: 	tallbirds	 V: 	default	
[00:00:10]: 		K: 	task_set	 V: 	default	
[00:00:10]: 		K: 	temperaturedamage	 V: 	default	
[00:00:10]: 		K: 	tentacles	 V: 	default	
[00:00:10]: 		K: 	terrariumchest	 V: 	default	
[00:00:10]: 		K: 	touchstone	 V: 	default	
[00:00:10]: 		K: 	trees	 V: 	default	
[00:00:10]: 		K: 	tumbleweed	 V: 	default	
[00:00:10]: 		K: 	twiggytrees_regrowth	 V: 	default	
[00:00:10]: 		K: 	walrus	 V: 	default	
[00:00:10]: 		K: 	walrus_setting	 V: 	default	
[00:00:10]: 		K: 	wasps	 V: 	default	
[00:00:10]: 		K: 	weather	 V: 	default	
[00:00:10]: 		K: 	wildfires	 V: 	default	
[00:00:10]: 		K: 	winter	 V: 	default	
[00:00:10]: 		K: 	winterhounds	 V: 	default	
[00:00:10]: 		K: 	winters_feast	 V: 	default	
[00:00:10]: 		K: 	wobsters	 V: 	default	
[00:00:10]: 		K: 	world_size	 V: 	default	
[00:00:10]: 		K: 	worldseed	 V: 		
[00:00:10]: 		K: 	wormhole_prefab	 V: 	wormhole	
[00:00:10]: 		K: 	year_of_the_beefalo	 V: 	default	
[00:00:10]: 		K: 	year_of_the_bunnyman	 V: 	default	
[00:00:10]: 		K: 	year_of_the_carrat	 V: 	default	
[00:00:10]: 		K: 	year_of_the_catcoon	 V: 	default	
[00:00:10]: 		K: 	year_of_the_gobbler	 V: 	default	
[00:00:10]: 		K: 	year_of_the_pig	 V: 	default	
[00:00:10]: 		K: 	year_of_the_varg	 V: 	default	
[00:00:10]: 	K: 	playstyle	 V: 	endless	
[00:00:10]: 	K: 	random_set_pieces	 V: 	table: 000000000E11BD40	
[00:00:10]: 		K: 	1	 V: 	Sculptures_2	
[00:00:10]: 		K: 	2	 V: 	Sculptures_3	
[00:00:10]: 		K: 	3	 V: 	Sculptures_4	
[00:00:10]: 		K: 	4	 V: 	Sculptures_5	
[00:00:10]: 		K: 	5	 V: 	Chessy_1	
[00:00:10]: 		K: 	6	 V: 	Chessy_2	
[00:00:10]: 		K: 	7	 V: 	Chessy_3	
[00:00:10]: 		K: 	8	 V: 	Chessy_4	
[00:00:10]: 		K: 	9	 V: 	Chessy_5	
[00:00:10]: 		K: 	10	 V: 	Chessy_6	
[00:00:10]: 		K: 	11	 V: 	Maxwell1	
[00:00:10]: 		K: 	12	 V: 	Maxwell2	
[00:00:10]: 		K: 	13	 V: 	Maxwell3	
[00:00:10]: 		K: 	14	 V: 	Maxwell4	
[00:00:10]: 		K: 	15	 V: 	Maxwell6	
[00:00:10]: 		K: 	16	 V: 	Maxwell7	
[00:00:10]: 		K: 	17	 V: 	Warzone_1	
[00:00:10]: 		K: 	18	 V: 	Warzone_2	
[00:00:10]: 		K: 	19	 V: 	Warzone_3	
[00:00:10]: 	K: 	required_prefabs	 V: 	table: 000000000E11C650	
[00:00:10]: 		K: 	1	 V: 	multiplayer_portal	
[00:00:10]: 	K: 	required_setpieces	 V: 	table: 000000000E11C380	
[00:00:10]: 		K: 	1	 V: 	Sculptures_1	
[00:00:10]: 		K: 	2	 V: 	Maxwell5	
[00:00:10]: 	K: 	settings_desc	 V: 	永不结束的饥荒沙盒模式。
永远可以在绚丽之门复活。	
[00:00:10]: 	K: 	settings_id	 V: 	ENDLESS	
[00:00:10]: 	K: 	settings_name	 V: 	无尽	
[00:00:10]: 	K: 	substitutes	 V: 	table: 000000000E11C010	
[00:00:10]: 	K: 	version	 V: 	4	
[00:00:10]: 	K: 	worldgen_desc	 V: 	永不结束的饥荒沙盒模式。
永远可以在绚丽之门复活。	
[00:00:10]: 	K: 	worldgen_id	 V: 	ENDLESS	
[00:00:10]: 	K: 	worldgen_name	 V: 	无尽	
[00:00:10]: 
#######
#
# Generating SURVIVAL Mode Level
#
#######
	
[00:00:10]: Selecting Classic Prefabs	
[00:00:10]: Prefab Swap Selection: regular grass	
[00:00:10]: Prefab Swap Selection: regular twigs	
[00:00:10]: Prefab Swap Selection: regular berries	
[00:00:10]: Sculptures_1 added to task For a nice walk	
[00:00:10]: Maxwell5 added to task Great Plains	
[00:00:10]: Chessy_4 added to task For a nice walk	
[00:00:10]: Chessy_4 added to task Make a pick	
[00:00:10]: Sculptures_3 added to task Badlands	
[00:00:10]: Maxwell4 added to task Make a pick	
[00:00:10]: New size:	425	default	
[00:00:10]: Creating story...	
[00:00:10]: [Story Gen] Generate nodes. Starting at: 'Make a pick'	
[00:00:10]: [Story Gen] LinkNodesByKeys	
[00:00:10]: Finding valid start task...	
[00:00:10]:    ...picked 	Make a pick	
[00:00:10]: Has start node	Clearing	
[00:00:10]: Adding Background Nodes	
[00:00:10]: [Story Gen] Adding Cove Nodes	
[00:00:10]: [Ocean] Processing ocean fake room content.	
[00:00:10]: [WorldSimActual::WorldGen_InitializeNodePoints]
[00:00:10]: [WorldSimActual::WorldGen_VoronoiPass]
[00:00:10]: GenerateVoronoiMap [100]:
[00:00:11]: ...Done.
[00:00:11]: [Story Gen] Finding nodes on mainland to connect a region to.	
[00:00:11]: [Story Gen] Generate nodes. Starting at: 'MoonIsland_IslandShards'	
[00:00:11]: [Story Gen] RestrictNodesByKey	
[00:00:11]: [Story Gen] Adding Cove Nodes	
[00:00:11]: [WorldSimActual::WorldGen_AddNewPositions]
[00:00:11]: [WorldSimActual::WorldGen_VoronoiPass]
[00:00:11]: GenerateVoronoiMap [50]:
[00:00:11]: ...Done.
[00:00:11]: ... story created	
[00:00:11]: Baking map...	425	
[00:00:11]: [WorldSimActual::WorldGen_Commit] worldgen success.
[00:00:11]: [WorldSimActual::ConvertToTileMap]
[00:00:11]: [ConvertToTileMap]
[00:00:11]: [WorldSimActual::ConvertToTileMap] complete
[00:00:11]: [WorldSimActual::SeparateIslands]
[00:00:11]: [SeparateIslands]
[00:00:11]: [WorldSimActual::SeparateIslands] complete
[00:00:11]: Map Baked!	
[00:00:11]: [WorldSimActual::ForceConnectivity]
[00:00:11]: [GenerateLandmasses]
[00:00:11]: [GenerateLandmasses] islands: 12
[00:00:11]: [MergeConnectedLandmasses] false
[00:00:11]: [WorldSimActual::ForceConnectivity] complete
[00:00:11]: [WorldSimActual::DrawRoads]
[00:00:11]: [DrawRoads]
[00:00:11]: [WorldSimActual::DrawRoads] complete
[00:00:11]: Encoding...	
[00:00:11]: [WorldSimActual::CreateNodeIdTileMap]
[00:00:11]: Encoding... DONE	
[00:00:11]: Checking Tags	
[00:00:11]: Populating voronoi...	
[00:00:12]: [ReplaceSingleNonLandTiles] Validating...
[00:00:12]: [ReplaceSingleNonLandTiles] Replaced 9 tiles.
[00:00:12]: Not checking for disconnected tiles.	
[00:00:12]: [Ocean] Placing ocean set pieces.	
[00:00:12]: [Ocean] Placed 11 of 11 ocean set pieces.	
[00:00:12]: [Ocean] Convert impassible to water...	
[00:00:12]: [Ocean]  Square fill...	
[00:00:13]: [Ocean]  Ground fill...	
[00:00:13]: [Ocean]  Noise...	
[00:00:13]: [Ocean]  Blend...	
[00:00:13]: [Ocean]  Adding shoreline...	
[00:00:13]: [Ocean] Void Outline...	
[00:00:13]: [Ocean] Populating the ocean with lots of fun things to do...	
[00:00:13]: [Ocean] Placing ocean set pieces.	
[00:00:13]: [Ocean] Placed 9 of 9 ocean set pieces.	
[00:00:13]: [Ocean] Placing ocean set pieces.	
[00:00:13]: [Ocean] Placed 1 of 1 ocean set pieces.	
[00:00:13]: [Ocean] Placing ocean set pieces.	
[00:00:13]: [Ocean] Placed 1 of 2 ocean set pieces.	
[00:00:13]: Checking Required Prefab moon_altar_rock_glass has at least 1 instances (1 found).	
[00:00:13]: Checking Required Prefab sculpture_bishop has at least 1 instances (1 found).	
[00:00:13]: Checking Required Prefab pigking has at least 1 instances (1 found).	
[00:00:13]: Checking Required Prefab moon_fissure has at least 2 instances (91 found).	
[00:00:13]: Checking Required Prefab monkeyqueen has at least 1 instances (0 found).	
[00:00:13]: PANIC: missing required prefab [monkeyqueen]! Expected 1, got 0	
[00:00:13]: An error occured during world gen we will retry! [was 	1	 of 	5	]	
[00:00:13]: New size:	425	default	
[00:00:13]: Creating story...	
[00:00:13]: [Story Gen] Generate nodes. Starting at: 'Make a pick'	
[00:00:13]: [Story Gen] LinkNodesByKeys	
[00:00:13]: Finding valid start task...	
[00:00:13]:    ...picked 	Make a pick	
[00:00:13]: Has start node	Clearing	
[00:00:13]: Adding Background Nodes	
[00:00:13]: [Story Gen] Adding Cove Nodes	
[00:00:13]: [Ocean] Processing ocean fake room content.	
[00:00:13]: [WorldSimActual::WorldGen_InitializeNodePoints]
[00:00:13]: [WorldSimActual::WorldGen_VoronoiPass]
[00:00:13]: GenerateVoronoiMap [100]:
[00:00:14]: ...Done.
[00:00:14]: [Story Gen] Finding nodes on mainland to connect a region to.	
[00:00:14]: [Story Gen] Generate nodes. Starting at: 'MoonIsland_IslandShards'	
[00:00:14]: [Story Gen] RestrictNodesByKey	
[00:00:14]: [Story Gen] Adding Cove Nodes	
[00:00:14]: [WorldSimActual::WorldGen_AddNewPositions]
[00:00:14]: [WorldSimActual::WorldGen_VoronoiPass]
[00:00:14]: GenerateVoronoiMap [50]:
[00:00:15]: ...Done.
[00:00:15]: ... story created	
[00:00:15]: Baking map...	425	
[00:00:15]: [WorldSimActual::WorldGen_Commit] worldgen success.
[00:00:15]: [WorldSimActual::ConvertToTileMap]
[00:00:15]: [ConvertToTileMap]
[00:00:15]: [WorldSimActual::ConvertToTileMap] complete
[00:00:15]: [WorldSimActual::SeparateIslands]
[00:00:15]: [SeparateIslands]
[00:00:15]: [WorldSimActual::SeparateIslands] complete
[00:00:15]: Map Baked!	
[00:00:15]: [WorldSimActual::ForceConnectivity]
[00:00:15]: [GenerateLandmasses]
[00:00:15]: [GenerateLandmasses] islands: 11
[00:00:15]: [MergeConnectedLandmasses] false
[00:00:15]: [WorldSimActual::ForceConnectivity] complete
[00:00:15]: [WorldSimActual::DrawRoads]
[00:00:15]: [DrawRoads]
[00:00:15]: [WorldSimActual::DrawRoads] complete
[00:00:15]: Encoding...	
[00:00:15]: [WorldSimActual::CreateNodeIdTileMap]
[00:00:15]: Encoding... DONE	
[00:00:15]: Checking Tags	
[00:00:15]: Populating voronoi...	
[00:00:15]: [ReplaceSingleNonLandTiles] Validating...
[00:00:15]: [ReplaceSingleNonLandTiles] Replaced 3 tiles.
[00:00:15]: Not checking for disconnected tiles.	
[00:00:15]: Badlands:6:DragonflyArena Cant process points	
[00:00:15]: [Ocean] Placing ocean set pieces.	
[00:00:15]: [Ocean] Placed 11 of 11 ocean set pieces.	
[00:00:15]: [Ocean] Convert impassible to water...	
[00:00:15]: [Ocean]  Square fill...	
[00:00:16]: [Ocean]  Ground fill...	
[00:00:16]: [Ocean]  Noise...	
[00:00:16]: [Ocean]  Blend...	
[00:00:16]: [Ocean]  Adding shoreline...	
[00:00:16]: [Ocean] Void Outline...	
[00:00:16]: [Ocean] Populating the ocean with lots of fun things to do...	
[00:00:16]: [Ocean] Placing ocean set pieces.	
[00:00:16]: [Ocean] Placed 9 of 9 ocean set pieces.	
[00:00:16]: [Ocean] Placing ocean set pieces.	
[00:00:16]: [Ocean] Placed 1 of 1 ocean set pieces.	
[00:00:16]: [Ocean] Placing ocean set pieces.	
[00:00:16]: [Ocean] Placed 2 of 2 ocean set pieces.	
[00:00:17]: Checking Required Prefab moon_altar_rock_glass has at least 1 instances (1 found).	
[00:00:17]: Checking Required Prefab sculpture_bishop has at least 1 instances (1 found).	
[00:00:17]: Checking Required Prefab pigking has at least 1 instances (1 found).	
[00:00:17]: Checking Required Prefab moon_fissure has at least 2 instances (87 found).	
[00:00:17]: Checking Required Prefab monkeyqueen has at least 1 instances (1 found).	
[00:00:17]: Checking Required Prefab terrariumchest has at least 1 instances (1 found).	
[00:00:17]: Checking Required Prefab gravestone has at least 1 instances (28 found).	
[00:00:17]: Checking Required Prefab statueglommer has at least 1 instances (1 found).	
[00:00:17]: Checking Required Prefab waterplant has at least 1 instances (108 found).	
[00:00:17]: Checking Required Prefab sculpture_rook has at least 1 instances (2 found).	
[00:00:17]: Checking Required Prefab hermithouse_construction1 has at least 1 instances (1 found).	
[00:00:17]: Checking Required Prefab moon_altar_rock_seed has at least 1 instances (1 found).	
[00:00:17]: Checking Required Prefab statueharp_hedgespawner has at least 1 instances (1 found).	
[00:00:17]: Checking Required Prefab moon_altar_rock_idol has at least 1 instances (1 found).	
[00:00:17]: Checking Required Prefab crabking_spawner has at least 1 instances (1 found).	
[00:00:17]: Checking Required Prefab sculpture_knight has at least 1 instances (1 found).	
[00:00:17]: Checking Required Prefab charlie_stage_post has at least 1 instances (1 found).	
[00:00:17]: [ReplaceSingleNonLandTiles] Validating...
[00:00:17]: [ReplaceSingleNonLandTiles] Replaced 0 tiles.
[00:00:17]: Done forest map gen!	
[00:00:17]: Checking map...	
[00:00:17]: Generation complete, injecting world entities.	
[00:00:17]: Injected world entities.	
[00:00:17]: WorldSim::SimThread::Main() complete
[00:00:17]: Serializing world: session/4F0D0D0885D2D513/0000000002
[00:00:17]: Klump load on boot started.	
[00:00:17]: Klump files loaded: 	0	
[00:00:17]: 	Unload FE	
[00:00:17]: 	Unload FE done	
[00:00:18]: Mod: workshop-1378549454 ([API] Gem Core)	Registering prefabs	
[00:00:18]: Mod: workshop-1378549454 ([API] Gem Core)	  Registering default mod prefab	
[00:00:18]: Mod: workshop-1185229307 (史诗般的血量条)	Registering prefabs	
[00:00:18]: Mod: workshop-1185229307 (史诗般的血量条)	  Registering prefab file: prefabs/epichealth_proxy	
[00:00:18]: Mod: workshop-1185229307 (史诗般的血量条)	    epichealth_proxy	
[00:00:18]: Mod: workshop-1185229307 (史诗般的血量条)	  Registering default mod prefab	
[00:00:18]: Mod: workshop-375850593 (Extra Equip Slots)	Registering prefabs	
[00:00:18]: Mod: workshop-375850593 (Extra Equip Slots)	  Registering default mod prefab	
[00:00:18]: Mod: workshop-347079953 (Display food values)	Registering prefabs	
[00:00:18]: Mod: workshop-347079953 (Display food values)	  Registering default mod prefab	
[00:00:18]: Mod: workshop-786556008 (45 Inventory Slots)	Registering prefabs	
[00:00:18]: Mod: workshop-786556008 (45 Inventory Slots)	  Registering default mod prefab	
[00:00:18]: Mod: workshop-666155465 (Show Me (Origin))	Registering prefabs	
[00:00:18]: Mod: workshop-666155465 (Show Me (Origin))	  Registering default mod prefab	
[00:00:18]: Mod: workshop-375859599 (Health Info)	Registering prefabs	
[00:00:18]: Mod: workshop-375859599 (Health Info)	  Registering default mod prefab	
[00:00:18]: Mod: workshop-362175979 (Wormhole Marks)	Registering prefabs	
[00:00:18]: Mod: workshop-362175979 (Wormhole Marks)	  Registering default mod prefab	
[00:00:18]: Mod: workshop-856487758 (Quick Drop)	Registering prefabs	
[00:00:18]: Mod: workshop-856487758 (Quick Drop)	  Registering default mod prefab	
[00:00:18]: Mod: workshop-569043634 (Campfire Respawn)	Registering prefabs	
[00:00:18]: Mod: workshop-569043634 (Campfire Respawn)	  Registering default mod prefab	
[00:00:18]: Mod: workshop-661253977 ( Don't Drop Everything)	Registering prefabs	
[00:00:18]: Mod: workshop-661253977 ( Don't Drop Everything)	  Registering default mod prefab	
[00:00:18]: Mod: workshop-378160973 (Global Positions)	Registering prefabs	
[00:00:18]: Mod: workshop-378160973 (Global Positions)	  Registering prefab file: prefabs/globalposition_classified	
[00:00:18]: Mod: workshop-378160973 (Global Positions)	    globalposition_classified	
[00:00:18]: Mod: workshop-378160973 (Global Positions)	  Registering prefab file: prefabs/smoketrail	
[00:00:18]: Mod: workshop-378160973 (Global Positions)	    smoketrail	
[00:00:18]: Mod: workshop-378160973 (Global Positions)	  Registering prefab file: prefabs/globalmapicon_noproxy	
[00:00:18]: Mod: workshop-378160973 (Global Positions)	    globalmapicon_noproxy	
[00:00:18]: Mod: workshop-378160973 (Global Positions)	  Registering prefab file: prefabs/worldmapexplorer	
[00:00:18]: Mod: workshop-378160973 (Global Positions)	    worldmapexplorer	
[00:00:18]: Mod: workshop-378160973 (Global Positions)	  Registering prefab file: prefabs/pings	
[00:00:18]: Mod: workshop-378160973 (Global Positions)	    ping_generic	
[00:00:18]: Mod: workshop-378160973 (Global Positions)	    ping_omw	
[00:00:18]: Mod: workshop-378160973 (Global Positions)	    ping_danger	
[00:00:18]: Mod: workshop-378160973 (Global Positions)	    ping_explore	
[00:00:18]: Mod: workshop-378160973 (Global Positions)	    ping_gohere	
[00:00:18]: Mod: workshop-378160973 (Global Positions)	  Registering default mod prefab	
[00:00:18]: Mod: workshop-1207269058 ( Simple Health Bar DST)	Registering prefabs	
[00:00:18]: Mod: workshop-1207269058 ( Simple Health Bar DST)	  Registering prefab file: prefabs/dychealthbar	
[00:00:18]: Mod: workshop-1207269058 ( Simple Health Bar DST)	    dyc_damagedisplay	
[00:00:18]: Mod: workshop-1207269058 ( Simple Health Bar DST)	    dyc_healthbarchild	
[00:00:18]: Mod: workshop-1207269058 ( Simple Health Bar DST)	    dyc_healthbar	
[00:00:18]: Mod: workshop-1207269058 ( Simple Health Bar DST)	  Registering default mod prefab	
[00:00:18]: 	LOAD BE	
[00:00:24]: Could not preload undefined prefab (hermitshop_oceanfishingbobber_robin)
[00:00:24]: Could not preload undefined prefab (transmute_opalpreciousgem)
[00:00:24]: Could not preload undefined prefab (transmute_moonglass_charged)
[00:00:24]: Could not preload undefined prefab (transmute_nightmarefuel)
[00:00:24]: Could not preload undefined prefab (hermitshop_winter_ornament_boss_hermithouse)
[00:00:24]: Could not preload undefined prefab (hermitshop_oceanfishinglure_hermit_heavy)
[00:00:24]: Could not preload undefined prefab (transmute_beardhair)
[00:00:24]: Could not preload undefined prefab (hermitshop_turf_shellbeach_blueprint)
[00:00:24]: Could not preload undefined prefab (yotc_shrinecarrat)
[00:00:24]: Could not preload undefined prefab (transmute_orangegem)
[00:00:24]: Could not preload undefined prefab (hermitshop_oceanfishinglure_hermit_rain)
[00:00:24]: Could not preload undefined prefab (hermitshop_tacklecontainer)
[00:00:25]: Could not preload undefined prefab (transmute_horrorfuel)
[00:00:25]: Could not preload undefined prefab (transmute_rocks)
[00:00:25]: Could not preload undefined prefab (transmute_greengem)
[00:00:25]: Could not preload undefined prefab (transmute_purplegem)
[00:00:25]: Could not preload undefined prefab (transmute_dreadstone)
[00:00:25]: Could not preload undefined prefab (transmute_meat)
[00:00:25]: Could not preload undefined prefab (hermitshop_oceanfishingbobber_malbatross)
[00:00:25]: Could not preload undefined prefab (transmute_poop)
[00:00:25]: Could not preload undefined prefab (transmute_houndstooth)
[00:00:25]: Could not preload undefined prefab (transmute_boneshard)
[00:00:25]: Could not preload undefined prefab (transmute_smallmeat)
[00:00:25]: Could not preload undefined prefab (transmute_moonrocknugget)
[00:00:25]: Could not preload undefined prefab (transmute_cutstone)
[00:00:25]: Could not preload undefined prefab (transmute_marble)
[00:00:25]: Could not preload undefined prefab (transmute_nitre)
[00:00:25]: Could not preload undefined prefab (transmute_flint)
[00:00:25]: Could not preload undefined prefab (transmute_yellowgem)
[00:00:25]: Could not preload undefined prefab (transmute_redgem)
[00:00:25]: Could not preload undefined prefab (transmute_log)
[00:00:25]: Could not preload undefined prefab (transmute_bluegem)
[00:00:25]: Could not preload undefined prefab (hermitshop_oceanfishingbobber_crow)
[00:00:25]: Could not preload undefined prefab (hermitshop_oceanfishinglure_hermit_drowsy)
[00:00:25]: Could not preload undefined prefab (carnival_popcorn)
[00:00:25]: Could not preload undefined prefab (carnival_gametoken_multiple)
[00:00:26]: Could not preload undefined prefab (hermitshop_winter_ornament_boss_pearl)
[00:00:26]: Could not preload undefined prefab (hermitshop_supertacklecontainer)
[00:00:26]: Could not preload undefined prefab (hermitshop_chum)
[00:00:26]: Could not preload undefined prefab (hermitshop_oceanfishingbobber_goose)
[00:00:26]: Could not preload undefined prefab (hermitshop_oceanfishinglure_hermit_snow)
[00:00:26]: Could not preload undefined prefab (hermitshop_oceanfishingbobber_canary)
[00:00:26]: Could not preload undefined prefab (hermitshop_oceanfishingbobber_robin_winter)
[00:00:26]: Could not preload undefined prefab (tophat_magician)
[00:00:26]: Could not preload undefined prefab (transmute_goldnugget)
[00:00:26]: Could not preload undefined prefab (hermitshop_winch_blueprint)
[00:00:26]: Could not preload undefined prefab (hermitshop_hermit_bundle_shells)
[00:00:26]: Could not preload undefined prefab (transmute_twigs)
[00:00:26]: Could not preload undefined prefab (transmute_beefalowool)
[00:00:26]: Could not preload undefined prefab (wurt_turf_marsh)
[00:00:26]: Could not preload undefined prefab (transmute_purebrilliance)
[00:00:26]: 	LOAD BE: done	
[00:00:27]: Begin Session: 4F0D0D0885D2D513
[00:00:27]: saving to server_temp/server_save	
[00:00:27]: OVERRIDE: setting	healthpenalty	to	always	
[00:00:27]: OVERRIDE: setting	lessdamagetaken	to	none	
[00:00:27]: MiniMapComponent::AddAtlas( minimap/minimap_data.xml )
[00:00:27]: MiniMapComponent::AddAtlas( ../mods/workshop-362175979/images/mark_1.xml )
[00:00:27]: MiniMapComponent::AddAtlas( ../mods/workshop-362175979/images/mark_2.xml )
[00:00:27]: MiniMapComponent::AddAtlas( ../mods/workshop-362175979/images/mark_3.xml )
[00:00:27]: MiniMapComponent::AddAtlas( ../mods/workshop-362175979/images/mark_4.xml )
[00:00:27]: MiniMapComponent::AddAtlas( ../mods/workshop-362175979/images/mark_5.xml )
[00:00:27]: MiniMapComponent::AddAtlas( ../mods/workshop-362175979/images/mark_6.xml )
[00:00:27]: MiniMapComponent::AddAtlas( ../mods/workshop-362175979/images/mark_7.xml )
[00:00:27]: MiniMapComponent::AddAtlas( ../mods/workshop-362175979/images/mark_8.xml )
[00:00:27]: MiniMapComponent::AddAtlas( ../mods/workshop-362175979/images/mark_9.xml )
[00:00:27]: MiniMapComponent::AddAtlas( ../mods/workshop-362175979/images/mark_10.xml )
[00:00:27]: MiniMapComponent::AddAtlas( ../mods/workshop-362175979/images/mark_11.xml )
[00:00:27]: MiniMapComponent::AddAtlas( ../mods/workshop-362175979/images/mark_12.xml )
[00:00:27]: MiniMapComponent::AddAtlas( ../mods/workshop-362175979/images/mark_13.xml )
[00:00:27]: MiniMapComponent::AddAtlas( ../mods/workshop-362175979/images/mark_14.xml )
[00:00:27]: MiniMapComponent::AddAtlas( ../mods/workshop-362175979/images/mark_15.xml )
[00:00:27]: MiniMapComponent::AddAtlas( ../mods/workshop-362175979/images/mark_16.xml )
[00:00:27]: MiniMapComponent::AddAtlas( ../mods/workshop-362175979/images/mark_17.xml )
[00:00:27]: MiniMapComponent::AddAtlas( ../mods/workshop-362175979/images/mark_18.xml )
[00:00:27]: MiniMapComponent::AddAtlas( ../mods/workshop-362175979/images/mark_19.xml )
[00:00:27]: MiniMapComponent::AddAtlas( ../mods/workshop-362175979/images/mark_20.xml )
[00:00:27]: MiniMapComponent::AddAtlas( ../mods/workshop-362175979/images/mark_21.xml )
[00:00:27]: MiniMapComponent::AddAtlas( ../mods/workshop-362175979/images/mark_22.xml )
[00:00:27]: MiniMapComponent::AddAtlas( ../mods/workshop-378160973/minimap/campfire.xml )
[00:00:27]: MiniMapComponent::AddAtlas( ../mods/workshop-378160973/minimap/ping_generic.xml )
[00:00:27]: MiniMapComponent::AddAtlas( ../mods/workshop-378160973/minimap/ping_gohere.xml )
[00:00:27]: MiniMapComponent::AddAtlas( ../mods/workshop-378160973/minimap/ping_explore.xml )
[00:00:27]: MiniMapComponent::AddAtlas( ../mods/workshop-378160973/minimap/ping_danger.xml )
[00:00:27]: MiniMapComponent::AddAtlas( ../mods/workshop-378160973/minimap/ping_omw.xml )
[00:00:27]: Loading 19 new character(s)	
[00:00:28]: Total 19 character(s) loaded	
[00:00:28]: Loading Nav Grid	
[00:00:28]: World generated on build 561632 with save version: 5.141, using seed: 1686879197	
[00:00:28]: OVERRIDE: setting	ghostenabled	to	always	
[00:00:28]: OVERRIDE: setting	resettime	to	none	
[00:00:28]: OVERRIDE: setting	basicresource_regrowth	to	always	
[00:00:28]: OVERRIDE: setting	portalresurection	to	always	
[00:00:28]: OVERRIDE: setting	spawnmode	to	fixed	
[00:00:28]: OVERRIDE: setting	ghostsanitydrain	to	none	
[00:00:30]: ----------------- HEALTH INFO WARNING ------------------	
[00:00:30]: Some objects are not supported by the mod.	
[00:00:30]: Unknown objects: lightcrab	
[00:00:30]: You can enable these objects if you change the option "Unknown Objects".	
[00:00:30]: See more info at http://steamcommunity.com/workshop/filedetails/discussion/375859599/343787283764426976/	
[00:00:30]: --------------------------------------------------------	
[00:00:30]: ----------------- HEALTH INFO WARNING ------------------	
[00:00:30]: Unknown objects: boat_pirate	
[00:00:32]: Reconstructing topology	
[00:00:32]: 	...Sorting points	
[00:00:32]: 	...Sorting edges	
[00:00:32]: 	...Connecting nodes	
[00:00:32]: 	...Validating connections	
[00:00:32]: 	...Housekeeping	
[00:00:32]: 	...Done!	
[00:00:32]: [Special Event] Setting up crow_carnival	
[00:00:32]: 1 uploads added to server. From server_temp
[00:00:32]: About to start a shard with these settings:
[00:00:32]:   ShardName: [SHDMASTER]
[00:00:32]:   ShardID: 1
[00:00:32]:   ShardRole: MASTER
[00:00:32]:   MasterHost: (null)
[00:00:32]:   MasterBind: 127.0.0.1
[00:00:32]:   MasterPort: 10888
[00:00:32]: [Shard] Starting master server
[00:00:32]: [Warning] Could not confirm port 10888 is open in the firewall. 
[00:00:32]: [Shard] Shard server started on port: 10888
[00:00:32]: [IPC] Signal 'DST_Master_Ready' opened  #0000000000000BB0
[00:00:32]: [IPC] Sending signal... #0000000000000BB0
[00:00:32]: Telling Client our new session identifier: 4F0D0D0885D2D513
[00:00:33]: Validating portal[1] <-> <nil>[1] (inactive)	
[00:00:33]: Validating portal[2] <-> <nil>[2] (inactive)	
[00:00:33]: Validating portal[3] <-> <nil>[3] (inactive)	
[00:00:33]: Validating portal[4] <-> <nil>[4] (inactive)	
[00:00:33]: Validating portal[5] <-> <nil>[5] (inactive)	
[00:00:33]: ----------------- HEALTH INFO WARNING ------------------	
[00:00:33]: Unknown objects: hedgehound_bush	
[00:00:33]: ----------------- HEALTH INFO WARNING ------------------	
[00:00:33]: Unknown objects: stageusher	
[00:00:33]: Validating portal[6] <-> <nil>[6] (inactive)	
[00:00:33]: Validating portal[7] <-> <nil>[7] (inactive)	
[00:00:33]: Validating portal[8] <-> <nil>[8] (inactive)	
[00:00:33]: Validating portal[9] <-> <nil>[9] (inactive)	
[00:00:33]: Validating portal[10] <-> <nil>[10] (inactive)	
[00:00:33]: Sim paused
[00:00:34]: Server registered via geo DNS in ap-east-1
[00:00:51]: [Shard] Secondary shard Caves(3879474884) connected: [LAN] 127.0.0.1
[00:00:51]: [Shard] Secondary Caves(3879474884) ready!
[00:00:51]: World 3879474884 is now connected	
[00:00:51]: [SyncWorldSettings] Sending master world option ghostsanitydrain = none to secondary shards.	
[00:00:51]: [SyncWorldSettings] Sending master world option darkness = default to secondary shards.	
[00:00:51]: [SyncWorldSettings] Sending master world option resettime = none to secondary shards.	
[00:00:51]: [SyncWorldSettings] Sending master world option hunger = default to secondary shards.	
[00:00:51]: [SyncWorldSettings] Sending master world option healthpenalty = always to secondary shards.	
[00:00:51]: [SyncWorldSettings] Sending master world option temperaturedamage = default to secondary shards.	
[00:00:51]: [SyncWorldSettings] Sending master world option ghostenabled = always to secondary shards.	
[00:00:51]: [SyncWorldSettings] Sending master world option spawnmode = fixed to secondary shards.	
[00:00:51]: [SyncWorldSettings] Sending master world option shadowcreatures = default to secondary shards.	
[00:00:51]: [SyncWorldSettings] Sending master world option brightmarecreatures = default to secondary shards.	
[00:00:51]: [SyncWorldSettings] Sending master world option lessdamagetaken = none to secondary shards.	
[00:00:51]: [SyncWorldSettings] Sending master world option portalresurection = always to secondary shards.	
[00:00:51]: [SyncWorldSettings] Sending master world option basicresource_regrowth = always to secondary shards.	
[00:00:51]: [SyncWorldSettings] Sending master world option krampus = default to secondary shards.	
[00:00:51]: [SyncWorldSettings] Sending master world option dropeverythingondespawn = default to secondary shards.	
[00:00:51]: Validating portal[1] <-> 3879474884[1] (disabled)	
[00:00:51]: Validating portal[2] <-> 3879474884[2] (disabled)	
[00:00:51]: Validating portal[3] <-> 3879474884[3] (disabled)	
[00:00:51]: Validating portal[4] <-> 3879474884[4] (disabled)	
[00:00:51]: Validating portal[5] <-> 3879474884[5] (disabled)	
[00:00:51]: Validating portal[6] <-> 3879474884[6] (disabled)	
[00:00:51]: Validating portal[7] <-> 3879474884[7] (disabled)	
[00:00:51]: Validating portal[8] <-> 3879474884[8] (disabled)	
[00:00:51]: Validating portal[9] <-> 3879474884[9] (disabled)	
[00:00:51]: Validating portal[10] <-> 3879474884[10] (disabled)	
[00:00:51]: [SyncWorldSettings] Resyncing master world option ghostsanitydrain = none to secondary shards.	
[00:00:51]: [SyncWorldSettings] Resyncing master world option darkness = default to secondary shards.	
[00:00:51]: [SyncWorldSettings] Resyncing master world option resettime = none to secondary shards.	
[00:00:51]: [SyncWorldSettings] Resyncing master world option hunger = default to secondary shards.	
[00:00:51]: [SyncWorldSettings] Resyncing master world option healthpenalty = always to secondary shards.	
[00:00:51]: [SyncWorldSettings] Resyncing master world option temperaturedamage = default to secondary shards.	
[00:00:51]: [SyncWorldSettings] Resyncing master world option ghostenabled = always to secondary shards.	
[00:00:51]: [SyncWorldSettings] Resyncing master world option spawnmode = fixed to secondary shards.	
[00:00:51]: [SyncWorldSettings] Resyncing master world option shadowcreatures = default to secondary shards.	
[00:00:51]: [SyncWorldSettings] Resyncing master world option brightmarecreatures = default to secondary shards.	
[00:00:51]: [SyncWorldSettings] Resyncing master world option lessdamagetaken = none to secondary shards.	
[00:00:51]: [SyncWorldSettings] Resyncing master world option portalresurection = always to secondary shards.	
[00:00:51]: [SyncWorldSettings] Resyncing master world option basicresource_regrowth = always to secondary shards.	
[00:00:51]: [SyncWorldSettings] Resyncing master world option krampus = default to secondary shards.	
[00:00:51]: [SyncWorldSettings] Resyncing master world option dropeverythingondespawn = default to secondary shards.	
[00:00:54]: New incoming connection 127.0.0.1|61985 <4967832967285530126>
[00:00:54]: Client connected from [LAN] 127.0.0.1|61985 <4967832967285530126>
[00:00:54]: ValidateGameSessionToken GUID<4967832967285530126>
[00:00:54]: Client authenticated: (KU_0vPtViED) Xac
[00:00:54]: [Steam] Authenticated host '76561198105084721'
[00:00:56]: There is no active event to validate against.
[00:00:56]: [Shard] Read save location file for (KU_0vPtViED)
[00:01:15]: Resuming user: session/4F0D0D0885D2D513/A7G3IPRNTGSD
[00:10:51]: Spawn request: wendy from Xac
[00:10:51]: Skin request: () (body_ugly_gemdeer) (hand_beltedgloves_brown_beaver) (legs_wathgrithr_nature) (feet_willow_haunteddoll)
[00:10:51]: Skill Selection request: 0
[00:10:51]: Spawning player at: [Fixed] (638.00, 0.00, 326.00)	
[00:10:51]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000003
[00:10:51]: Sim unpaused
[00:11:06]: Server Autopaused	
[00:11:24]: Server Unpaused	
[00:11:36]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 3) end) @(634.21, 313.85)
[00:11:59]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local b = p.components.builder local t = p.components.talker if p and b and t then t:Say(b.freebuildmode and "创造模式:禁用" or "创造模式:启用") b:GiveAllRecipes() end) @(732.59, 259.31)
[00:13:49]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local h = p.components.health local t = p.components.talker if p ~= nil then if p:HasTag("playerghost") then p:PushEvent("respawnfromghost") p.rezsource = "TMIP 控制台" else if h ~= nil then local godmode = h.invincible t:Say(godmode and "上帝模式:禁用" or "上帝模式:启用") h:SetInvincible(not godmode) end end end) @(708.31, 573.39)
[00:13:59]: Server Autopaused	
[00:14:08]: Server Unpaused	
[00:15:10]: table burnt:	false	
[00:15:11]: table burnt:	false	
[00:15:11]: table burnt:	false	
[00:15:12]: table burnt:	false	
[00:15:22]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local b = p.components.builder local t = p.components.talker if p and b and t then t:Say(b.freebuildmode and "创造模式:禁用" or "创造模式:启用") b:GiveAllRecipes() end) @(403.72, -508.78)
[00:16:11]: Server Autopaused	
[00:16:14]: Server Unpaused	
[00:16:23]: Server Autopaused	
[00:16:28]: Server Unpaused	
[00:17:05]: Server Autopaused	
[00:17:06]: Server Unpaused	
[00:17:18]: Server Autopaused	
[00:17:19]: Server Unpaused	
[00:18:31]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(TheWorld:PushEvent("ms_nextphase")) @(-177.17, -77.06)
[00:18:32]: Available disk space for save files: 84806 MB
[00:18:32]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000003
[00:18:33]: Serializing world: session/4F0D0D0885D2D513/0000000003
[00:20:43]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "flint" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 1 or 1 do local inst = SpawnPrefab("flint", "flint", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "flint" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "flint" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(-235.77, 7.82)
[00:20:46]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end  local function tmi_give(item) if player ~= nil and player.Transform then local x,y,z = player.Transform:GetWorldPosition() if item ~= nil and item.components then if item.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(item) end else item.Transform:SetPosition(x,y,z) end end end end local function tmi_mat(name) local recipe = AllRecipes[name] if recipe then for _, iv in pairs(recipe.ingredients) do for i = 1, iv.amount do local item = SpawnPrefab(iv.type) tmi_give(item) end end end end for i = 1, 1 or 1 do tmi_mat("flint") end) @(-235.66, 7.99)
[00:20:52]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "flint" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 1 or 1 do local inst = SpawnPrefab("flint", "flint", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "flint" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "flint" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(-235.53, 8.21)
[00:20:54]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "flint" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("flint", "flint", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "flint" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "flint" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(-235.53, 8.21)
[00:20:56]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "flint" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("flint", "flint", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "flint" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "flint" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(-235.53, 8.21)
[00:20:56]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "flint" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("flint", "flint", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "flint" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "flint" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(-235.53, 8.21)
[00:21:08]: Validating portal[2] <-> 3879474884[2] (active)	
[00:21:09]: Activating portal[2] to 3879474884	
[00:21:10]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000004
[00:21:10]: [Shard] Migration request: (KU_0vPtViED) to Caves(3879474884)
[00:21:10]: [Shard] Begin migration #1 for (KU_0vPtViED)
[00:21:10]: [Shard] #1 [SHDMASTER](1) -> Caves(3879474884)
[00:21:10]: [Shard] #1 <- session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000004
[00:21:10]: [Shard] Writing save location file for (KU_0vPtViED)
[00:21:10]: CloseConnectionWithReason: ID_DST_SHARD_SILENT_DISCONNECT
[00:21:10]: [Steam] SendUserDisconnect for '76561198105084721'
[00:21:10]: [Shard] (KU_0vPtViED) disconnected from [SHDMASTER](1)
[00:21:15]: [Shard] Completed migration #1 for player (KU_0vPtViED)
[00:21:35]: [Shard] Begin migration #2 for (KU_0vPtViED)
[00:21:35]: [Shard] #2 Caves(3879474884) -> [SHDMASTER](1)
[00:21:35]: [Shard] #2 -> session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000004
[00:21:35]: [Shard] Received migration #2 data for (KU_0vPtViED)
[00:21:35]: [Shard] Writing save location file for (KU_0vPtViED)
[00:21:35]: [Shard] (KU_0vPtViED) disconnected from Caves(3879474884)
[00:21:38]: New incoming connection 127.0.0.1|64898 <6765007738173768447>
[00:21:38]: Client connected from [LAN] 127.0.0.1|64898 <6765007738173768447>
[00:21:38]: ValidateGameSessionToken GUID<6765007738173768447>
[00:21:39]: Client authenticated: (KU_0vPtViED) Xac
[00:21:39]: [Steam] Authenticated host '76561198105084721'
[00:21:39]: [Shard] Completed incoming migration #2 for (KU_0vPtViED)
[00:21:39]: [Shard] Completed migration #2 for player (KU_0vPtViED)
[00:21:50]: Resuming user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000004
[00:21:50]: Player will spawn close to portal #2	
[00:21:50]: Spawning player at: [Load] (-267.48, 0.00, 28.78)	
[00:22:00]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 3) end) @(-281.70, 23.96)
[00:22:18]: Server Autopaused	
[00:22:21]: Server Unpaused	
[00:23:15]: Server Autopaused	
[00:23:16]: Server Unpaused	
[00:25:33]: Server Autopaused	
[00:25:34]: Server Unpaused	
[00:25:41]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(TheWorld:PushEvent("ms_nextphase")) @(263.66, 562.76)
[00:25:42]: Available disk space for save files: 84797 MB
[00:25:42]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000004
[00:25:43]: Serializing world: session/4F0D0D0885D2D513/0000000004
[00:26:09]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "meatballs" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 1 or 1 do local inst = SpawnPrefab("meatballs", "meatballs", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "meatballs" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "meatballs" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(288.05, 537.54)
[00:26:09]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "meatballs" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 1 or 1 do local inst = SpawnPrefab("meatballs", "meatballs", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "meatballs" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "meatballs" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(288.05, 537.54)
[00:26:10]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "meatballs" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 1 or 1 do local inst = SpawnPrefab("meatballs", "meatballs", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "meatballs" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "meatballs" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(288.05, 537.54)
[00:26:10]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "meatballs" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 1 or 1 do local inst = SpawnPrefab("meatballs", "meatballs", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "meatballs" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "meatballs" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(288.05, 537.54)
[00:26:11]: Server Autopaused	
[00:26:12]: Server Unpaused	
[00:26:20]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 4) end) @(256.11, 595.45)
[00:26:28]: Server Autopaused	
[00:26:29]: Server Unpaused	
[00:26:29]: Server Autopaused	
[00:26:32]: Server Unpaused	
[00:27:10]: Server Autopaused	
[00:27:18]: Server Unpaused	
[00:27:19]: Server Autopaused	
[00:27:37]: Server Unpaused	
[00:28:21]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "log" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("log", "log", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "log" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "log" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(117.01, 578.57)
[00:28:21]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "log" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("log", "log", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "log" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "log" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(117.01, 578.57)
[00:28:21]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "log" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("log", "log", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "log" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "log" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(117.01, 578.57)
[00:28:22]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "log" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("log", "log", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "log" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "log" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(117.01, 578.57)
[00:28:46]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "cutgrass" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("cutgrass", "cutgrass", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "cutgrass" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "cutgrass" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(124.63, 578.13)
[00:28:46]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "cutgrass" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("cutgrass", "cutgrass", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "cutgrass" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "cutgrass" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(124.56, 578.57)
[00:28:47]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "cutgrass" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("cutgrass", "cutgrass", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "cutgrass" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "cutgrass" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(124.56, 578.57)
[00:30:07]: [200] Account Communication Success (6)
[00:30:07]: Received (KU_0vPtViED) from TokenPurpose
[00:30:07]: Server Autopaused	
[00:30:09]: Server Unpaused	
[00:30:24]: Server Autopaused	
[00:30:34]: Server Unpaused	
[00:32:43]: Validating portal[7] <-> 3879474884[7] (active)	
[00:32:44]: Activating portal[7] to 3879474884	
[00:32:44]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000005
[00:32:44]: [Shard] Migration request: (KU_0vPtViED) to Caves(3879474884)
[00:32:44]: [Shard] Begin migration #3 for (KU_0vPtViED)
[00:32:44]: [Shard] #3 [SHDMASTER](1) -> Caves(3879474884)
[00:32:44]: [Shard] #3 <- session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000005
[00:32:44]: [Shard] Writing save location file for (KU_0vPtViED)
[00:32:44]: CloseConnectionWithReason: ID_DST_SHARD_SILENT_DISCONNECT
[00:32:44]: [Steam] SendUserDisconnect for '76561198105084721'
[00:32:44]: [Shard] (KU_0vPtViED) disconnected from [SHDMASTER](1)
[00:32:49]: [Shard] Completed migration #3 for player (KU_0vPtViED)
[00:33:02]: Server Autopaused	
[00:33:04]: Server Unpaused	
[00:33:19]: [Shard] Begin migration #4 for (KU_0vPtViED)
[00:33:19]: [Shard] #4 Caves(3879474884) -> [SHDMASTER](1)
[00:33:19]: [Shard] #4 -> session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000005
[00:33:19]: [Shard] Received migration #4 data for (KU_0vPtViED)
[00:33:19]: [Shard] Writing save location file for (KU_0vPtViED)
[00:33:20]: [Shard] (KU_0vPtViED) disconnected from Caves(3879474884)
[00:33:23]: New incoming connection 127.0.0.1|64648 <3612174269331230009>
[00:33:23]: Client connected from [LAN] 127.0.0.1|64648 <3612174269331230009>
[00:33:23]: ValidateGameSessionToken GUID<3612174269331230009>
[00:33:24]: Client authenticated: (KU_0vPtViED) Xac
[00:33:24]: [Steam] Authenticated host '76561198105084721'
[00:33:24]: [Shard] Completed incoming migration #4 for (KU_0vPtViED)
[00:33:24]: [Shard] Completed migration #4 for player (KU_0vPtViED)
[00:33:34]: Resuming user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000005
[00:33:34]: Player will spawn close to portal #7	
[00:33:34]: Spawning player at: [Load] (243.70, 0.00, 296.95)	
[00:33:40]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 4) end) @(235.78, 299.74)
[00:33:44]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(TheWorld:PushEvent("ms_nextphase")) @(254.25, 281.25)
[00:33:45]: Available disk space for save files: 84787 MB
[00:33:45]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000005
[00:33:46]: Serializing world: session/4F0D0D0885D2D513/0000000005
[00:33:46]: Server Autopaused	
[00:33:47]: Server Unpaused	
[00:33:57]: Server Autopaused	
[00:34:17]: Server Unpaused	
[00:34:29]: Server Autopaused	
[00:34:30]: Server Unpaused	
[00:35:12]: Server Autopaused	
[00:35:18]: Server Unpaused	
[00:36:05]: Server Autopaused	
[00:36:31]: Server Unpaused	
[00:36:56]: Server Autopaused	
[00:37:01]: Server Unpaused	
[00:37:52]: Server Autopaused	
[00:37:53]: Server Unpaused	
[00:37:59]: Server Autopaused	
[00:38:00]: Server Unpaused	
[00:38:31]: Server Autopaused	
[00:38:34]: Server Unpaused	
[00:39:10]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "monstermeat" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("monstermeat", "monstermeat", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "monstermeat" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "monstermeat" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(-161.98, -206.43)
[00:39:11]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "monstermeat" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("monstermeat", "monstermeat", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "monstermeat" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "monstermeat" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(-162.04, -206.51)
[00:39:44]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local c = p.components.combat or nil local t = p.components.talker if p and c and t and c.CalcDamage then if c.OldCalcDamage then p.components.talker:Say("一击必杀模式:禁用") c.CalcDamage = c.OldCalcDamage c.OldCalcDamage = nil else p.components.talker:Say("一击必杀模式:启用") c.OldCalcDamage = c.CalcDamage c.CalcDamage = function(...) return 9999999999*9 end end end) @(-123.37, -216.91)
[00:40:55]: Validating portal[10] <-> 3879474884[10] (active)	
[00:40:56]: Activating portal[10] to 3879474884	
[00:40:56]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000006
[00:40:56]: [Shard] Migration request: (KU_0vPtViED) to Caves(3879474884)
[00:40:56]: [Shard] Begin migration #5 for (KU_0vPtViED)
[00:40:56]: [Shard] #5 [SHDMASTER](1) -> Caves(3879474884)
[00:40:56]: [Shard] #5 <- session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000006
[00:40:56]: [Shard] Writing save location file for (KU_0vPtViED)
[00:40:56]: CloseConnectionWithReason: ID_DST_SHARD_SILENT_DISCONNECT
[00:40:57]: [Steam] SendUserDisconnect for '76561198105084721'
[00:40:57]: [Shard] (KU_0vPtViED) disconnected from [SHDMASTER](1)
[00:41:01]: [Shard] Completed migration #5 for player (KU_0vPtViED)
[00:41:14]: Server Autopaused	
[00:41:16]: Server Unpaused	
[00:41:22]: [Shard] Begin migration #6 for (KU_0vPtViED)
[00:41:22]: [Shard] #6 Caves(3879474884) -> [SHDMASTER](1)
[00:41:22]: [Shard] #6 -> session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000006
[00:41:22]: [Shard] Received migration #6 data for (KU_0vPtViED)
[00:41:22]: [Shard] Writing save location file for (KU_0vPtViED)
[00:41:23]: [Shard] (KU_0vPtViED) disconnected from Caves(3879474884)
[00:41:26]: New incoming connection 127.0.0.1|50035 <7179593988055648534>
[00:41:26]: Client connected from [LAN] 127.0.0.1|50035 <7179593988055648534>
[00:41:26]: ValidateGameSessionToken GUID<7179593988055648534>
[00:41:27]: Client authenticated: (KU_0vPtViED) Xac
[00:41:27]: [Steam] Authenticated host '76561198105084721'
[00:41:27]: [Shard] Completed incoming migration #6 for (KU_0vPtViED)
[00:41:27]: [Shard] Completed migration #6 for player (KU_0vPtViED)
[00:41:37]: Resuming user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000006
[00:41:37]: Player will spawn close to portal #10	
[00:41:37]: Spawning player at: [Load] (-206.83, 0.00, -208.73)	
[00:41:41]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 4) end) @(-214.58, -212.65)
[00:41:46]: Server Autopaused	
[00:41:47]: Server Unpaused	
[00:41:54]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(TheWorld:PushEvent("ms_nextphase")) @(-221.69, -311.85)
[00:41:55]: Available disk space for save files: 84777 MB
[00:41:55]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000006
[00:41:55]: Serializing world: session/4F0D0D0885D2D513/0000000006
[00:42:56]: Server Autopaused	
[00:42:57]: Server Unpaused	
[00:43:15]: Server Autopaused	
[00:43:16]: Server Unpaused	
[00:44:08]: Server Autopaused	
[00:44:09]: Server Unpaused	
[00:44:17]: Server Autopaused	
[00:44:19]: Server Unpaused	
[00:44:35]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player ~= nil then local function tmi_goto(prefab) if player.Physics ~= nil then player.Physics:Teleport(prefab.Transform:GetWorldPosition()) else player.Transform:SetPosition(prefab.Transform:GetWorldPosition()) end end local target = c_findnext("multiplayer_portal") if target == nil then target = c_findnext("multiplayer_portal_moonrock") end tmi_goto(target) end) @(237.07, -441.12)
[00:44:35]: Finding a 	multiplayer_portal	
[00:44:35]: Found 105634 (1/1)	
[00:44:40]: Server Autopaused	
[00:44:41]: Server Unpaused	
[00:45:01]: Server Autopaused	
[00:45:01]: Server Unpaused	
[00:46:53]: Server Autopaused	
[00:46:53]: Server Unpaused	
[00:46:59]: Server Autopaused	
[00:47:00]: Server Unpaused	
[00:47:16]: Server Autopaused	
[00:47:19]: Server Unpaused	
[00:47:50]: Validating portal[4] <-> 3879474884[4] (active)	
[00:47:51]: Activating portal[4] to 3879474884	
[00:47:52]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000007
[00:47:52]: [Shard] Migration request: (KU_0vPtViED) to Caves(3879474884)
[00:47:52]: [Shard] Begin migration #7 for (KU_0vPtViED)
[00:47:52]: [Shard] #7 [SHDMASTER](1) -> Caves(3879474884)
[00:47:52]: [Shard] #7 <- session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000007
[00:47:52]: [Shard] Writing save location file for (KU_0vPtViED)
[00:47:52]: CloseConnectionWithReason: ID_DST_SHARD_SILENT_DISCONNECT
[00:47:52]: [Steam] SendUserDisconnect for '76561198105084721'
[00:47:52]: [Shard] (KU_0vPtViED) disconnected from [SHDMASTER](1)
[00:47:56]: [Shard] Completed migration #7 for player (KU_0vPtViED)
[00:48:08]: Server Autopaused	
[00:48:16]: Server Unpaused	
[00:48:18]: [Shard] Begin migration #8 for (KU_0vPtViED)
[00:48:18]: [Shard] #8 Caves(3879474884) -> [SHDMASTER](1)
[00:48:18]: [Shard] #8 -> session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000007
[00:48:18]: [Shard] Received migration #8 data for (KU_0vPtViED)
[00:48:18]: [Shard] Writing save location file for (KU_0vPtViED)
[00:48:18]: [Shard] (KU_0vPtViED) disconnected from Caves(3879474884)
[00:48:21]: New incoming connection 127.0.0.1|51120 <2869769969967685498>
[00:48:21]: Client connected from [LAN] 127.0.0.1|51120 <2869769969967685498>
[00:48:21]: ValidateGameSessionToken GUID<2869769969967685498>
[00:48:22]: Client authenticated: (KU_0vPtViED) Xac
[00:48:22]: [Steam] Authenticated host '76561198105084721'
[00:48:22]: [Shard] Completed incoming migration #8 for (KU_0vPtViED)
[00:48:22]: [Shard] Completed migration #8 for player (KU_0vPtViED)
[00:48:33]: Resuming user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000007
[00:48:33]: Player will spawn close to portal #4	
[00:48:33]: Spawning player at: [Load] (550.08, 0.00, 555.20)	
[00:48:39]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 4) end) @(547.16, 559.70)
[00:48:49]: Server Autopaused	
[00:48:49]: Server Unpaused	
[00:48:54]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 1) end) @(644.03, 547.39)
[00:48:57]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 3) end) @(637.28, 549.28)
[00:48:58]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 4) end) @(633.38, 548.85)
[00:49:05]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(TheSim:SetTimeScale(0.5) print("Speed is now ", TheSim:GetTimeScale())) @(636.18, 539.51)
[00:49:05]: Speed is now 	0.5	
[00:49:13]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(TheSim:SetTimeScale(1) print("Speed is now ", TheSim:GetTimeScale())) @(582.02, 490.66)
[00:49:13]: Speed is now 	1	
[00:49:21]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(TheWorld:PushEvent("ms_nextphase")) @(484.44, 429.70)
[00:49:22]: Available disk space for save files: 84769 MB
[00:49:22]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000007
[00:49:22]: Serializing world: session/4F0D0D0885D2D513/0000000007
[00:49:22]: Server Autopaused	
[00:49:23]: Server Unpaused	
[00:50:14]: Server Autopaused	
[00:50:16]: Server Unpaused	
[00:50:38]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 1) end) @(558.45, 247.08)
[00:50:44]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 4) end) @(554.08, 266.31)
[00:51:04]: Validating portal[3] <-> 3879474884[3] (active)	
[00:51:05]: Activating portal[3] to 3879474884	
[00:51:06]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000008
[00:51:06]: [Shard] Migration request: (KU_0vPtViED) to Caves(3879474884)
[00:51:06]: [Shard] Begin migration #9 for (KU_0vPtViED)
[00:51:06]: [Shard] #9 [SHDMASTER](1) -> Caves(3879474884)
[00:51:06]: [Shard] #9 <- session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000008
[00:51:06]: [Shard] Writing save location file for (KU_0vPtViED)
[00:51:06]: CloseConnectionWithReason: ID_DST_SHARD_SILENT_DISCONNECT
[00:51:06]: [Steam] SendUserDisconnect for '76561198105084721'
[00:51:06]: [Shard] (KU_0vPtViED) disconnected from [SHDMASTER](1)
[00:51:10]: [Shard] Completed migration #9 for player (KU_0vPtViED)
[00:51:48]: Server Autopaused	
[00:51:50]: Server Unpaused	
[00:51:52]: Server Autopaused	
[00:51:52]: Server Unpaused	
[00:51:53]: [Shard] Begin migration #10 for (KU_0vPtViED)
[00:51:53]: [Shard] #10 Caves(3879474884) -> [SHDMASTER](1)
[00:51:53]: [Shard] #10 -> session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000008
[00:51:53]: [Shard] Received migration #10 data for (KU_0vPtViED)
[00:51:53]: [Shard] Writing save location file for (KU_0vPtViED)
[00:51:53]: [Shard] (KU_0vPtViED) disconnected from Caves(3879474884)
[00:51:56]: New incoming connection 127.0.0.1|49792 <4529805889129120569>
[00:51:56]: Client connected from [LAN] 127.0.0.1|49792 <4529805889129120569>
[00:51:56]: ValidateGameSessionToken GUID<4529805889129120569>
[00:51:57]: Client authenticated: (KU_0vPtViED) Xac
[00:51:57]: [Steam] Authenticated host '76561198105084721'
[00:51:57]: [Shard] Completed incoming migration #10 for (KU_0vPtViED)
[00:51:57]: [Shard] Completed migration #10 for player (KU_0vPtViED)
[00:52:08]: Resuming user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000008
[00:52:08]: Player will spawn close to portal #3	
[00:52:08]: Spawning player at: [Load] (579.02, 0.00, 200.09)	
[00:52:12]: Server Autopaused	
[00:52:13]: Server Unpaused	
[00:52:14]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 4) end) @(570.59, 196.42)
[00:52:19]: Server Autopaused	
[00:52:20]: Server Unpaused	
[00:52:32]: Server Autopaused	
[00:52:33]: Server Unpaused	
[00:52:49]: Server Autopaused	
[00:52:50]: Server Unpaused	
[00:53:01]: Server Autopaused	
[00:53:02]: Server Unpaused	
[00:53:22]: Server Autopaused	
[00:53:23]: Server Unpaused	
[00:53:32]: Server Autopaused	
[00:53:33]: Server Unpaused	
[00:53:46]: Server Autopaused	
[00:53:47]: Server Unpaused	
[00:53:50]: Server Autopaused	
[00:53:53]: Server Unpaused	
[00:53:54]: Server Autopaused	
[00:54:01]: Server Unpaused	
[00:54:12]: Server Autopaused	
[00:54:13]: Server Unpaused	
[00:54:19]: Server Autopaused	
[00:54:20]: Server Unpaused	
[00:54:57]: Server Autopaused	
[00:54:58]: Server Unpaused	
[00:54:59]: Server Autopaused	
[00:55:01]: Server Unpaused	
[00:55:33]: Validating portal[1] <-> 3879474884[1] (active)	
[00:55:34]: Activating portal[1] to 3879474884	
[00:55:35]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000008
[00:55:35]: [Shard] Migration request: (KU_0vPtViED) to Caves(3879474884)
[00:55:35]: [Shard] Begin migration #11 for (KU_0vPtViED)
[00:55:35]: [Shard] #11 [SHDMASTER](1) -> Caves(3879474884)
[00:55:35]: [Shard] #11 <- session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000008
[00:55:35]: [Shard] Writing save location file for (KU_0vPtViED)
[00:55:35]: CloseConnectionWithReason: ID_DST_SHARD_SILENT_DISCONNECT
[00:55:35]: [Steam] SendUserDisconnect for '76561198105084721'
[00:55:35]: [Shard] (KU_0vPtViED) disconnected from [SHDMASTER](1)
[00:55:40]: [Shard] Completed migration #11 for player (KU_0vPtViED)
[00:55:54]: Server Autopaused	
[00:55:56]: Server Unpaused	
[00:55:59]: [Shard] Begin migration #12 for (KU_0vPtViED)
[00:55:59]: [Shard] #12 Caves(3879474884) -> [SHDMASTER](1)
[00:55:59]: [Shard] #12 -> session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000008
[00:55:59]: [Shard] Received migration #12 data for (KU_0vPtViED)
[00:55:59]: [Shard] Writing save location file for (KU_0vPtViED)
[00:55:59]: [Shard] (KU_0vPtViED) disconnected from Caves(3879474884)
[00:56:02]: New incoming connection 127.0.0.1|65327 <3311629633375488909>
[00:56:02]: Client connected from [LAN] 127.0.0.1|65327 <3311629633375488909>
[00:56:02]: ValidateGameSessionToken GUID<3311629633375488909>
[00:56:03]: Client authenticated: (KU_0vPtViED) Xac
[00:56:03]: [Steam] Authenticated host '76561198105084721'
[00:56:03]: [Shard] Completed incoming migration #12 for (KU_0vPtViED)
[00:56:03]: [Shard] Completed migration #12 for player (KU_0vPtViED)
[00:56:14]: Resuming user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000008
[00:56:14]: Player will spawn close to portal #1	
[00:56:14]: Spawning player at: [Load] (554.81, 0.00, 23.57)	
[00:56:23]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 4) end) @(531.31, 22.46)
[00:56:36]: Server Autopaused	
[00:56:37]: Server Unpaused	
[00:56:43]: Server Autopaused	
[00:56:43]: Server Unpaused	
[00:56:51]: Server Autopaused	
[00:56:56]: Server Unpaused	
[00:57:02]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(TheWorld:PushEvent("ms_nextphase")) @(568.98, -510.77)
[00:57:03]: Available disk space for save files: 84764 MB
[00:57:03]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000008
[00:57:04]: Serializing world: session/4F0D0D0885D2D513/0000000008
[00:57:44]: Server Autopaused	
[00:58:02]: Server Unpaused	
[00:58:27]: Server Autopaused	
[00:58:29]: Server Unpaused	
[00:58:45]: Server Autopaused	
[00:59:02]: Server Unpaused	
[00:59:41]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(515.33, -626.85)
[00:59:43]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(520.52, -628.56)
[00:59:43]: sapling	
[00:59:44]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(519.72, -629.00)
[00:59:47]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(508.30, -629.02)
[00:59:47]: sapling	
[00:59:47]: fireflies	
[00:59:49]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(529.05, -646.99)
[00:59:49]: evergreen	
[00:59:50]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(525.33, -642.17)
[00:59:50]: flint	
[00:59:54]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(502.46, -649.76)
[00:59:54]: evergreen	
[00:59:55]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(505.48, -649.76)
[00:59:56]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(506.95, -649.76)
[00:59:58]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 1) end) @(501.51, -646.62)
[00:59:59]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(505.68, -651.69)
[00:59:59]: sapling	
[01:00:00]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 3) end) @(500.14, -644.49)
[01:00:07]: [200] Account Communication Success (6)
[01:00:07]: Received (KU_0vPtViED) from TokenPurpose
[01:00:15]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local c = p.components.combat or nil local t = p.components.talker if p and c and t and c.CalcDamage then if c.OldCalcDamage then p.components.talker:Say("一击必杀模式:禁用") c.CalcDamage = c.OldCalcDamage c.OldCalcDamage = nil else p.components.talker:Say("一击必杀模式:启用") c.OldCalcDamage = c.CalcDamage c.CalcDamage = function(...) return 9999999999*9 end end end) @(535.31, -652.33)
[01:00:16]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local c = p.components.combat or nil local t = p.components.talker if p and c and t and c.CalcDamage then if c.OldCalcDamage then p.components.talker:Say("一击必杀模式:禁用") c.CalcDamage = c.OldCalcDamage c.OldCalcDamage = nil else p.components.talker:Say("一击必杀模式:启用") c.OldCalcDamage = c.CalcDamage c.CalcDamage = function(...) return 9999999999*9 end end end) @(535.38, -652.38)
[01:00:16]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local c = p.components.combat or nil local t = p.components.talker if p and c and t and c.CalcDamage then if c.OldCalcDamage then p.components.talker:Say("一击必杀模式:禁用") c.CalcDamage = c.OldCalcDamage c.OldCalcDamage = nil else p.components.talker:Say("一击必杀模式:启用") c.OldCalcDamage = c.CalcDamage c.CalcDamage = function(...) return 9999999999*9 end end end) @(535.38, -652.40)
[01:00:17]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local h = p.components.health local t = p.components.talker if p ~= nil then if p:HasTag("playerghost") then p:PushEvent("respawnfromghost") p.rezsource = "TMIP 控制台" else if h ~= nil then local godmode = h.invincible t:Say(godmode and "上帝模式:禁用" or "上帝模式:启用") h:SetInvincible(not godmode) end end end) @(535.31, -654.03)
[01:01:38]: Server Autopaused	
[01:10:27]: Server Unpaused	
[01:10:38]: Server Autopaused	
[01:11:12]: Server Unpaused	
[01:11:36]: Server Autopaused	
[01:13:11]: Server Unpaused	
[01:13:21]: Server Autopaused	
[01:13:22]: Server Unpaused	
[01:13:33]: Server Autopaused	
[01:13:38]: Server Unpaused	
[01:15:00]: Server Autopaused	
[01:15:01]: Server Unpaused	
[01:15:06]: Server Autopaused	
[01:16:16]: Server Unpaused	
[01:16:23]: Server Autopaused	
[01:16:24]: Server Unpaused	
[01:16:27]: Server Autopaused	
[01:19:02]: Server Unpaused	
[01:19:25]: Server Autopaused	
[01:19:26]: Server Unpaused	
[01:19:29]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "meatballs" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 1 or 1 do local inst = SpawnPrefab("meatballs", "meatballs", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "meatballs" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "meatballs" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(528.80, -650.78)
[01:19:29]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "meatballs" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 1 or 1 do local inst = SpawnPrefab("meatballs", "meatballs", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "meatballs" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "meatballs" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(528.80, -650.78)
[01:19:30]: Server Autopaused	
[01:19:31]: Server Unpaused	
[01:19:36]: Server Autopaused	
[01:19:37]: Server Unpaused	
[01:19:42]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(TheWorld:PushEvent("ms_nextphase")) @(529.32, -630.91)
[01:19:43]: Available disk space for save files: 84103 MB
[01:19:43]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000009
[01:19:43]: Serializing world: session/4F0D0D0885D2D513/0000000009
[01:19:43]: Server Autopaused	
[01:19:43]: Server Unpaused	
[01:19:56]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(532.77, -609.42)
[01:19:56]: evergreen	
[01:19:58]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(526.55, -611.83)
[01:19:58]: evergreen	
[01:19:58]: evergreen	
[01:20:00]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(531.31, -599.56)
[01:20:01]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(531.32, -600.14)
[01:20:01]: sapling	
[01:20:03]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(531.32, -596.48)
[01:20:03]: sapling	
[01:20:03]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(531.32, -595.81)
[01:20:04]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(545.90, -595.04)
[01:20:04]: sapling	
[01:20:05]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(547.91, -597.48)
[01:20:05]: flint	
[01:20:05]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(548.12, -605.74)
[01:20:18]: Server Autopaused	
[01:20:19]: Server Unpaused	
[01:22:19]: Server Autopaused	
[01:25:44]: Server Unpaused	
[01:26:15]: Server Autopaused	
[01:26:23]: Server Unpaused	
[01:26:25]: Server Autopaused	
[01:26:26]: Server Unpaused	
[01:26:30]: Server Autopaused	
[01:26:41]: Server Unpaused	
[01:27:21]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end if player ~= nil then local function tmi_goto(prefab) if player.Physics ~= nil then player.Physics:Teleport(prefab.Transform:GetWorldPosition()) else player.Transform:SetPosition(prefab.Transform:GetWorldPosition()) end end local target = c_findnext("charcoal") if target ~= nil then tmi_goto(target) end end) @(514.81, -638.42)
[01:27:21]: Finding a 	charcoal	
[01:27:21]: Could not find any objects matching 'charcoal'.	
[01:27:21]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end if player ~= nil then local function tmi_goto(prefab) if player.Physics ~= nil then player.Physics:Teleport(prefab.Transform:GetWorldPosition()) else player.Transform:SetPosition(prefab.Transform:GetWorldPosition()) end end local target = c_findnext("charcoal") if target ~= nil then tmi_goto(target) end end) @(514.81, -638.42)
[01:27:21]: Finding a 	charcoal	
[01:27:21]: Could not find any objects matching 'charcoal'.	
[01:27:28]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "charcoal" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("charcoal", "charcoal", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "charcoal" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "charcoal" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(519.26, -636.99)
[01:27:29]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "charcoal" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("charcoal", "charcoal", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "charcoal" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "charcoal" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(520.20, -636.31)
[01:27:31]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "charcoal" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("charcoal", "charcoal", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "charcoal" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "charcoal" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(520.20, -636.31)
[01:27:32]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "charcoal" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("charcoal", "charcoal", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "charcoal" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "charcoal" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(520.20, -636.31)
[01:27:42]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 1) end) @(512.99, -624.99)
[01:28:09]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local b = p.components.builder local t = p.components.talker if p and b and t then t:Say(b.freebuildmode and "创造模式:禁用" or "创造模式:启用") b:GiveAllRecipes() end) @(534.35, -636.02)
[01:28:52]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local b = p.components.builder local t = p.components.talker if p and b and t then t:Say(b.freebuildmode and "创造模式:禁用" or "创造模式:启用") b:GiveAllRecipes() end) @(539.63, -642.26)
[01:30:07]: [200] Account Communication Success (6)
[01:30:07]: Received (KU_0vPtViED) from TokenPurpose
[01:30:39]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(TheWorld:PushEvent("ms_nextphase")) @(507.57, -624.20)
[01:30:40]: Available disk space for save files: 84096 MB
[01:30:40]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000010
[01:30:40]: Serializing world: session/4F0D0D0885D2D513/0000000010
[01:30:53]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "rocks" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("rocks", "rocks", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "rocks" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "rocks" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(513.94, -632.72)
[01:30:54]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "rocks" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("rocks", "rocks", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "rocks" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "rocks" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(513.94, -632.72)
[01:30:54]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "rocks" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("rocks", "rocks", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "rocks" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "rocks" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(513.94, -632.72)
[01:30:54]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "rocks" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("rocks", "rocks", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "rocks" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "rocks" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(513.94, -632.72)
[01:30:55]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "rocks" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("rocks", "rocks", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "rocks" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "rocks" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(513.94, -632.72)
[01:30:55]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "rocks" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("rocks", "rocks", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "rocks" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "rocks" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(513.94, -632.72)
[01:30:56]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "rocks" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("rocks", "rocks", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "rocks" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "rocks" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(513.94, -632.72)
[01:30:57]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "rocks" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("rocks", "rocks", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "rocks" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "rocks" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(513.94, -632.72)
[01:33:03]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 2) end) @(500.37, -616.41)
[01:33:34]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "boards" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 1 or 1 do local inst = SpawnPrefab("boards", "boards", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "boards" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "boards" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(458.25, -666.30)
[01:33:34]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "boards" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 1 or 1 do local inst = SpawnPrefab("boards", "boards", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "boards" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "boards" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(458.25, -666.30)
[01:33:35]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "boards" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 1 or 1 do local inst = SpawnPrefab("boards", "boards", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "boards" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "boards" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(458.25, -666.30)
[01:34:10]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local c = p.components.combat or nil local t = p.components.talker if p and c and t and c.CalcDamage then if c.OldCalcDamage then p.components.talker:Say("一击必杀模式:禁用") c.CalcDamage = c.OldCalcDamage c.OldCalcDamage = nil else p.components.talker:Say("一击必杀模式:启用") c.OldCalcDamage = c.CalcDamage c.CalcDamage = function(...) return 9999999999*9 end end end) @(468.66, -661.03)
[01:34:12]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local b = p.components.builder local t = p.components.talker if p and b and t then t:Say(b.freebuildmode and "创造模式:禁用" or "创造模式:启用") b:GiveAllRecipes() end) @(468.71, -662.37)
[01:36:08]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local b = p.components.builder local t = p.components.talker if p and b and t then t:Say(b.freebuildmode and "创造模式:禁用" or "创造模式:启用") b:GiveAllRecipes() end) @(531.63, -642.23)
[01:36:16]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "rope" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("rope", "rope", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "rope" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "rope" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(512.31, -633.40)
[01:36:16]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "rope" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("rope", "rope", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "rope" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "rope" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(512.31, -633.40)
[01:36:54]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local b = p.components.builder local t = p.components.talker if p and b and t then t:Say(b.freebuildmode and "创造模式:禁用" or "创造模式:启用") b:GiveAllRecipes() end) @(520.29, -641.66)
[01:37:06]: Server Autopaused	
[01:40:09]: Server Unpaused	
[01:40:48]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(TheWorld:PushEvent("ms_nextphase")) @(502.58, -636.19)
[01:40:49]: Available disk space for save files: 84090 MB
[01:40:49]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000011
[01:40:49]: Serializing world: session/4F0D0D0885D2D513/0000000011
[01:41:00]: Server Autopaused	
[01:41:02]: Server Unpaused	
[01:41:16]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local b = p.components.builder local t = p.components.talker if p and b and t then t:Say(b.freebuildmode and "创造模式:禁用" or "创造模式:启用") b:GiveAllRecipes() end) @(531.65, -644.71)
[01:42:46]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "log" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("log", "log", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "log" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "log" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(515.13, -637.15)
[01:43:30]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "boards" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("boards", "boards", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "boards" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "boards" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(522.98, -643.47)
[01:43:42]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "boards" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("boards", "boards", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "boards" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "boards" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(523.53, -643.02)
[01:43:43]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "boards" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("boards", "boards", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "boards" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "boards" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(523.53, -643.02)
[01:44:18]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "boards" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("boards", "boards", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "boards" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "boards" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(523.31, -647.20)
[01:44:18]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "boards" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("boards", "boards", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "boards" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "boards" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(523.31, -647.20)
[01:44:18]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "boards" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("boards", "boards", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "boards" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "boards" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(523.31, -647.20)
[01:44:19]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "boards" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("boards", "boards", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "boards" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "boards" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(523.31, -647.20)
[01:44:49]: Server Autopaused	
[01:46:03]: Server Unpaused	
[01:46:59]: Server Autopaused	
[01:47:03]: Server Unpaused	
[01:47:21]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(ThePlayer.components.talker:Say("←  在项目菜单中使用Ctrl+Alt+鼠标右键单击你想要传送的项目可以传送到指定项目（如果地图上有）")) @(538.27, -628.12)
[01:47:25]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(ThePlayer.components.talker:Say("←  在项目菜单中使用Ctrl+Alt+鼠标右键单击你想要传送的项目可以传送到指定项目（如果地图上有）")) @(538.27, -628.12)
[01:47:32]: Server Autopaused	
[01:47:34]: Server Unpaused	
[01:47:35]: Server Autopaused	
[01:47:39]: Server Unpaused	
[01:48:11]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "gears" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 1 or 1 do local inst = SpawnPrefab("gears", "gears", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "gears" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "gears" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(534.51, -629.89)
[01:48:12]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "gears" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 1 or 1 do local inst = SpawnPrefab("gears", "gears", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "gears" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "gears" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(534.53, -629.89)
[01:48:13]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "gears" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 1 or 1 do local inst = SpawnPrefab("gears", "gears", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "gears" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "gears" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(534.53, -629.89)
[01:48:31]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "goldnugget" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("goldnugget", "goldnugget", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "goldnugget" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "goldnugget" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(523.55, -635.07)
[01:48:31]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "goldnugget" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("goldnugget", "goldnugget", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "goldnugget" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "goldnugget" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(523.55, -635.07)
[01:49:25]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(TheWorld:PushEvent("ms_nextphase")) @(514.59, -623.95)
[01:49:26]: Available disk space for save files: 82504 MB
[01:49:27]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000012
[01:49:27]: Serializing world: session/4F0D0D0885D2D513/0000000012
[01:50:37]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local b = p.components.builder local t = p.components.talker if p and b and t then t:Say(b.freebuildmode and "创造模式:禁用" or "创造模式:启用") b:GiveAllRecipes() end) @(529.51, -639.01)
[01:51:03]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local b = p.components.builder local t = p.components.talker if p and b and t then t:Say(b.freebuildmode and "创造模式:禁用" or "创造模式:启用") b:GiveAllRecipes() end) @(539.34, -639.38)
[01:53:40]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if not player or player:HasTag("playerghost") then return end local inv = player.components.inventory local x, y, z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x, y, z, 30, { "_inventoryitem" }, { "INLIMBO", "NOCLICK", "catchable", "fire" }) local baits = { ["powcake"] = true, ["pigskin"] = true, ["winter_food4"] = true, } local function Wall(item) local xx, yy ,zz = item.Transform:GetWorldPosition() local nents = TheSim:FindEntities(xx, yy, zz, 3) local targets = 0 for _, vv in ipairs(nents) do if vv:HasTag("wall") and vv.components.health then targets = targets + 1 end end return targets end for _, v in ipairs(ents) do local c = v.components if c.inventoryitem ~= nil and c.inventoryitem.canbepickedup and c.inventoryitem.cangoincontainer and not c.inventoryitem:IsHeld() and not v:HasTag("flower") and not v:HasTag("trap") and not v:HasTag("mine") and not v:HasTag("cage") and not string.find(v.prefab, "mooneye") and inv and inv:CanAcceptCount(v, 1) > 0 then if c.trap ~= nil and c.trap:IsSprung() then c.trap:Harvest(player) else if baits[v.prefab] then if Wall(v) < 7 then inv:GiveItem(v) end else if c.bait then if not c.bait.trap then inv:GiveItem(v) end else inv:GiveItem(v) end end end end end) @(527.29, -634.09)
[01:55:27]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if not player or player:HasTag("playerghost") then return end local inv = player.components.inventory local x, y, z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x, y, z, 30, { "_inventoryitem" }, { "INLIMBO", "NOCLICK", "catchable", "fire" }) local baits = { ["powcake"] = true, ["pigskin"] = true, ["winter_food4"] = true, } local function Wall(item) local xx, yy ,zz = item.Transform:GetWorldPosition() local nents = TheSim:FindEntities(xx, yy, zz, 3) local targets = 0 for _, vv in ipairs(nents) do if vv:HasTag("wall") and vv.components.health then targets = targets + 1 end end return targets end for _, v in ipairs(ents) do local c = v.components if c.inventoryitem ~= nil and c.inventoryitem.canbepickedup and c.inventoryitem.cangoincontainer and not c.inventoryitem:IsHeld() and not v:HasTag("flower") and not v:HasTag("trap") and not v:HasTag("mine") and not v:HasTag("cage") and not string.find(v.prefab, "mooneye") and inv and inv:CanAcceptCount(v, 1) > 0 then if c.trap ~= nil and c.trap:IsSprung() then c.trap:Harvest(player) else if baits[v.prefab] then if Wall(v) < 7 then inv:GiveItem(v) end else if c.bait then if not c.bait.trap then inv:GiveItem(v) end else inv:GiveItem(v) end end end end end) @(516.02, -641.78)
[01:55:45]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if not player or player:HasTag("playerghost") then return end local inv = player.components.inventory local x, y, z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x, y, z, 30, { "_inventoryitem" }, { "INLIMBO", "NOCLICK", "catchable", "fire" }) local baits = { ["powcake"] = true, ["pigskin"] = true, ["winter_food4"] = true, } local function Wall(item) local xx, yy ,zz = item.Transform:GetWorldPosition() local nents = TheSim:FindEntities(xx, yy, zz, 3) local targets = 0 for _, vv in ipairs(nents) do if vv:HasTag("wall") and vv.components.health then targets = targets + 1 end end return targets end for _, v in ipairs(ents) do local c = v.components if c.inventoryitem ~= nil and c.inventoryitem.canbepickedup and c.inventoryitem.cangoincontainer and not c.inventoryitem:IsHeld() and not v:HasTag("flower") and not v:HasTag("trap") and not v:HasTag("mine") and not v:HasTag("cage") and not string.find(v.prefab, "mooneye") and inv and inv:CanAcceptCount(v, 1) > 0 then if c.trap ~= nil and c.trap:IsSprung() then c.trap:Harvest(player) else if baits[v.prefab] then if Wall(v) < 7 then inv:GiveItem(v) end else if c.bait then if not c.bait.trap then inv:GiveItem(v) end else inv:GiveItem(v) end end end end end) @(511.07, -612.58)
[01:55:50]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player ~= nil then local function tmi_goto(prefab) if player.Physics ~= nil then player.Physics:Teleport(prefab.Transform:GetWorldPosition()) else player.Transform:SetPosition(prefab.Transform:GetWorldPosition()) end end local target = c_findnext("pigking") if target == nil then target = c_findnext("") end tmi_goto(target) end) @(531.10, -621.20)
[01:55:50]: Finding a 	pigking	
[01:55:50]: Found 108527 (1/1)	
[01:55:59]: Server Autopaused	
[01:56:08]: Server Unpaused	
[01:56:08]: Server Autopaused	
[01:56:08]: Server Unpaused	
[01:56:21]: Server Autopaused	
[01:56:26]: Server Unpaused	
[01:56:48]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 4) end) @(-145.50, -151.57)
[01:56:50]: Server Autopaused	
[01:57:01]: Server Unpaused	
[01:57:28]: Server Autopaused	
[01:57:30]: Server Unpaused	
[01:57:31]: Server Autopaused	
[01:57:40]: Server Unpaused	
[01:58:03]: Available disk space for save files: 82367 MB
[01:58:03]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000013
[01:58:03]: Serializing world: session/4F0D0D0885D2D513/0000000013
[01:58:05]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local c = p.components.combat or nil local t = p.components.talker if p and c and t and c.CalcDamage then if c.OldCalcDamage then p.components.talker:Say("一击必杀模式:禁用") c.CalcDamage = c.OldCalcDamage c.OldCalcDamage = nil else p.components.talker:Say("一击必杀模式:启用") c.OldCalcDamage = c.CalcDamage c.CalcDamage = function(...) return 9999999999*9 end end end) @(540.05, -423.80)
[01:58:42]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if not player or player:HasTag("playerghost") then return end local inv = player.components.inventory local x, y, z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x, y, z, 30, { "_inventoryitem" }, { "INLIMBO", "NOCLICK", "catchable", "fire" }) local baits = { ["powcake"] = true, ["pigskin"] = true, ["winter_food4"] = true, } local function Wall(item) local xx, yy ,zz = item.Transform:GetWorldPosition() local nents = TheSim:FindEntities(xx, yy, zz, 3) local targets = 0 for _, vv in ipairs(nents) do if vv:HasTag("wall") and vv.components.health then targets = targets + 1 end end return targets end for _, v in ipairs(ents) do local c = v.components if c.inventoryitem ~= nil and c.inventoryitem.canbepickedup and c.inventoryitem.cangoincontainer and not c.inventoryitem:IsHeld() and not v:HasTag("flower") and not v:HasTag("trap") and not v:HasTag("mine") and not v:HasTag("cage") and not string.find(v.prefab, "mooneye") and inv and inv:CanAcceptCount(v, 1) > 0 then if c.trap ~= nil and c.trap:IsSprung() then c.trap:Harvest(player) else if baits[v.prefab] then if Wall(v) < 7 then inv:GiveItem(v) end else if c.bait then if not c.bait.trap then inv:GiveItem(v) end else inv:GiveItem(v) end end end end end) @(510.66, -413.15)
[01:58:50]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local c = p.components.combat or nil local t = p.components.talker if p and c and t and c.CalcDamage then if c.OldCalcDamage then p.components.talker:Say("一击必杀模式:禁用") c.CalcDamage = c.OldCalcDamage c.OldCalcDamage = nil else p.components.talker:Say("一击必杀模式:启用") c.OldCalcDamage = c.CalcDamage c.CalcDamage = function(...) return 9999999999*9 end end end) @(583.91, -559.59)
[01:58:53]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local h = player.components.hunger if player and not player:HasTag("playerghost") and h then h:SetPercent(1) end) @(581.82, -567.26)
[02:00:07]: [200] Account Communication Success (6)
[02:00:07]: Received (KU_0vPtViED) from TokenPurpose
[02:01:52]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 1) end) @(500.53, -646.53)
[02:02:31]: Server Autopaused	
[02:02:31]: Server Unpaused	
[02:03:26]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "ice" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("ice", "ice", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "ice" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "ice" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(530.48, -635.65)
[02:03:26]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "ice" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("ice", "ice", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "ice" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "ice" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(530.48, -635.65)
[02:03:26]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "ice" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("ice", "ice", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "ice" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "ice" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(530.48, -635.65)
[02:03:27]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "ice" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("ice", "ice", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "ice" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "ice" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(530.48, -635.65)
[02:03:27]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "ice" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("ice", "ice", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "ice" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "ice" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(530.48, -635.65)
[02:03:28]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "ice" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("ice", "ice", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "ice" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "ice" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(530.48, -635.65)
[02:03:28]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "ice" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("ice", "ice", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "ice" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "ice" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(530.48, -635.65)
[02:03:28]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "ice" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("ice", "ice", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "ice" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "ice" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(530.48, -635.65)
[02:04:38]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(TheWorld:PushEvent("ms_nextphase")) @(511.47, -627.67)
[02:04:39]: Available disk space for save files: 82363 MB
[02:04:39]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000014
[02:04:39]: Serializing world: session/4F0D0D0885D2D513/0000000014
[02:05:40]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "charcoal" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("charcoal", "charcoal", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "charcoal" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "charcoal" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(511.43, -641.33)
[02:05:40]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "charcoal" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("charcoal", "charcoal", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "charcoal" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "charcoal" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(511.43, -641.33)
[02:05:40]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "charcoal" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("charcoal", "charcoal", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "charcoal" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "charcoal" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(511.43, -641.33)
[02:06:03]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(TheSim:SetTimeScale(2) print("Speed is now ", TheSim:GetTimeScale())) @(539.90, -621.69)
[02:06:03]: Speed is now 	2	
[02:06:08]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(TheSim:SetTimeScale(1) print("Speed is now ", TheSim:GetTimeScale())) @(539.37, -620.58)
[02:06:08]: Speed is now 	1	
[02:06:27]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "twigs" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("twigs", "twigs", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "twigs" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "twigs" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(512.82, -652.72)
[02:06:27]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "twigs" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("twigs", "twigs", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "twigs" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "twigs" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(512.82, -652.72)
[02:06:27]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "twigs" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("twigs", "twigs", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "twigs" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "twigs" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(512.82, -652.72)
[02:06:27]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "twigs" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("twigs", "twigs", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "twigs" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "twigs" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(512.82, -652.72)
[02:06:30]: Server Autopaused	
[02:06:31]: Server Unpaused	
[02:07:32]: Server Autopaused	
[02:07:45]: Server Unpaused	
[02:10:46]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local h = player.components.hunger if player and not player:HasTag("playerghost") and h then h:SetPercent(1) end) @(539.34, -652.78)
[02:10:46]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local h = player.components.sanity if player and not player:HasTag("playerghost") and h then h:SetPercent(1) end) @(539.32, -651.83)
[02:10:47]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local h = player.components.health if player and not player:HasTag("playerghost") and h then h:SetPercent(1) end) @(539.40, -650.33)
[02:10:48]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local h = p.components.health local t = p.components.talker if p ~= nil then if p:HasTag("playerghost") then p:PushEvent("respawnfromghost") p.rezsource = "TMIP 控制台" else if h ~= nil then local godmode = h.invincible t:Say(godmode and "上帝模式:禁用" or "上帝模式:启用") h:SetInvincible(not godmode) end end end) @(540.92, -649.08)
[02:10:50]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local c = p.components.combat or nil local t = p.components.talker if p and c and t and c.CalcDamage then if c.OldCalcDamage then p.components.talker:Say("一击必杀模式:禁用") c.CalcDamage = c.OldCalcDamage c.OldCalcDamage = nil else p.components.talker:Say("一击必杀模式:启用") c.OldCalcDamage = c.CalcDamage c.CalcDamage = function(...) return 9999999999*9 end end end) @(541.02, -648.00)
[02:11:04]: Server Autopaused	
[02:11:05]: Server Unpaused	
[02:11:05]: Server Autopaused	
[02:11:06]: Server Unpaused	
[02:11:20]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if not player or player:HasTag("playerghost") then return end local inv = player.components.inventory local x, y, z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x, y, z, 30, { "_inventoryitem" }, { "INLIMBO", "NOCLICK", "catchable", "fire" }) local baits = { ["powcake"] = true, ["pigskin"] = true, ["winter_food4"] = true, } local function Wall(item) local xx, yy ,zz = item.Transform:GetWorldPosition() local nents = TheSim:FindEntities(xx, yy, zz, 3) local targets = 0 for _, vv in ipairs(nents) do if vv:HasTag("wall") and vv.components.health then targets = targets + 1 end end return targets end for _, v in ipairs(ents) do local c = v.components if c.inventoryitem ~= nil and c.inventoryitem.canbepickedup and c.inventoryitem.cangoincontainer and not c.inventoryitem:IsHeld() and not v:HasTag("flower") and not v:HasTag("trap") and not v:HasTag("mine") and not v:HasTag("cage") and not string.find(v.prefab, "mooneye") and inv and inv:CanAcceptCount(v, 1) > 0 then if c.trap ~= nil and c.trap:IsSprung() then c.trap:Harvest(player) else if baits[v.prefab] then if Wall(v) < 7 then inv:GiveItem(v) end else if c.bait then if not c.bait.trap then inv:GiveItem(v) end else inv:GiveItem(v) end end end end end) @(518.75, -615.37)
[02:11:27]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if not player or player:HasTag("playerghost") then return end local inv = player.components.inventory local x, y, z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x, y, z, 30, { "_inventoryitem" }, { "INLIMBO", "NOCLICK", "catchable", "fire" }) local baits = { ["powcake"] = true, ["pigskin"] = true, ["winter_food4"] = true, } local function Wall(item) local xx, yy ,zz = item.Transform:GetWorldPosition() local nents = TheSim:FindEntities(xx, yy, zz, 3) local targets = 0 for _, vv in ipairs(nents) do if vv:HasTag("wall") and vv.components.health then targets = targets + 1 end end return targets end for _, v in ipairs(ents) do local c = v.components if c.inventoryitem ~= nil and c.inventoryitem.canbepickedup and c.inventoryitem.cangoincontainer and not c.inventoryitem:IsHeld() and not v:HasTag("flower") and not v:HasTag("trap") and not v:HasTag("mine") and not v:HasTag("cage") and not string.find(v.prefab, "mooneye") and inv and inv:CanAcceptCount(v, 1) > 0 then if c.trap ~= nil and c.trap:IsSprung() then c.trap:Harvest(player) else if baits[v.prefab] then if Wall(v) < 7 then inv:GiveItem(v) end else if c.bait then if not c.bait.trap then inv:GiveItem(v) end else inv:GiveItem(v) end end end end end) @(519.12, -615.73)
[02:11:27]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if not player or player:HasTag("playerghost") then return end local inv = player.components.inventory local x, y, z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x, y, z, 30, { "_inventoryitem" }, { "INLIMBO", "NOCLICK", "catchable", "fire" }) local baits = { ["powcake"] = true, ["pigskin"] = true, ["winter_food4"] = true, } local function Wall(item) local xx, yy ,zz = item.Transform:GetWorldPosition() local nents = TheSim:FindEntities(xx, yy, zz, 3) local targets = 0 for _, vv in ipairs(nents) do if vv:HasTag("wall") and vv.components.health then targets = targets + 1 end end return targets end for _, v in ipairs(ents) do local c = v.components if c.inventoryitem ~= nil and c.inventoryitem.canbepickedup and c.inventoryitem.cangoincontainer and not c.inventoryitem:IsHeld() and not v:HasTag("flower") and not v:HasTag("trap") and not v:HasTag("mine") and not v:HasTag("cage") and not string.find(v.prefab, "mooneye") and inv and inv:CanAcceptCount(v, 1) > 0 then if c.trap ~= nil and c.trap:IsSprung() then c.trap:Harvest(player) else if baits[v.prefab] then if Wall(v) < 7 then inv:GiveItem(v) end else if c.bait then if not c.bait.trap then inv:GiveItem(v) end else inv:GiveItem(v) end end end end end) @(518.90, -615.37)
[02:11:28]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(TheWorld:PushEvent("ms_nextphase")) @(507.56, -631.81)
[02:11:29]: Available disk space for save files: 82357 MB
[02:11:29]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000015
[02:11:30]: Serializing world: session/4F0D0D0885D2D513/0000000015
[02:11:30]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local c = p.components.combat or nil local t = p.components.talker if p and c and t and c.CalcDamage then if c.OldCalcDamage then p.components.talker:Say("一击必杀模式:禁用") c.CalcDamage = c.OldCalcDamage c.OldCalcDamage = nil else p.components.talker:Say("一击必杀模式:启用") c.OldCalcDamage = c.CalcDamage c.CalcDamage = function(...) return 9999999999*9 end end end) @(547.11, -647.47)
[02:11:53]: Server Autopaused	
[02:11:53]: Server Unpaused	
[02:11:55]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 3) end) @(470.08, -628.01)
[02:12:03]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if not player or player:HasTag("playerghost") then return end local inv = player.components.inventory local x, y, z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x, y, z, 30, { "_inventoryitem" }, { "INLIMBO", "NOCLICK", "catchable", "fire" }) local baits = { ["powcake"] = true, ["pigskin"] = true, ["winter_food4"] = true, } local function Wall(item) local xx, yy ,zz = item.Transform:GetWorldPosition() local nents = TheSim:FindEntities(xx, yy, zz, 3) local targets = 0 for _, vv in ipairs(nents) do if vv:HasTag("wall") and vv.components.health then targets = targets + 1 end end return targets end for _, v in ipairs(ents) do local c = v.components if c.inventoryitem ~= nil and c.inventoryitem.canbepickedup and c.inventoryitem.cangoincontainer and not c.inventoryitem:IsHeld() and not v:HasTag("flower") and not v:HasTag("trap") and not v:HasTag("mine") and not v:HasTag("cage") and not string.find(v.prefab, "mooneye") and inv and inv:CanAcceptCount(v, 1) > 0 then if c.trap ~= nil and c.trap:IsSprung() then c.trap:Harvest(player) else if baits[v.prefab] then if Wall(v) < 7 then inv:GiveItem(v) end else if c.bait then if not c.bait.trap then inv:GiveItem(v) end else inv:GiveItem(v) end end end end end) @(472.47, -609.38)
[02:13:42]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "turf_sinkhole" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 1 or 1 do local inst = SpawnPrefab("turf_sinkhole", "turf_sinkhole", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "turf_sinkhole" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "turf_sinkhole" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(542.77, -638.02)
[02:13:43]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "turf_sinkhole" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 1 or 1 do local inst = SpawnPrefab("turf_sinkhole", "turf_sinkhole", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "turf_sinkhole" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "turf_sinkhole" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(544.60, -638.05)
[02:13:44]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "turf_sinkhole" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 1 or 1 do local inst = SpawnPrefab("turf_sinkhole", "turf_sinkhole", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "turf_sinkhole" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "turf_sinkhole" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(544.63, -638.05)
[02:13:44]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "turf_sinkhole" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 1 or 1 do local inst = SpawnPrefab("turf_sinkhole", "turf_sinkhole", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "turf_sinkhole" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "turf_sinkhole" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(544.64, -638.04)
[02:13:59]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end if player ~= nil then local function tmi_goto(prefab) if player.Physics ~= nil then player.Physics:Teleport(prefab.Transform:GetWorldPosition()) else player.Transform:SetPosition(prefab.Transform:GetWorldPosition()) end end local target = c_findnext("turf_sinkhole") if target ~= nil then tmi_goto(target) end end) @(528.79, -640.88)
[02:13:59]: Finding a 	turf_sinkhole	
[02:13:59]: Could not find any objects matching 'turf_sinkhole'.	
[02:14:01]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "turf_sinkhole" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("turf_sinkhole", "turf_sinkhole", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "turf_sinkhole" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "turf_sinkhole" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(541.21, -640.87)
[02:16:19]: Server Autopaused	
[02:16:20]: Server Unpaused	
[02:16:29]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player ~= nil then local function tmi_goto(prefab) if player.Physics ~= nil then player.Physics:Teleport(prefab.Transform:GetWorldPosition()) else player.Transform:SetPosition(prefab.Transform:GetWorldPosition()) end end local target = c_findnext("cave_entrance_open") if target == nil then target = c_findnext("cave_entrance") end tmi_goto(target) end) @(546.49, -620.32)
[02:16:29]: Finding a 	cave_entrance_open	
[02:16:29]: Found 121967 (4/6)	
[02:16:34]: Activating portal[2] to 3879474884	
[02:16:34]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000016
[02:16:34]: [Shard] Migration request: (KU_0vPtViED) to Caves(3879474884)
[02:16:34]: [Shard] Begin migration #13 for (KU_0vPtViED)
[02:16:34]: [Shard] #13 [SHDMASTER](1) -> Caves(3879474884)
[02:16:34]: [Shard] #13 <- session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000016
[02:16:34]: [Shard] Writing save location file for (KU_0vPtViED)
[02:16:34]: CloseConnectionWithReason: ID_DST_SHARD_SILENT_DISCONNECT
[02:16:34]: [Steam] SendUserDisconnect for '76561198105084721'
[02:16:34]: [Shard] (KU_0vPtViED) disconnected from [SHDMASTER](1)
[02:16:39]: [Shard] Completed migration #13 for player (KU_0vPtViED)
[02:16:59]: [Shard] Begin migration #14 for (KU_0vPtViED)
[02:16:59]: [Shard] #14 Caves(3879474884) -> [SHDMASTER](1)
[02:16:59]: [Shard] #14 -> session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000016
[02:16:59]: [Shard] Received migration #14 data for (KU_0vPtViED)
[02:16:59]: [Shard] Writing save location file for (KU_0vPtViED)
[02:16:59]: [Shard] (KU_0vPtViED) disconnected from Caves(3879474884)
[02:17:02]: New incoming connection 127.0.0.1|56467 <3736868731331848134>
[02:17:02]: Client connected from [LAN] 127.0.0.1|56467 <3736868731331848134>
[02:17:02]: ValidateGameSessionToken GUID<3736868731331848134>
[02:17:03]: Client authenticated: (KU_0vPtViED) Xac
[02:17:03]: [Steam] Authenticated host '76561198105084721'
[02:17:03]: [Shard] Completed incoming migration #14 for (KU_0vPtViED)
[02:17:03]: [Shard] Completed migration #14 for player (KU_0vPtViED)
[02:17:14]: Resuming user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000016
[02:17:14]: Player will spawn close to portal #2	
[02:17:14]: Spawning player at: [Load] (-268.82, 0.00, 26.21)	
[02:17:17]: Server Autopaused	
[02:17:22]: Server Unpaused	
[02:17:24]: Server Autopaused	
[02:17:36]: Server Unpaused	
[02:17:38]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local h = p.components.health local t = p.components.talker if p ~= nil then if p:HasTag("playerghost") then p:PushEvent("respawnfromghost") p.rezsource = "TMIP 控制台" else if h ~= nil then local godmode = h.invincible t:Say(godmode and "上帝模式:禁用" or "上帝模式:启用") h:SetInvincible(not godmode) end end end) @(-261.03, 23.02)
[02:17:40]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 4) end) @(-278.71, 21.33)
[02:18:02]: Server Autopaused	
[02:18:05]: Server Unpaused	
[02:18:25]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local h = p.components.health local t = p.components.talker if p ~= nil then if p:HasTag("playerghost") then p:PushEvent("respawnfromghost") p.rezsource = "TMIP 控制台" else if h ~= nil then local godmode = h.invincible t:Say(godmode and "上帝模式:禁用" or "上帝模式:启用") h:SetInvincible(not godmode) end end end) @(607.19, -370.70)
[02:18:56]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if not player or player:HasTag("playerghost") then return end local inv = player.components.inventory local x, y, z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x, y, z, 30, { "_inventoryitem" }, { "INLIMBO", "NOCLICK", "catchable", "fire" }) local baits = { ["powcake"] = true, ["pigskin"] = true, ["winter_food4"] = true, } local function Wall(item) local xx, yy ,zz = item.Transform:GetWorldPosition() local nents = TheSim:FindEntities(xx, yy, zz, 3) local targets = 0 for _, vv in ipairs(nents) do if vv:HasTag("wall") and vv.components.health then targets = targets + 1 end end return targets end for _, v in ipairs(ents) do local c = v.components if c.inventoryitem ~= nil and c.inventoryitem.canbepickedup and c.inventoryitem.cangoincontainer and not c.inventoryitem:IsHeld() and not v:HasTag("flower") and not v:HasTag("trap") and not v:HasTag("mine") and not v:HasTag("cage") and not string.find(v.prefab, "mooneye") and inv and inv:CanAcceptCount(v, 1) > 0 then if c.trap ~= nil and c.trap:IsSprung() then c.trap:Harvest(player) else if baits[v.prefab] then if Wall(v) < 7 then inv:GiveItem(v) end else if c.bait then if not c.bait.trap then inv:GiveItem(v) end else inv:GiveItem(v) end end end end end) @(568.39, -363.43)
[02:19:50]: Available disk space for save files: 82350 MB
[02:19:50]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000016
[02:19:51]: Serializing world: session/4F0D0D0885D2D513/0000000016
[02:21:37]: Server Autopaused	
[02:22:23]: Server Unpaused	
[02:24:05]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end if player ~= nil then local function tmi_goto(prefab) if player.Physics ~= nil then player.Physics:Teleport(prefab.Transform:GetWorldPosition()) else player.Transform:SetPosition(prefab.Transform:GetWorldPosition()) end end local target = c_findnext("turf_sinkhole") if target ~= nil then tmi_goto(target) end end) @(518.45, -639.85)
[02:24:05]: Finding a 	turf_sinkhole	
[02:24:05]: Found 138412 (1/1)	
[02:24:08]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end if player ~= nil then local function tmi_goto(prefab) if player.Physics ~= nil then player.Physics:Teleport(prefab.Transform:GetWorldPosition()) else player.Transform:SetPosition(prefab.Transform:GetWorldPosition()) end end local target = c_findnext("turf_sinkhole") if target ~= nil then tmi_goto(target) end end) @(536.57, -640.49)
[02:24:08]: Finding a 	turf_sinkhole	
[02:24:08]: Found 138412 (1/1)	
[02:24:08]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "turf_sinkhole" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("turf_sinkhole", "turf_sinkhole", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "turf_sinkhole" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "turf_sinkhole" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(540.11, -640.48)
[02:24:09]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "turf_sinkhole" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("turf_sinkhole", "turf_sinkhole", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "turf_sinkhole" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "turf_sinkhole" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(540.27, -640.49)
[02:24:09]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "turf_sinkhole" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("turf_sinkhole", "turf_sinkhole", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "turf_sinkhole" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "turf_sinkhole" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(540.28, -640.49)
[02:24:10]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "turf_sinkhole" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("turf_sinkhole", "turf_sinkhole", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "turf_sinkhole" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "turf_sinkhole" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(540.28, -640.49)
[02:24:11]: Server Autopaused	
[02:24:12]: Server Unpaused	
[02:24:42]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 1) end) @(538.34, -634.10)
[02:24:43]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 3) end) @(534.34, -633.63)
[02:25:12]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "turf_sinkhole" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 1 or 1 do local inst = SpawnPrefab("turf_sinkhole", "turf_sinkhole", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "turf_sinkhole" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "turf_sinkhole" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(510.38, -654.45)
[02:25:37]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local c = p.components.combat or nil local t = p.components.talker if p and c and t and c.CalcDamage then if c.OldCalcDamage then p.components.talker:Say("一击必杀模式:禁用") c.CalcDamage = c.OldCalcDamage c.OldCalcDamage = nil else p.components.talker:Say("一击必杀模式:启用") c.OldCalcDamage = c.CalcDamage c.CalcDamage = function(...) return 9999999999*9 end end end) @(540.51, -640.70)
[02:25:40]: Server Autopaused	
[02:25:40]: Server Unpaused	
[02:26:15]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if not player or player:HasTag("playerghost") then return end local inv = player.components.inventory local x, y, z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x, y, z, 30, { "_inventoryitem" }, { "INLIMBO", "NOCLICK", "catchable", "fire" }) local baits = { ["powcake"] = true, ["pigskin"] = true, ["winter_food4"] = true, } local function Wall(item) local xx, yy ,zz = item.Transform:GetWorldPosition() local nents = TheSim:FindEntities(xx, yy, zz, 3) local targets = 0 for _, vv in ipairs(nents) do if vv:HasTag("wall") and vv.components.health then targets = targets + 1 end end return targets end for _, v in ipairs(ents) do local c = v.components if c.inventoryitem ~= nil and c.inventoryitem.canbepickedup and c.inventoryitem.cangoincontainer and not c.inventoryitem:IsHeld() and not v:HasTag("flower") and not v:HasTag("trap") and not v:HasTag("mine") and not v:HasTag("cage") and not string.find(v.prefab, "mooneye") and inv and inv:CanAcceptCount(v, 1) > 0 then if c.trap ~= nil and c.trap:IsSprung() then c.trap:Harvest(player) else if baits[v.prefab] then if Wall(v) < 7 then inv:GiveItem(v) end else if c.bait then if not c.bait.trap then inv:GiveItem(v) end else inv:GiveItem(v) end end end end end) @(419.57, -316.33)
[02:26:40]: Server Autopaused	
[02:26:47]: Server Unpaused	
[02:26:48]: Server Autopaused	
[02:26:51]: Server Unpaused	
[02:28:06]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 1) end) @(517.32, -626.53)
[02:28:11]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "pinecone" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("pinecone", "pinecone", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "pinecone" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "pinecone" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(522.50, -638.42)
[02:28:11]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "pinecone" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("pinecone", "pinecone", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "pinecone" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "pinecone" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(522.57, -638.52)
[02:28:12]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "pinecone" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("pinecone", "pinecone", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "pinecone" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "pinecone" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(522.57, -638.52)
[02:28:12]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "pinecone" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("pinecone", "pinecone", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "pinecone" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "pinecone" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(522.57, -638.52)
[02:28:40]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 2) end) @(546.98, -553.74)
[02:28:48]: Available disk space for save files: 82344 MB
[02:28:49]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000017
[02:28:49]: Serializing world: session/4F0D0D0885D2D513/0000000017
[02:29:31]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "wall_stone" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("wall_stone", "wall_stone", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "wall_stone" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "wall_stone" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(511.61, -645.31)
[02:29:34]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "wall_stone" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("wall_stone", "wall_stone", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "wall_stone" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "wall_stone" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(515.07, -637.21)
[02:29:34]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "wall_stone" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("wall_stone", "wall_stone", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "wall_stone" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "wall_stone" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(517.00, -636.40)
[02:29:37]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "wall_stone" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("wall_stone", "wall_stone", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "wall_stone" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "wall_stone" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(528.62, -636.40)
[02:29:39]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "wall_stone" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("wall_stone", "wall_stone", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "wall_stone" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "wall_stone" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(529.50, -636.41)
[02:30:07]: [200] Account Communication Success (6)
[02:30:07]: Received (KU_0vPtViED) from TokenPurpose
[02:33:01]: Server Autopaused	
[02:33:02]: Server Unpaused	
[02:33:03]: Server Autopaused	
[02:33:04]: Server Unpaused	
[02:34:00]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end if player ~= nil then local function tmi_goto(prefab) if player.Physics ~= nil then player.Physics:Teleport(prefab.Transform:GetWorldPosition()) else player.Transform:SetPosition(prefab.Transform:GetWorldPosition()) end end local target = c_findnext("cutstone") if target ~= nil then tmi_goto(target) end end) @(513.86, -646.28)
[02:34:00]: Finding a 	cutstone	
[02:34:00]: Could not find any objects matching 'cutstone'.	
[02:34:04]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "cutstone" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("cutstone", "cutstone", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "cutstone" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "cutstone" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(500.06, -650.24)
[02:34:05]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "cutstone" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("cutstone", "cutstone", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "cutstone" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "cutstone" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(499.47, -650.81)
[02:34:59]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end if player ~= nil then local function tmi_goto(prefab) if player.Physics ~= nil then player.Physics:Teleport(prefab.Transform:GetWorldPosition()) else player.Transform:SetPosition(prefab.Transform:GetWorldPosition()) end end local target = c_findnext("cutstone") if target ~= nil then tmi_goto(target) end end) @(525.67, -630.77)
[02:34:59]: Finding a 	cutstone	
[02:34:59]: Found 141733 (1/1)	
[02:35:00]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "nitre" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("nitre", "nitre", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "nitre" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "nitre" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(522.66, -636.76)
[02:35:07]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end if player ~= nil then local function tmi_goto(prefab) if player.Physics ~= nil then player.Physics:Teleport(prefab.Transform:GetWorldPosition()) else player.Transform:SetPosition(prefab.Transform:GetWorldPosition()) end end local target = c_findnext("cutstone") if target ~= nil then tmi_goto(target) end end) @(533.42, -625.44)
[02:35:07]: Finding a 	cutstone	
[02:35:07]: Found 141733 (1/1)	
[02:35:08]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "cutstone" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("cutstone", "cutstone", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "cutstone" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "cutstone" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(537.29, -625.55)
[02:35:12]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "goldnugget" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("goldnugget", "goldnugget", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "goldnugget" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "goldnugget" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(535.19, -627.68)
[02:35:13]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "goldnugget" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("goldnugget", "goldnugget", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "goldnugget" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "goldnugget" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(535.19, -627.92)
[02:35:52]: Server Autopaused	
[02:36:03]: Server Unpaused	
[02:37:01]: Available disk space for save files: 82339 MB
[02:37:01]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000018
[02:37:02]: Serializing world: session/4F0D0D0885D2D513/0000000018
[02:38:02]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(TheSim:SetTimeScale(1) print("Speed is now ", TheSim:GetTimeScale())) @(554.46, -641.89)
[02:38:02]: Speed is now 	1	
[02:38:45]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "dug_grass" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("dug_grass", "dug_grass", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "dug_grass" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "dug_grass" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(543.23, -648.64)
[02:38:46]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "dug_grass" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("dug_grass", "dug_grass", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "dug_grass" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "dug_grass" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(543.23, -648.64)
[02:38:46]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "dug_grass" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("dug_grass", "dug_grass", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "dug_grass" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "dug_grass" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(543.23, -648.64)
[02:38:47]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "dug_grass" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("dug_grass", "dug_grass", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "dug_grass" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "dug_grass" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(543.23, -648.64)
[02:38:47]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "dug_grass" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("dug_grass", "dug_grass", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "dug_grass" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "dug_grass" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(543.23, -648.64)
[02:38:47]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "dug_grass" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("dug_grass", "dug_grass", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "dug_grass" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "dug_grass" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(543.23, -648.64)
[02:38:48]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "dug_grass" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("dug_grass", "dug_grass", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "dug_grass" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "dug_grass" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(543.23, -648.64)
[02:40:17]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "boneshard" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("boneshard", "boneshard", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "boneshard" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "boneshard" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(541.84, -625.99)
[02:41:08]: Server Autopaused	
[02:42:00]: Server Unpaused	
[02:43:56]: Server Autopaused	
[02:43:59]: Server Unpaused	
[02:44:34]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(TheWorld:PushEvent("ms_nextphase")) @(516.46, -628.36)
[02:44:35]: Available disk space for save files: 82334 MB
[02:44:35]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000019
[02:44:36]: Serializing world: session/4F0D0D0885D2D513/0000000019
[02:44:54]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local b = p.components.builder local t = p.components.talker if p and b and t then t:Say(b.freebuildmode and "创造模式:禁用" or "创造模式:启用") b:GiveAllRecipes() end) @(550.04, -637.90)
[02:46:33]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if not player or player:HasTag("playerghost") then return end local function tryharvest(inst) local objc = inst.components if objc.crop ~= nil then objc.crop:Harvest(player) elseif objc.harvestable ~= nil then objc.harvestable:Harvest(player) elseif objc.stewer ~= nil then objc.stewer:Harvest(player) elseif objc.dryer ~= nil then objc.dryer:Harvest(player) elseif objc.occupiable ~= nil and objc.occupiable:IsOccupied() then local item = objc.occupiable:Harvest(player) if item ~= nil then player.components.inventory:GiveItem(item) end elseif objc.pickable ~= nil and objc.pickable:CanBePicked() then objc.pickable:Pick(player) end end local function harvesting() local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 30) for k, obj in pairs(ents) do if not obj:HasTag("player") and not obj:HasTag("flower") and not obj:HasTag("trap") and not obj:HasTag("mine") and not obj:HasTag("cage") and obj ~= TheWorld and obj.AnimState and obj.components and obj.prefab and not string.find(obj.prefab, "mandrake") then tryharvest(obj) end end end harvesting()) @(523.34, -638.96)
[02:47:02]: Server Autopaused	
[02:47:04]: Server Unpaused	
[02:47:16]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player ~= nil then local function tmi_goto(prefab) if player.Physics ~= nil then player.Physics:Teleport(prefab.Transform:GetWorldPosition()) else player.Transform:SetPosition(prefab.Transform:GetWorldPosition()) end end local target = c_findnext("multiplayer_portal") if target == nil then target = c_findnext("multiplayer_portal_moonrock") end tmi_goto(target) end) @(535.91, -626.17)
[02:47:16]: Finding a 	multiplayer_portal	
[02:47:16]: Found 105634 (1/1)	
[02:47:47]: Server Autopaused	
[02:48:02]: Server Unpaused	
[02:49:55]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(TheSim:SetTimeScale(0.5) print("Speed is now ", TheSim:GetTimeScale())) @(647.27, 325.40)
[02:49:55]: Speed is now 	0.5	
[02:49:56]: Server Autopaused	
[02:49:58]: Server Unpaused	
[02:50:02]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 1) end) @(634.64, 326.92)
[02:50:17]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 1) end) @(633.61, 327.32)
[02:50:19]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(TheSim:SetTimeScale(1) print("Speed is now ", TheSim:GetTimeScale())) @(645.47, 326.21)
[02:50:19]: Speed is now 	1	
[02:50:22]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "cutgrass" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("cutgrass", "cutgrass", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "cutgrass" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "cutgrass" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(631.40, 307.79)
[02:50:22]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "cutgrass" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("cutgrass", "cutgrass", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "cutgrass" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "cutgrass" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(631.40, 307.79)
[02:50:23]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "cutgrass" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("cutgrass", "cutgrass", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "cutgrass" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "cutgrass" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(631.40, 307.79)
[02:50:23]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "cutgrass" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("cutgrass", "cutgrass", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "cutgrass" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "cutgrass" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(631.40, 307.79)
[02:50:24]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "cutgrass" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("cutgrass", "cutgrass", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "cutgrass" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "cutgrass" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(631.40, 307.79)
[02:50:25]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "cutgrass" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("cutgrass", "cutgrass", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "cutgrass" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "cutgrass" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(631.40, 307.79)
[02:50:25]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "cutgrass" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("cutgrass", "cutgrass", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "cutgrass" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "cutgrass" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(631.40, 307.79)
[02:50:26]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "cutgrass" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("cutgrass", "cutgrass", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "cutgrass" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "cutgrass" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(631.40, 307.79)
[02:50:37]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "twigs" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("twigs", "twigs", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "twigs" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "twigs" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(631.29, 309.44)
[02:50:37]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "twigs" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("twigs", "twigs", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "twigs" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "twigs" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(631.29, 309.44)
[02:50:37]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "twigs" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("twigs", "twigs", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "twigs" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "twigs" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(631.29, 309.44)
[02:50:38]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "twigs" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("twigs", "twigs", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "twigs" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "twigs" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(631.29, 309.44)
[02:50:38]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "twigs" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("twigs", "twigs", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "twigs" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "twigs" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(631.29, 309.44)
[02:50:39]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "twigs" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("twigs", "twigs", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "twigs" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "twigs" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(631.29, 309.44)
[02:50:39]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "twigs" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("twigs", "twigs", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "twigs" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "twigs" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(631.29, 309.44)
[02:50:39]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "twigs" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("twigs", "twigs", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "twigs" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "twigs" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(631.29, 309.44)
[02:51:16]: Server Autopaused	
[02:51:16]: Server Unpaused	
[02:51:21]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local h = p.components.health local t = p.components.talker if p ~= nil then if p:HasTag("playerghost") then p:PushEvent("respawnfromghost") p.rezsource = "TMIP 控制台" else if h ~= nil then local godmode = h.invincible t:Say(godmode and "上帝模式:禁用" or "上帝模式:启用") h:SetInvincible(not godmode) end end end) @(653.04, 316.03)
[02:51:22]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local h = p.components.health local t = p.components.talker if p ~= nil then if p:HasTag("playerghost") then p:PushEvent("respawnfromghost") p.rezsource = "TMIP 控制台" else if h ~= nil then local godmode = h.invincible t:Say(godmode and "上帝模式:禁用" or "上帝模式:启用") h:SetInvincible(not godmode) end end end) @(652.91, 315.97)
[02:51:28]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "pigskin" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("pigskin", "pigskin", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "pigskin" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "pigskin" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(650.60, 313.95)
[02:51:55]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "flint" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("flint", "flint", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "flint" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "flint" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(636.64, 310.02)
[02:51:56]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "flint" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("flint", "flint", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "flint" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "flint" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(636.75, 309.89)
[02:51:57]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "flint" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("flint", "flint", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "flint" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "flint" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(636.83, 309.88)
[02:51:57]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "flint" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("flint", "flint", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "flint" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "flint" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(636.83, 309.88)
[02:51:58]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "flint" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("flint", "flint", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "flint" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "flint" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(636.83, 309.88)
[02:51:59]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "flint" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("flint", "flint", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "flint" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "flint" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(636.83, 309.88)
[02:52:41]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "goldnugget" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("goldnugget", "goldnugget", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "goldnugget" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "goldnugget" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(635.87, 316.39)
[02:52:42]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "goldnugget" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("goldnugget", "goldnugget", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "goldnugget" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "goldnugget" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(636.59, 316.49)
[02:53:07]: Available disk space for save files: 82327 MB
[02:53:07]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000020
[02:53:07]: Serializing world: session/4F0D0D0885D2D513/0000000020
[02:53:55]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "log" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("log", "log", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "log" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "log" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(628.52, 305.93)
[02:53:56]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "log" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("log", "log", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "log" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "log" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(628.52, 305.93)
[02:53:56]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "log" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("log", "log", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "log" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "log" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(628.52, 305.93)
[02:53:57]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "log" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("log", "log", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "log" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "log" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(628.52, 305.93)
[02:53:57]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "log" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("log", "log", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "log" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "log" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(628.52, 305.93)
[02:53:58]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "log" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("log", "log", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "log" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "log" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(628.52, 305.93)
[02:54:00]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "log" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("log", "log", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "log" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "log" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(627.73, 306.25)
[02:54:20]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "log" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("log", "log", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "log" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "log" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(630.83, 308.68)
[02:54:32]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "horn" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 1 or 1 do local inst = SpawnPrefab("horn", "horn", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "horn" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "horn" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(648.96, 321.05)
[02:54:32]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "horn" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 1 or 1 do local inst = SpawnPrefab("horn", "horn", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "horn" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "horn" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(648.80, 321.17)
[02:54:45]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "beefalowool" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 1 or 1 do local inst = SpawnPrefab("beefalowool", "beefalowool", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "beefalowool" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "beefalowool" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(632.57, 310.55)
[02:54:45]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "beefalowool" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 1 or 1 do local inst = SpawnPrefab("beefalowool", "beefalowool", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "beefalowool" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "beefalowool" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(631.48, 310.46)
[02:56:14]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "goldnugget" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("goldnugget", "goldnugget", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "goldnugget" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "goldnugget" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(636.68, 319.06)
[02:56:15]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "goldnugget" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("goldnugget", "goldnugget", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "goldnugget" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "goldnugget" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(636.57, 319.05)
[02:56:26]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "walrus_tusk" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 1 or 1 do local inst = SpawnPrefab("walrus_tusk", "walrus_tusk", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "walrus_tusk" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "walrus_tusk" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(645.88, 316.07)
[02:56:27]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "walrus_tusk" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 1 or 1 do local inst = SpawnPrefab("walrus_tusk", "walrus_tusk", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "walrus_tusk" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "walrus_tusk" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(645.88, 316.07)
[02:56:46]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "cutgrass" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("cutgrass", "cutgrass", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "cutgrass" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "cutgrass" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(629.07, 307.47)
[02:56:47]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "cutgrass" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("cutgrass", "cutgrass", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "cutgrass" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "cutgrass" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(629.16, 307.09)
[02:56:47]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "cutgrass" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("cutgrass", "cutgrass", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "cutgrass" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "cutgrass" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(629.29, 307.12)
[02:56:47]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "cutgrass" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("cutgrass", "cutgrass", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "cutgrass" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "cutgrass" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(629.29, 307.12)
[02:56:48]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "twigs" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("twigs", "twigs", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "twigs" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "twigs" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(629.81, 309.46)
[02:56:49]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "twigs" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("twigs", "twigs", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "twigs" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "twigs" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(629.81, 309.46)
[02:56:49]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "twigs" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("twigs", "twigs", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "twigs" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "twigs" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(629.50, 309.47)
[02:56:50]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "twigs" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("twigs", "twigs", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "twigs" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "twigs" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(629.42, 309.42)
[02:56:57]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "walrus_tusk" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 1 or 1 do local inst = SpawnPrefab("walrus_tusk", "walrus_tusk", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "walrus_tusk" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "walrus_tusk" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(645.18, 320.05)
[02:57:02]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local b = p.components.builder local t = p.components.talker if p and b and t then t:Say(b.freebuildmode and "创造模式:禁用" or "创造模式:启用") b:GiveAllRecipes() end) @(654.13, 315.16)
[02:58:22]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "rocks" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("rocks", "rocks", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "rocks" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "rocks" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(636.56, 314.53)
[02:58:23]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "rocks" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("rocks", "rocks", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "rocks" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "rocks" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(636.56, 314.53)
[02:58:23]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "rocks" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("rocks", "rocks", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "rocks" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "rocks" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(636.38, 314.60)
[02:58:24]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "rocks" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("rocks", "rocks", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "rocks" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "rocks" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(636.26, 314.66)
[02:58:25]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "rocks" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("rocks", "rocks", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "rocks" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "rocks" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(636.26, 314.66)
[02:58:26]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "rocks" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("rocks", "rocks", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "rocks" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "rocks" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(636.26, 314.66)
[02:59:24]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "silk" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("silk", "silk", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "silk" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "silk" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(632.53, 305.10)
[02:59:24]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "silk" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("silk", "silk", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "silk" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "silk" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(632.53, 305.10)
[02:59:25]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "silk" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("silk", "silk", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "silk" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "silk" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(632.53, 305.10)
[02:59:25]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "silk" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("silk", "silk", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "silk" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "silk" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(632.53, 305.10)
[02:59:26]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "silk" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("silk", "silk", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "silk" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "silk" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(632.53, 305.10)
[02:59:26]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "silk" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("silk", "silk", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "silk" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "silk" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(632.53, 305.10)
[03:00:07]: [200] Account Communication Success (6)
[03:00:07]: Received (KU_0vPtViED) from TokenPurpose
[03:00:11]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local c = p.components.combat or nil local t = p.components.talker if p and c and t and c.CalcDamage then if c.OldCalcDamage then p.components.talker:Say("一击必杀模式:禁用") c.CalcDamage = c.OldCalcDamage c.OldCalcDamage = nil else p.components.talker:Say("一击必杀模式:启用") c.OldCalcDamage = c.CalcDamage c.CalcDamage = function(...) return 9999999999*9 end end end) @(658.81, 315.19)
[03:00:11]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local c = p.components.combat or nil local t = p.components.talker if p and c and t and c.CalcDamage then if c.OldCalcDamage then p.components.talker:Say("一击必杀模式:禁用") c.CalcDamage = c.OldCalcDamage c.OldCalcDamage = nil else p.components.talker:Say("一击必杀模式:启用") c.OldCalcDamage = c.CalcDamage c.CalcDamage = function(...) return 9999999999*9 end end end) @(658.81, 315.19)
[03:00:12]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local h = p.components.health local t = p.components.talker if p ~= nil then if p:HasTag("playerghost") then p:PushEvent("respawnfromghost") p.rezsource = "TMIP 控制台" else if h ~= nil then local godmode = h.invincible t:Say(godmode and "上帝模式:禁用" or "上帝模式:启用") h:SetInvincible(not godmode) end end end) @(659.09, 314.05)
[03:00:12]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local h = p.components.health local t = p.components.talker if p ~= nil then if p:HasTag("playerghost") then p:PushEvent("respawnfromghost") p.rezsource = "TMIP 控制台" else if h ~= nil then local godmode = h.invincible t:Say(godmode and "上帝模式:禁用" or "上帝模式:启用") h:SetInvincible(not godmode) end end end) @(659.09, 314.01)
[03:00:21]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player ~= nil then local function tmi_goto(prefab) if player.Physics ~= nil then player.Physics:Teleport(prefab.Transform:GetWorldPosition()) else player.Transform:SetPosition(prefab.Transform:GetWorldPosition()) end end local target = c_findnext("dragonfly") if target == nil then target = c_findnext("dragonfly_spawner") end tmi_goto(target) end) @(655.72, 334.96)
[03:00:21]: Finding a 	dragonfly	
[03:00:21]: Could not find any objects matching 'dragonfly'.	
[03:00:21]: Finding a 	dragonfly_spawner	
[03:00:21]: Found 105644 (1/1)	
[03:00:28]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if not player or player:HasTag("playerghost") then return end local inv = player.components.inventory local x, y, z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x, y, z, 30, { "_inventoryitem" }, { "INLIMBO", "NOCLICK", "catchable", "fire" }) local baits = { ["powcake"] = true, ["pigskin"] = true, ["winter_food4"] = true, } local function Wall(item) local xx, yy ,zz = item.Transform:GetWorldPosition() local nents = TheSim:FindEntities(xx, yy, zz, 3) local targets = 0 for _, vv in ipairs(nents) do if vv:HasTag("wall") and vv.components.health then targets = targets + 1 end end return targets end for _, v in ipairs(ents) do local c = v.components if c.inventoryitem ~= nil and c.inventoryitem.canbepickedup and c.inventoryitem.cangoincontainer and not c.inventoryitem:IsHeld() and not v:HasTag("flower") and not v:HasTag("trap") and not v:HasTag("mine") and not v:HasTag("cage") and not string.find(v.prefab, "mooneye") and inv and inv:CanAcceptCount(v, 1) > 0 then if c.trap ~= nil and c.trap:IsSprung() then c.trap:Harvest(player) else if baits[v.prefab] then if Wall(v) < 7 then inv:GiveItem(v) end else if c.bait then if not c.bait.trap then inv:GiveItem(v) end else inv:GiveItem(v) end end end end end) @(138.14, 409.32)
[03:00:55]: Server Autopaused	
[03:00:58]: Server Unpaused	
[03:01:10]: Available disk space for save files: 82325 MB
[03:01:11]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000021
[03:01:11]: Serializing world: session/4F0D0D0885D2D513/0000000021
[03:01:24]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 3) end) @(169.00, 387.61)
[03:01:29]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(175.06, 380.53)
[03:01:29]: cane_ancient_fx2	
[03:01:29]: cane_ancient_fx3	
[03:01:29]: cane_ancient_fx1	
[03:01:29]: cane_ancient_fx3	
[03:01:29]: rock2	
[03:01:31]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(171.43, 369.92)
[03:01:31]: cane_ancient_fx1	
[03:01:31]: rock_flintless	
[03:01:31]: cane_ancient_fx2	
[03:01:31]: cane_ancient_fx1	
[03:01:31]: cane_ancient_fx2	
[03:01:31]: cane_ancient_fx1	
[03:01:31]: cane_ancient_fx3	
[03:01:59]: Server Autopaused	
[03:02:02]: Server Unpaused	
[03:02:08]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local b = p.components.builder local t = p.components.talker if p and b and t then t:Say(b.freebuildmode and "创造模式:禁用" or "创造模式:启用") b:GiveAllRecipes() end) @(193.86, 377.60)
[03:02:21]: Server Autopaused	
[03:02:23]: Server Unpaused	
[03:02:34]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 1) end) @(173.51, 388.88)
[03:03:59]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player ~= nil then local function tmi_goto(prefab) if player.Physics ~= nil then player.Physics:Teleport(prefab.Transform:GetWorldPosition()) else player.Transform:SetPosition(prefab.Transform:GetWorldPosition()) end end local target = c_findnext("pigking") if target == nil then target = c_findnext("") end tmi_goto(target) end) @(194.10, 406.75)
[03:03:59]: Finding a 	pigking	
[03:03:59]: Found 108527 (1/1)	
[03:04:28]: Server Autopaused	
[03:04:47]: Server Unpaused	
[03:04:52]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 2) end) @(-154.10, -207.65)
[03:07:38]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(TheWorld:PushEvent("ms_nextphase")) @(-265.60, -396.73)
[03:07:39]: Available disk space for save files: 82334 MB
[03:07:39]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000022
[03:07:40]: Serializing world: session/4F0D0D0885D2D513/0000000022
[03:09:18]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if not player or player:HasTag("playerghost") then return end local inv = player.components.inventory local x, y, z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x, y, z, 30, { "_inventoryitem" }, { "INLIMBO", "NOCLICK", "catchable", "fire" }) local baits = { ["powcake"] = true, ["pigskin"] = true, ["winter_food4"] = true, } local function Wall(item) local xx, yy ,zz = item.Transform:GetWorldPosition() local nents = TheSim:FindEntities(xx, yy, zz, 3) local targets = 0 for _, vv in ipairs(nents) do if vv:HasTag("wall") and vv.components.health then targets = targets + 1 end end return targets end for _, v in ipairs(ents) do local c = v.components if c.inventoryitem ~= nil and c.inventoryitem.canbepickedup and c.inventoryitem.cangoincontainer and not c.inventoryitem:IsHeld() and not v:HasTag("flower") and not v:HasTag("trap") and not v:HasTag("mine") and not v:HasTag("cage") and not string.find(v.prefab, "mooneye") and inv and inv:CanAcceptCount(v, 1) > 0 then if c.trap ~= nil and c.trap:IsSprung() then c.trap:Harvest(player) else if baits[v.prefab] then if Wall(v) < 7 then inv:GiveItem(v) end else if c.bait then if not c.bait.trap then inv:GiveItem(v) end else inv:GiveItem(v) end end end end end) @(-260.99, -342.71)
[03:09:19]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if not player or player:HasTag("playerghost") then return end local inv = player.components.inventory local x, y, z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x, y, z, 30, { "_inventoryitem" }, { "INLIMBO", "NOCLICK", "catchable", "fire" }) local baits = { ["powcake"] = true, ["pigskin"] = true, ["winter_food4"] = true, } local function Wall(item) local xx, yy ,zz = item.Transform:GetWorldPosition() local nents = TheSim:FindEntities(xx, yy, zz, 3) local targets = 0 for _, vv in ipairs(nents) do if vv:HasTag("wall") and vv.components.health then targets = targets + 1 end end return targets end for _, v in ipairs(ents) do local c = v.components if c.inventoryitem ~= nil and c.inventoryitem.canbepickedup and c.inventoryitem.cangoincontainer and not c.inventoryitem:IsHeld() and not v:HasTag("flower") and not v:HasTag("trap") and not v:HasTag("mine") and not v:HasTag("cage") and not string.find(v.prefab, "mooneye") and inv and inv:CanAcceptCount(v, 1) > 0 then if c.trap ~= nil and c.trap:IsSprung() then c.trap:Harvest(player) else if baits[v.prefab] then if Wall(v) < 7 then inv:GiveItem(v) end else if c.bait then if not c.bait.trap then inv:GiveItem(v) end else inv:GiveItem(v) end end end end end) @(-260.90, -343.02)
[03:11:59]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(-249.05, -320.16)
[03:11:59]: cane_ancient_fx3	
[03:11:59]: cane_ancient_fx3	
[03:11:59]: cane_ancient_fx2	
[03:11:59]: cane_ancient_fx3	
[03:11:59]: cane_ancient_fx3	
[03:11:59]: spider	
[03:11:59]: spider	
[03:11:59]: dyc_healthbar	
[03:11:59]: dyc_healthbarchild	
[03:11:59]: spider_warrior	
[03:11:59]: dyc_healthbar	
[03:11:59]: dyc_healthbarchild	
[03:11:59]: spider	
[03:11:59]: dyc_healthbar	
[03:11:59]: dyc_healthbarchild	
[03:11:59]: spider	
[03:11:59]: dyc_healthbar	
[03:11:59]: dyc_healthbarchild	
[03:11:59]: evergreen	
[03:12:01]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(-248.99, -320.24)
[03:12:01]: cane_ancient_fx3	
[03:12:01]: cane_ancient_fx2	
[03:12:01]: cane_ancient_fx3	
[03:12:01]: cane_ancient_fx1	
[03:12:01]: spider	
[03:12:01]: dyc_healthbar	
[03:12:01]: dyc_healthbarchild	
[03:12:03]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(-248.98, -320.25)
[03:12:03]: cane_ancient_fx3	
[03:12:03]: cane_ancient_fx1	
[03:12:03]: cane_ancient_fx1	
[03:12:03]: cane_ancient_fx2	
[03:12:03]: spider	
[03:12:03]: dyc_healthbar	
[03:12:03]: dyc_healthbarchild	
[03:12:04]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(-248.98, -320.25)
[03:12:04]: cane_ancient_fx3	
[03:12:04]: cane_ancient_fx1	
[03:12:04]: cane_ancient_fx1	
[03:12:04]: cane_ancient_fx3	
[03:12:05]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(-249.69, -317.44)
[03:12:05]: spider	
[03:12:05]: dyc_healthbar	
[03:12:05]: dyc_healthbarchild	
[03:12:05]: cane_ancient_fx2	
[03:12:05]: cane_ancient_fx3	
[03:12:05]: flower	
[03:12:05]: evergreen	
[03:12:05]: spidergland	
[03:12:10]: Server Autopaused	
[03:12:11]: Server Unpaused	
[03:12:45]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(-289.92, -370.35)
[03:12:45]: cane_ancient_fx2	
[03:12:45]: cane_ancient_fx2	
[03:12:45]: cane_ancient_fx3	
[03:12:45]: cane_ancient_fx1	
[03:12:45]: spiderden	
[03:12:45]: cane_ancient_fx2	
[03:12:45]: cane_ancient_fx2	
[03:13:07]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(-299.42, -347.03)
[03:13:07]: cane_ancient_fx3	
[03:13:07]: cane_ancient_fx2	
[03:13:07]: cane_ancient_fx2	
[03:13:07]: cane_ancient_fx3	
[03:13:07]: cane_ancient_fx1	
[03:13:07]: cane_ancient_fx3	
[03:13:07]: spiderden	
[03:13:07]: evergreen	
[03:13:08]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(-299.43, -347.10)
[03:13:08]: cane_ancient_fx1	
[03:13:08]: cane_ancient_fx2	
[03:13:08]: cane_ancient_fx3	
[03:13:08]: spider	
[03:13:08]: dyc_healthbar	
[03:13:08]: dyc_healthbarchild	
[03:13:10]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(-293.31, -347.15)
[03:13:10]: cane_ancient_fx3	
[03:13:10]: cane_ancient_fx2	
[03:13:10]: cane_ancient_fx1	
[03:13:10]: cane_ancient_fx1	
[03:13:10]: spider	
[03:13:10]: dyc_healthbar	
[03:13:10]: dyc_healthbarchild	
[03:13:10]: sapling	
[03:13:10]: cane_ancient_fx3	
[03:13:15]: Server Autopaused	
[03:13:16]: Server Unpaused	
[03:13:33]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local b = p.components.builder local t = p.components.talker if p and b and t then t:Say(b.freebuildmode and "创造模式:禁用" or "创造模式:启用") b:GiveAllRecipes() end) @(-218.08, -373.49)
[03:14:46]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(-186.40, -385.99)
[03:14:46]: evergreen_sparse	
[03:14:46]: smallghost	
[03:14:46]: hotcold_fx	
[03:14:46]: evergreen_sparse	
[03:14:49]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(-186.41, -380.92)
[03:14:49]: evergreen_sparse	
[03:14:49]: evergreen_sparse	
[03:14:50]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function InInv(b) local inv = b.components.inventoryitem return inv and inv.owner and true or false end local function CanDelete(inst) if inst and inst ~= TheWorld and not InInv(inst) and inst.Transform then if inst:HasTag("player") then if inst.userid == nil or inst.userid == "" then return true end else return true end end return false end if player and player.Transform then if player.components.burnable then player.components.burnable:Extinguish(true) end local x,y,z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x,y,z, 3) for _, obj in pairs(ents) do if CanDelete(obj) then if obj.components then if obj.components.burnable then obj.components.burnable:Extinguish(true) end if obj.components.firefx then if obj.components.firefx.extinguishsoundtest then obj.components.firefx.extinguishsoundtest = function() return true end end obj.components.firefx:Extinguish() end end if (not (obj.prefab == "minerhatlight" or "lanternlight" or "yellowamuletlight" or "slurperlight" or "redlanternlight" or "lighterfire" or "torchfire" or "torchfire_rag" or "torchfire_spooky" or "torchfire_shadow")) or (obj.entity:GetParent() == nil) then obj:Remove() print(obj.prefab) end end end end) @(-187.55, -382.45)
[03:14:50]: evergreen_sparse	
[03:15:07]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "ghostflower" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("ghostflower", "ghostflower", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "ghostflower" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "ghostflower" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(-193.09, -379.34)
[03:15:12]: Server Autopaused	
[03:15:13]: Server Unpaused	
[03:15:26]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player ~= nil then local function tmi_goto(prefab) if player.Physics ~= nil then player.Physics:Teleport(prefab.Transform:GetWorldPosition()) else player.Transform:SetPosition(prefab.Transform:GetWorldPosition()) end end local target = c_findnext("pigking") if target == nil then target = c_findnext("") end tmi_goto(target) end) @(-175.71, -406.75)
[03:15:26]: Finding a 	pigking	
[03:15:26]: Found 108527 (1/1)	
[03:15:33]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(TheWorld:PushEvent("ms_nextphase")) @(-159.23, -175.08)
[03:15:34]: Available disk space for save files: 82328 MB
[03:15:34]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000023
[03:15:34]: Serializing world: session/4F0D0D0885D2D513/0000000023
[03:15:50]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if not player or player:HasTag("playerghost") then return end local inv = player.components.inventory local x, y, z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x, y, z, 30, { "_inventoryitem" }, { "INLIMBO", "NOCLICK", "catchable", "fire" }) local baits = { ["powcake"] = true, ["pigskin"] = true, ["winter_food4"] = true, } local function Wall(item) local xx, yy ,zz = item.Transform:GetWorldPosition() local nents = TheSim:FindEntities(xx, yy, zz, 3) local targets = 0 for _, vv in ipairs(nents) do if vv:HasTag("wall") and vv.components.health then targets = targets + 1 end end return targets end for _, v in ipairs(ents) do local c = v.components if c.inventoryitem ~= nil and c.inventoryitem.canbepickedup and c.inventoryitem.cangoincontainer and not c.inventoryitem:IsHeld() and not v:HasTag("flower") and not v:HasTag("trap") and not v:HasTag("mine") and not v:HasTag("cage") and not string.find(v.prefab, "mooneye") and inv and inv:CanAcceptCount(v, 1) > 0 then if c.trap ~= nil and c.trap:IsSprung() then c.trap:Harvest(player) else if baits[v.prefab] then if Wall(v) < 7 then inv:GiveItem(v) end else if c.bait then if not c.bait.trap then inv:GiveItem(v) end else inv:GiveItem(v) end end end end end) @(-150.76, -182.85)
[03:16:20]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "beefalo" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 1 or 1 do local inst = SpawnPrefab("beefalo", "beefalo", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "beefalo" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "beefalo" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(-218.39, -166.75)
[03:16:23]: Server Autopaused	
[03:16:25]: Server Unpaused	
[03:16:49]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "beefalo" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 1 or 1 do local inst = SpawnPrefab("beefalo", "beefalo", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "beefalo" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "beefalo" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(-222.98, -166.51)
[03:16:51]: Server Autopaused	
[03:16:52]: Server Unpaused	
[03:17:07]: Server Autopaused	
[03:17:08]: Server Unpaused	
[03:18:04]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player ~= nil then local function tmi_goto(prefab) if player.Physics ~= nil then player.Physics:Teleport(prefab.Transform:GetWorldPosition()) else player.Transform:SetPosition(prefab.Transform:GetWorldPosition()) end end local target = c_findnext("beequeenhive") if target == nil then target = c_findnext("beequeenhivegrown") end tmi_goto(target) end) @(-280.33, -141.31)
[03:18:04]: Finding a 	beequeenhive	
[03:18:04]: Found 101310 (1/1)	
[03:18:35]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local c = p.components.combat or nil local t = p.components.talker if p and c and t and c.CalcDamage then if c.OldCalcDamage then p.components.talker:Say("一击必杀模式:禁用") c.CalcDamage = c.OldCalcDamage c.OldCalcDamage = nil else p.components.talker:Say("一击必杀模式:启用") c.OldCalcDamage = c.CalcDamage c.CalcDamage = function(...) return 9999999999*9 end end end) @(339.24, -568.00)
[03:18:56]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "flower" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("flower", "flower", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "flower" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "flower" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(342.50, -542.97)
[03:19:03]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "flower" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("flower", "flower", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "flower" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "flower" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(336.09, -541.22)
[03:19:04]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "flower" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("flower", "flower", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "flower" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "flower" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(336.07, -541.21)
[03:19:09]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if not player or player:HasTag("playerghost") then return end local inv = player.components.inventory local x, y, z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x, y, z, 30, { "_inventoryitem" }, { "INLIMBO", "NOCLICK", "catchable", "fire" }) local baits = { ["powcake"] = true, ["pigskin"] = true, ["winter_food4"] = true, } local function Wall(item) local xx, yy ,zz = item.Transform:GetWorldPosition() local nents = TheSim:FindEntities(xx, yy, zz, 3) local targets = 0 for _, vv in ipairs(nents) do if vv:HasTag("wall") and vv.components.health then targets = targets + 1 end end return targets end for _, v in ipairs(ents) do local c = v.components if c.inventoryitem ~= nil and c.inventoryitem.canbepickedup and c.inventoryitem.cangoincontainer and not c.inventoryitem:IsHeld() and not v:HasTag("flower") and not v:HasTag("trap") and not v:HasTag("mine") and not v:HasTag("cage") and not string.find(v.prefab, "mooneye") and inv and inv:CanAcceptCount(v, 1) > 0 then if c.trap ~= nil and c.trap:IsSprung() then c.trap:Harvest(player) else if baits[v.prefab] then if Wall(v) < 7 then inv:GiveItem(v) end else if c.bait then if not c.bait.trap then inv:GiveItem(v) end else inv:GiveItem(v) end end end end end) @(355.42, -547.52)
[03:19:20]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 1) end) @(345.09, -541.23)
[03:19:24]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "beefalo" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 1 or 1 do local inst = SpawnPrefab("beefalo", "beefalo", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "beefalo" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "beefalo" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(335.03, -538.80)
[03:19:28]: Server Autopaused	
[03:19:29]: Server Unpaused	
[03:19:37]: Server Autopaused	
[03:19:40]: Server Unpaused	
[03:19:43]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 3) end) @(344.61, -550.31)
[03:21:06]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local b = p.components.builder local t = p.components.talker if p and b and t then t:Say(b.freebuildmode and "创造模式:禁用" or "创造模式:启用") b:GiveAllRecipes() end) @(540.11, -620.37)
[03:21:19]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if player ~= nil and player.components.locomotor then player.components.locomotor:SetExternalSpeedMultiplier(player, "c_speedmult", 1) end) @(518.53, -620.93)
[03:21:29]: Could not find anim [buck] in bank [wilson]
[03:21:29]: Could not find anim [buck] in bank [wilson]
[03:21:51]: Could not find anim [buck] in bank [wilson]
[03:21:51]: Could not find anim [buck] in bank [wilson]
[03:22:02]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then ThePlayer.components.talker:Say("该玩家与你不在同一世界！命令无法生效。") return end local p = player local b = p.components.builder local t = p.components.talker if p and b and t then t:Say(b.freebuildmode and "创造模式:禁用" or "创造模式:启用") b:GiveAllRecipes() end) @(536.96, -636.16)
[03:22:13]: Could not find anim [buck] in bank [wilson]
[03:22:13]: Could not find anim [buck] in bank [wilson]
[03:22:26]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "charcoal" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("charcoal", "charcoal", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "charcoal" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "charcoal" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(521.48, -633.26)
[03:22:26]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "charcoal" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("charcoal", "charcoal", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "charcoal" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "charcoal" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(521.48, -633.26)
[03:22:27]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "charcoal" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("charcoal", "charcoal", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "charcoal" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "charcoal" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(521.48, -633.26)
[03:22:36]: Could not find anim [buck] in bank [wilson]
[03:22:36]: Could not find anim [buck] in bank [wilson]
[03:22:59]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(TheWorld:PushEvent("ms_nextphase")) @(516.92, -617.43)
[03:23:00]: Available disk space for save files: 82322 MB
[03:23:01]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000024
[03:23:01]: Missing reference:	153541 - beefaloherd	->	153483	153483 - beefalo	
[03:23:01]: Serializing world: session/4F0D0D0885D2D513/0000000024
[03:23:14]: Could not find anim [dismount] in bank [wilson]
[03:23:14]: Could not find anim [dismount] in bank [wilson]
[03:23:44]: Could not find anim [buck] in bank [wilson]
[03:23:44]: Could not find anim [buck] in bank [wilson]
[03:23:54]: Could not find anim [dismount] in bank [wilson]
[03:25:33]: Could not find anim [buck] in bank [wilson]
[03:25:33]: Could not find anim [buck] in bank [wilson]
[03:25:59]: Could not find anim [buck] in bank [wilson]
[03:25:59]: Could not find anim [buck] in bank [wilson]
[03:26:09]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "fireflies" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 1 or 1 do local inst = SpawnPrefab("fireflies", "fireflies", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "fireflies" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "fireflies" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(535.47, -625.78)
[03:26:10]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "fireflies" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("fireflies", "fireflies", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "fireflies" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "fireflies" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(535.47, -625.98)
[03:26:11]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end local function onturnon(inst) if inst._stage == 3 then if inst.AnimState:IsCurrentAnimation("proximity_pre") or inst.AnimState:IsCurrentAnimation("proximity_loop") or inst.AnimState:IsCurrentAnimation("place3") then inst.AnimState:PushAnimation("proximity_pre") else inst.AnimState:PlayAnimation("proximity_pre") end inst.AnimState:PushAnimation("proximity_loop", true) end end local function onturnoff(inst) if inst._stage == 3 then inst.AnimState:PlayAnimation("proximity_pst") inst.AnimState:PushAnimation("idle3", false) end end if player ~= nil and player.Transform then	if "fireflies" == "klaus" then	local pos = player:GetPosition() local minplayers = math.huge local spawnx, spawnz FindWalkableOffset(pos,	math.random() * 2 * PI, 33, 16, true, true, function(pt) local count = #FindPlayersInRangeSq(pt.x, pt.y, pt.z, 625) if count < minplayers then minplayers = count spawnx, spawnz = pt.x, pt.z return count <= 0 end return false end) if spawnx == nil then local offset = FindWalkableOffset(pos, math.random() * 2 * PI, 3, 8, false, true) if offset ~= nil then spawnx, spawnz = pos.x + offset.x, pos.z + offset.z end end local klaus = SpawnPrefab("klaus") klaus.Transform:SetPosition(spawnx or pos.x, 0, spawnz or pos.z) klaus:SpawnDeer() klaus.components.knownlocations:RememberLocation("spawnpoint", pos, false) klaus.components.spawnfader:FadeIn() else local x,y,z = player.Transform:GetWorldPosition() for i = 1, 10 or 1 do local inst = SpawnPrefab("fireflies", "fireflies", nil, "KU_0vPtViED") if inst ~= nil and inst.components then	if inst.components.skinner ~= nil and IsRestrictedCharacter(inst.prefab) then inst.components.skinner:SetSkinMode("normal_skin") end if inst.components.inventoryitem ~= nil then if player.components and player.components.inventory then player.components.inventory:GiveItem(inst) end	else inst.Transform:SetPosition(x,y,z) if "fireflies" == "deciduoustree" then inst:StartMonster(true) end end if not inst.components.health then if inst.components.perishable then inst.components.perishable:SetPercent(1)	end	if inst.components.finiteuses then inst.components.finiteuses:SetPercent(1) end if inst.components.fueled then inst.components.fueled:SetPercent(1) end if inst.components.temperature then	inst.components.temperature:SetTemperature(25) end if 1 ~= 1 and inst.components.follower then inst.components.follower:SetLeader(player) end if "fireflies" == "moon_altar" then inst._stage =3 inst.AnimState:PlayAnimation("idle3")	inst:AddComponent("prototyper") inst.components.prototyper.trees = TUNING.PROTOTYPER_TREES.MOON_ALTAR_FULL inst.components.prototyper.onturnon = onturnon inst.components.prototyper.onturnoff = onturnoff inst.components.lootdropper:SetLoot({ "moon_altar_idol", "moon_altar_glass", "moon_altar_seed" }) end	end	end end	end	end) @(535.47, -625.98)
[03:26:22]: Could not find anim [dismount] in bank [wilson]
[03:26:22]: Could not find anim [dismount] in bank [wilson]
[03:26:41]: Server Autopaused	
[03:26:44]: Server Unpaused	
[03:27:00]: Could not find anim [buck] in bank [wilson]
[03:27:00]: Could not find anim [buck] in bank [wilson]
[03:27:29]: Could not find anim [buck] in bank [wilson]
[03:27:29]: Could not find anim [buck] in bank [wilson]
[03:27:56]: Could not find anim [buck] in bank [wilson]
[03:28:08]: Could not find anim [dismount] in bank [wilson]
[03:28:08]: Could not find anim [dismount] in bank [wilson]
[03:28:49]: Could not find anim [buck] in bank [wilson]
[03:29:38]: Could not find anim [dismount] in bank [wilson]
[03:29:53]: Server Autopaused	
[03:30:07]: [200] Account Communication Success (6)
[03:30:07]: Received (KU_0vPtViED) from TokenPurpose
[03:30:24]: Server Unpaused	
[03:30:33]: Server Autopaused	
[03:30:34]: Server Unpaused	
[03:30:47]: Could not find anim [buck] in bank [wilson]
[03:30:47]: Could not find anim [buck] in bank [wilson]
[03:31:28]: Could not find anim [buck] in bank [wilson]
[03:31:28]: Could not find anim [buck] in bank [wilson]
[03:31:36]: Available disk space for save files: 82316 MB
[03:31:37]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000025
[03:31:37]: Missing reference:	153541 - beefaloherd	->	153483	153483 - beefalo	
[03:31:37]: Serializing world: session/4F0D0D0885D2D513/0000000025
[03:32:10]: Server Autopaused	
[03:34:54]: Server Unpaused	
[03:34:55]: Could not find anim [buck] in bank [wilson]
[03:35:09]: Server Autopaused	
[03:35:12]: Server Unpaused	
[03:35:23]: Could not find anim [dismount] in bank [wilson]
[03:35:23]: Could not find anim [dismount] in bank [wilson]
[03:36:53]: [(KU_0vPtViED) Xac] ReceiveRemoteExecute(local player = UserToPlayer('KU_0vPtViED') if player == nil then UserToPlayer("KU_0vPtViED").components.talker:Say("该玩家与你不在同一世界！命令无法生效。") end if not player or player:HasTag("playerghost") then return end local inv = player.components.inventory local x, y, z = player.Transform:GetWorldPosition() local ents = TheSim:FindEntities(x, y, z, 30, { "_inventoryitem" }, { "INLIMBO", "NOCLICK", "catchable", "fire" }) local baits = { ["powcake"] = true, ["pigskin"] = true, ["winter_food4"] = true, } local function Wall(item) local xx, yy ,zz = item.Transform:GetWorldPosition() local nents = TheSim:FindEntities(xx, yy, zz, 3) local targets = 0 for _, vv in ipairs(nents) do if vv:HasTag("wall") and vv.components.health then targets = targets + 1 end end return targets end for _, v in ipairs(ents) do local c = v.components if c.inventoryitem ~= nil and c.inventoryitem.canbepickedup and c.inventoryitem.cangoincontainer and not c.inventoryitem:IsHeld() and not v:HasTag("flower") and not v:HasTag("trap") and not v:HasTag("mine") and not v:HasTag("cage") and not string.find(v.prefab, "mooneye") and inv and inv:CanAcceptCount(v, 1) > 0 then if c.trap ~= nil and c.trap:IsSprung() then c.trap:Harvest(player) else if baits[v.prefab] then if Wall(v) < 7 then inv:GiveItem(v) end else if c.bait then if not c.bait.trap then inv:GiveItem(v) end else inv:GiveItem(v) end end end end end) @(554.82, -555.77)
[03:37:09]: Server Autopaused	
[03:37:14]: Server Unpaused	
[03:37:15]: [Steam] SendUserDisconnect for '76561198105084721'
[03:37:15]: [Shard] (KU_0vPtViED) disconnected from [SHDMASTER](1)
[03:37:15]: [IPC] Received shutdown signal.
[03:37:15]: Available disk space for save files: 82312 MB
[03:37:16]: Serializing user: session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000026
[03:37:16]: Missing reference:	153541 - beefaloherd	->	153483	153483 - beefalo	
[03:37:16]: Serializing world: session/4F0D0D0885D2D513/0000000026
[03:37:16]: Truncating to snapshot #26...
[03:37:16]:  - session/4F0D0D0885D2D513/0000000002
[03:37:16]:  - session/4F0D0D0885D2D513/0000000003
[03:37:16]:  - session/4F0D0D0885D2D513/0000000004
[03:37:16]:  - session/4F0D0D0885D2D513/0000000005
[03:37:16]:  - session/4F0D0D0885D2D513/0000000006
[03:37:16]:  - session/4F0D0D0885D2D513/0000000007
[03:37:16]:  - session/4F0D0D0885D2D513/0000000008
[03:37:16]:  - session/4F0D0D0885D2D513/0000000009
[03:37:16]:  - session/4F0D0D0885D2D513/0000000010
[03:37:16]:  - session/4F0D0D0885D2D513/0000000011
[03:37:16]:  - session/4F0D0D0885D2D513/0000000012
[03:37:16]:  - session/4F0D0D0885D2D513/0000000013
[03:37:16]:  - session/4F0D0D0885D2D513/0000000014
[03:37:16]:  - session/4F0D0D0885D2D513/0000000015
[03:37:16]:  - session/4F0D0D0885D2D513/0000000016
[03:37:16]:  - session/4F0D0D0885D2D513/0000000017
[03:37:16]:  - session/4F0D0D0885D2D513/0000000018
[03:37:16]:  - session/4F0D0D0885D2D513/0000000019
[03:37:16]:  - session/4F0D0D0885D2D513/0000000020
[03:37:16]:  - session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000020
[03:37:16]:  - session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000019
[03:37:16]:  - session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000018
[03:37:16]:  - session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000017
[03:37:16]:  - session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000016
[03:37:16]:  - session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000015
[03:37:16]:  - session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000014
[03:37:16]:  - session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000013
[03:37:16]:  - session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000012
[03:37:16]:  - session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000011
[03:37:16]:  - session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000010
[03:37:16]:  - session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000009
[03:37:16]:  - session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000008
[03:37:16]:  - session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000007
[03:37:16]:  - session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000006
[03:37:16]:  - session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000005
[03:37:16]:  - session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000004
[03:37:16]:  - session/4F0D0D0885D2D513/A7G3IPRNTGSD/0000000003
[03:37:16]:    37 file(s) removed
[03:37:16]: Removing server from lobby
[03:37:16]: [Shard] Stopping shard mode
[03:37:16]: [Steam] SendUserDisconnect for ''
[03:37:16]: Collecting garbage...
[03:37:17]: lua_gc took 0.30 seconds
[03:37:17]: ~ShardLuaProxy()
[03:37:17]: ~cEventLeaderboardProxy()
[03:37:17]: ~ItemServerLuaProxy()
[03:37:17]: ~InventoryLuaProxy()
[03:37:17]: ~NetworkLuaProxy()
[03:37:17]: ~SimLuaProxy()
[03:37:17]: Cancelling LuaQueryCallback handle [238]
[03:37:17]: Cancelling LuaQueryCallback handle [239]
[03:37:17]: lua_close took 0.45 seconds
[03:37:17]: CurlRequestManager::ClientThread::Main() complete
[03:37:17]: HttpClient2 discarded 0 callbacks.
[03:37:18]: Shutting down
